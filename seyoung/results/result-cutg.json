[
  {
    "filename": "addthis_stream-lib.json",
    "name_to_id": {
      "com.clearspring.analytics.hash.TestLookup3Hash#testEqualsLOOKUP3": 0,
      "com.clearspring.analytics.hash.TestLookup3Hash#testHash": 1,
      "com.clearspring.analytics.hash.TestMurmurHash#testHash": 2,
      "com.clearspring.analytics.hash.TestMurmurHash#testHash64": 3,
      "com.clearspring.analytics.hash.TestMurmurHash#testHash64ByteArrayOverload": 4,
      "com.clearspring.analytics.hash.TestMurmurHash#testHashByteArrayOverload": 5,
      "com.clearspring.analytics.stream.TestConcurrentStreamSummary#testGeometricDistribution": 6,
      "com.clearspring.analytics.stream.TestConcurrentStreamSummary#testStreamSummary": 7,
      "com.clearspring.analytics.stream.TestConcurrentStreamSummary#testTopK": 8,
      "com.clearspring.analytics.stream.TestConcurrentStreamSummary#testTopKWithIncrement": 9,
      "com.clearspring.analytics.stream.TestSampleSet#testPeekK": 10,
      "com.clearspring.analytics.stream.TestSampleSet#testPut": 11,
      "com.clearspring.analytics.stream.TestSampleSet#testPutWithIncrement": 12,
      "com.clearspring.analytics.stream.TestSampleSet#testRemoveMin": 13,
      "com.clearspring.analytics.stream.TestStochasticTopper#testGaussianDistribution": 14,
      "com.clearspring.analytics.stream.TestStochasticTopper#testGeometricDistribution": 15,
      "com.clearspring.analytics.stream.TestStochasticTopper#testRandomEngine": 16,
      "com.clearspring.analytics.stream.TestStochasticTopper#testZipfianDistribution": 17,
      "com.clearspring.analytics.stream.TestStreamSummary#testByteSerialization": 18,
      "com.clearspring.analytics.stream.TestStreamSummary#testCounterSerialization": 19,
      "com.clearspring.analytics.stream.TestStreamSummary#testGeometricDistribution": 20,
      "com.clearspring.analytics.stream.TestStreamSummary#testSerialization": 21,
      "com.clearspring.analytics.stream.TestStreamSummary#testStreamSummary": 22,
      "com.clearspring.analytics.stream.TestStreamSummary#testTopK": 23,
      "com.clearspring.analytics.stream.TestStreamSummary#testTopKWithIncrement": 24,
      "com.clearspring.analytics.stream.TestStreamSummary#testTopKWithIncrementOutOfOrder": 25,
      "com.clearspring.analytics.stream.cardinality.RegisterSetTest#testGetAndSet": 26,
      "com.clearspring.analytics.stream.cardinality.RegisterSetTest#testGetAndSet_allPositions": 27,
      "com.clearspring.analytics.stream.cardinality.RegisterSetTest#testGetAndSet_withSmallBits": 28,
      "com.clearspring.analytics.stream.cardinality.RegisterSetTest#testMerge": 29,
      "com.clearspring.analytics.stream.cardinality.RegisterSetTest#testMergeUsingUpdate": 30,
      "com.clearspring.analytics.stream.cardinality.TestAdaptiveCounting#testJ": 31,
      "com.clearspring.analytics.stream.cardinality.TestAdaptiveCounting#testMerge": 32,
      "com.clearspring.analytics.stream.cardinality.TestAdaptiveCounting#testRho": 33,
      "com.clearspring.analytics.stream.cardinality.TestAdaptiveCounting#testRhoL": 34,
      "com.clearspring.analytics.stream.cardinality.TestAdaptiveCounting#testSerialization": 35,
      "com.clearspring.analytics.stream.cardinality.TestCountThenEstimate#testAdaptiveCountingSerialization": 36,
      "com.clearspring.analytics.stream.cardinality.TestCountThenEstimate#testAdaptiveCountingSerialization_withHyperLogLog": 37,
      "com.clearspring.analytics.stream.cardinality.TestCountThenEstimate#testHyperLogLogSerialization": 38,
      "com.clearspring.analytics.stream.cardinality.TestCountThenEstimate#testLinearCountingSerialization": 39,
      "com.clearspring.analytics.stream.cardinality.TestCountThenEstimate#testMerge": 40,
      "com.clearspring.analytics.stream.cardinality.TestCountThenEstimate#testSmallMerge": 41,
      "com.clearspring.analytics.stream.cardinality.TestCountThenEstimate#testTip": 42,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLog#testComputeCount": 43,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLog#testHighCardinality": 44,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLog#testHighCardinality_withDefinedRSD": 45,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLog#testMerge": 46,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLog#testMergeWithRegisterSet": 47,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLog#testSerialization": 48,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLog#testSerializationUsingBuilder": 49,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#consistentBytes": 50,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testComputeCount": 51,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testEquals": 52,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testHighCardinality": 53,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testHighPrecisionInitialization": 54,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testLegacyCodec_normal": 55,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testLegacyCodec_sparse": 56,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testMergeSelf": 57,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testMergeSelf_forceNormal": 58,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testMerge_ManySparse": 59,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testMerge_Normal": 60,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testMerge_Sparse": 61,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testMerge_SparseIntersection": 62,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testOne": 63,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testSerialization": 64,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testSerializationWithNewSortMethod": 65,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testSerialization_Normal": 66,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testSerialization_Sparse": 67,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testSmallCardinalityRepeatedInsert": 68,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testSortEncodedSet": 69,
      "com.clearspring.analytics.stream.cardinality.TestHyperLogLogPlus#testSparseSpace": 70,
      "com.clearspring.analytics.stream.cardinality.TestLinearCounting#testArbitraryStdErrorSize": 71,
      "com.clearspring.analytics.stream.cardinality.TestLinearCounting#testBuilder": 72,
      "com.clearspring.analytics.stream.cardinality.TestLinearCounting#testBuilderIllegalArgumentNegative": 73,
      "com.clearspring.analytics.stream.cardinality.TestLinearCounting#testBuilderIllegalArgumentZero": 74,
      "com.clearspring.analytics.stream.cardinality.TestLinearCounting#testComputeCount": 75,
      "com.clearspring.analytics.stream.cardinality.TestLinearCounting#testMerge": 76,
      "com.clearspring.analytics.stream.cardinality.TestLinearCounting#testSaturation": 77,
      "com.clearspring.analytics.stream.cardinality.TestLinearCounting#testSerialization": 78,
      "com.clearspring.analytics.stream.cardinality.TestLogLog#testHighCardinality": 79,
      "com.clearspring.analytics.stream.cardinality.TestLogLog#testHighCardinalityHighOrder": 80,
      "com.clearspring.analytics.stream.cardinality.TestLogLog#testMerge": 81,
      "com.clearspring.analytics.stream.cardinality.TestLogLog#testSerialization": 82,
      "com.clearspring.analytics.stream.frequency.ConservativeAddSketchTest#merge": 83,
      "com.clearspring.analytics.stream.frequency.ConservativeAddSketchTest#testAccuracy": 84,
      "com.clearspring.analytics.stream.frequency.ConservativeAddSketchTest#testAccuracyStrings": 85,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#merge": 86,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#negativeSize": 87,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#sizeOverflow": 88,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#testAccuracy": 89,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#testAccuracyStrings": 90,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#testEquals": 91,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#testMergeEmpty": 92,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#testSerializationForConfidenceCms": 93,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#testSerializationForDepthCms": 94,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#testSize": 95,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#testSizeCanStoreLong": 96,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#testToString": 97,
      "com.clearspring.analytics.stream.frequency.CountMinSketchTest#testUncompatibleMerge": 98,
      "com.clearspring.analytics.stream.membership.Base64Test#testBase64EncodedBloomFilter": 99,
      "com.clearspring.analytics.stream.membership.BloomFilterTest#testFalsePositiveRate": 100,
      "com.clearspring.analytics.stream.membership.BloomFilterTest#testFalsePositivesInt": 101,
      "com.clearspring.analytics.stream.membership.BloomFilterTest#testFalsePositivesRandom": 102,
      "com.clearspring.analytics.stream.membership.BloomFilterTest#testGetFalsePositiveProbability": 103,
      "com.clearspring.analytics.stream.membership.BloomFilterTest#testHashCount": 104,
      "com.clearspring.analytics.stream.membership.BloomFilterTest#testMerge": 105,
      "com.clearspring.analytics.stream.membership.BloomFilterTest#testMergeException": 106,
      "com.clearspring.analytics.stream.membership.BloomFilterTest#testOne": 107,
      "com.clearspring.analytics.stream.membership.BloomFilterTest#testSerialize": 108,
      "com.clearspring.analytics.stream.membership.BloomFilterTest#testSizing": 109,
      "com.clearspring.analytics.stream.membership.BloomFilterTest#testWords": 110,
      "com.clearspring.analytics.stream.membership.FilterTest#testManyRandom": 111,
      "com.clearspring.analytics.stream.quantile.GroupTreeTest#testBalancing": 112,
      "com.clearspring.analytics.stream.quantile.GroupTreeTest#testFloor": 113,
      "com.clearspring.analytics.stream.quantile.GroupTreeTest#testIterators": 114,
      "com.clearspring.analytics.stream.quantile.GroupTreeTest#testRandomRebalance": 115,
      "com.clearspring.analytics.stream.quantile.GroupTreeTest#testRemoveAndSums": 116,
      "com.clearspring.analytics.stream.quantile.GroupTreeTest#testSimpleAdds": 117,
      "com.clearspring.analytics.stream.quantile.QDigestTest#testComprehensiveOnMixture": 118,
      "com.clearspring.analytics.stream.quantile.QDigestTest#testMerge": 119,
      "com.clearspring.analytics.stream.quantile.QDigestTest#testSerialization": 120,
      "com.clearspring.analytics.stream.quantile.TDigestTest#compareToQDigest": 121,
      "com.clearspring.analytics.stream.quantile.TDigestTest#testGamma": 122,
      "com.clearspring.analytics.stream.quantile.TDigestTest#testIntEncoding": 123,
      "com.clearspring.analytics.stream.quantile.TDigestTest#testMerge": 124,
      "com.clearspring.analytics.stream.quantile.TDigestTest#testNarrowNormal": 125,
      "com.clearspring.analytics.stream.quantile.TDigestTest#testRepeatedValues": 126,
      "com.clearspring.analytics.stream.quantile.TDigestTest#testScaling": 127,
      "com.clearspring.analytics.stream.quantile.TDigestTest#testSequentialPoints": 128,
      "com.clearspring.analytics.stream.quantile.TDigestTest#testSerialization": 129,
      "com.clearspring.analytics.stream.quantile.TDigestTest#testSizeControl": 130,
      "com.clearspring.analytics.stream.quantile.TDigestTest#testUniform": 131,
      "com.clearspring.analytics.util.TestDoublyLinkedList#testAdd": 132,
      "com.clearspring.analytics.util.TestDoublyLinkedList#testAddAfter": 133,
      "com.clearspring.analytics.util.TestDoublyLinkedList#testAddNode": 134,
      "com.clearspring.analytics.util.TestDoublyLinkedList#testConcurrentModification": 135,
      "com.clearspring.analytics.util.TestDoublyLinkedList#testDoublyLinkedList": 136,
      "com.clearspring.analytics.util.TestDoublyLinkedList#testEnqueue": 137,
      "com.clearspring.analytics.util.TestDoublyLinkedList#testRemove": 138
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            121, 57, 129, 124, 128, 122, 131, 125, 126, 127, 59, 55, 64, 66, 51,
            68, 56, 50, 58, 60, 61, 53, 62, 52, 37, 38, 18, 115, 116, 67, 21,
            70, 1, 114, 25, 20, 22, 19, 118, 119, 23, 36, 24, 40, 65, 39, 14,
            63, 15, 17, 48, 108, 49, 32, 120, 45, 42, 90, 44, 46, 109, 35, 41,
            0, 112, 83, 113, 85, 47, 99, 101, 110, 102, 43, 105, 86, 100, 6, 79,
            80, 91, 89, 13, 96, 107, 117, 76, 8, 81, 9, 82, 111, 10, 7, 78, 84,
            138, 98, 133, 69, 29, 5, 77, 75, 2, 137, 54, 132, 134, 106, 30, 72,
            88, 95, 97, 4, 93, 94, 11, 3, 12, 71, 135, 123, 26, 27, 28, 103,
            104, 136, 16, 87, 92, 73, 74, 33, 34, 31, 130
          ]
        ],
        "APSC_c": 0.6337825115534581
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            121, 128, 122, 131, 126, 66, 68, 60, 61, 53, 62, 52, 37, 38, 18,
            115, 116, 67, 21, 70, 1, 114, 25, 20, 22, 19, 118, 119, 23, 36, 24,
            40, 65, 39, 14, 63, 15, 17, 48, 108, 49, 32, 120, 45, 44, 46, 109,
            35, 41, 0, 112, 83, 113, 85, 100, 80
          ],
          [
            57, 129, 124, 125, 127, 59, 55, 64, 51, 56, 50, 58, 42, 90, 47, 99,
            101, 110, 102, 43, 105, 86, 6, 79, 91, 89, 13, 96, 107, 117, 76, 8,
            81, 9, 82, 111, 10, 7, 78, 84, 138, 98, 133, 69, 29, 5, 77, 75, 2,
            137, 54, 132, 134, 106, 30, 72, 88, 95, 97, 4, 93, 94, 11, 3, 12,
            71, 135, 123, 26, 27, 28, 103, 104, 136, 16, 87, 92, 73, 74, 33, 34,
            31, 130
          ]
        ],
        "APSC_c": 0.8475849362750747
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [121, 120, 45],
          [57, 64, 66, 51, 56, 58],
          [
            129, 128, 122, 131, 125, 126, 68, 62, 52, 37, 38, 18, 115, 116, 67,
            21, 70, 1, 114, 25, 20, 22, 19, 118, 42, 90, 100, 80
          ],
          [
            124, 127, 59, 55, 50, 60, 61, 53, 119, 23, 36, 24, 40, 65, 39, 14,
            63, 15, 17, 48, 108, 49, 32, 44, 46, 109, 35, 41, 0, 112, 83, 113,
            85, 47, 99, 101, 110, 102, 43, 105, 86, 6, 79, 91, 89, 13, 96, 107,
            117, 76, 8, 81, 9, 82, 111, 10, 7, 78, 84, 138, 98, 133, 69, 29, 5,
            77, 75, 2, 137, 54, 132, 134, 106, 30, 72, 88, 95, 97, 4, 93, 94,
            11, 3, 12, 71, 135, 123, 26, 27, 28, 103, 104, 136, 16, 87, 92, 73,
            74, 33, 34, 31, 130
          ]
        ],
        "APSC_c": 0.9322096995901559
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [121],
          [
            57, 13, 96, 107, 117, 76, 8, 81, 138, 98, 133, 69, 29, 5, 77, 75, 2,
            137, 54, 132, 134, 106, 30, 72, 88, 95, 97, 4, 93, 94, 11, 3, 12,
            71, 135, 123, 26, 27, 28, 103, 104, 136, 16, 87, 92, 73, 74, 33, 34,
            31, 130
          ],
          [129, 126, 41, 112, 113, 85, 91, 89, 9, 82, 111, 10, 7, 78, 84],
          [124, 44, 35, 0, 83, 102, 43, 105, 86, 6, 79],
          [
            128, 64, 66, 51, 50, 60, 61, 53, 119, 23, 36, 24, 40, 65, 39, 14,
            63, 15, 17, 48, 108, 49, 32, 120, 45
          ],
          [122, 59, 56, 58],
          [
            131, 55, 68, 62, 52, 37, 38, 18, 115, 116, 67, 21, 70, 1, 114, 25,
            20, 22, 19, 118, 42, 90
          ],
          [125, 127, 46, 109, 47, 99, 101, 110, 100, 80]
        ],
        "APSC_c": 0.9790956448269904
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [121],
          [57],
          [129, 119, 23, 36, 65, 14, 48, 49, 120, 45],
          [124],
          [128, 47, 99, 101, 110, 79],
          [122, 35, 113, 85],
          [131, 41, 0, 112, 83, 6, 80],
          [125, 39, 17, 44],
          [126],
          [127],
          [59, 21, 1, 22, 19, 118, 100],
          [55, 116, 67, 70, 114, 25, 20, 24, 40, 63, 15, 108, 42, 90],
          [64, 50, 62, 52, 37, 38, 18, 115, 46, 102, 43, 105, 86],
          [66, 56, 60, 61, 53, 91, 89, 9, 82, 111, 10, 7, 78, 84],
          [51, 58],
          [
            68, 32, 109, 13, 96, 107, 117, 76, 8, 81, 138, 98, 133, 69, 29, 5,
            77, 75, 2, 137, 54, 132, 134, 106, 30, 72, 88, 95, 97, 4, 93, 94,
            11, 3, 12, 71, 135, 123, 26, 27, 28, 103, 104, 136, 16, 87, 92, 73,
            74, 33, 34, 31, 130
          ]
        ],
        "APSC_c": 0.9955081126787458
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            57, 125, 127, 60, 61, 53, 62, 52, 37, 38, 18, 115, 116, 67, 21, 70,
            1, 114, 25, 20, 22, 19, 118, 119, 23, 36, 24, 40, 65, 39, 14, 63,
            15, 17, 48, 108, 49, 32, 120, 45, 91, 89, 13, 96, 107, 117, 76, 8,
            81, 9, 82, 111, 10, 7, 78, 84, 138, 98, 133, 69, 29, 5, 77, 75, 2,
            137, 54, 132, 134, 106, 30, 72, 88, 95, 97, 4, 93, 94, 11, 3, 12,
            71, 135, 123, 26, 27, 28, 103, 104, 136, 16, 87, 92, 73, 74, 33, 34,
            31, 130
          ],
          [
            121, 129, 124, 128, 122, 131, 126, 59, 55, 64, 66, 51, 68, 56, 50,
            58, 42, 90, 44, 46, 109, 35, 41, 0, 112, 83, 113, 85, 47, 99, 101,
            110, 102, 43, 105, 86, 100, 6, 79, 80
          ]
        ],
        "APSC_c": 0.8939687505155306
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            57, 59, 55, 56, 58, 91, 89, 13, 96, 107, 117, 76, 8, 81, 9, 82, 111,
            10, 7, 78, 84
          ],
          [
            121, 129, 124, 128, 122, 131, 125, 126, 127, 64, 66, 51, 68, 50, 60,
            61, 53, 62, 52, 37, 38, 18, 115, 116, 67, 21, 70, 1, 114, 25, 20,
            22, 19, 118, 119, 23, 36, 24, 40, 65, 39, 14, 63, 15, 17, 48, 108,
            49, 32, 120, 45, 42, 90, 44, 46, 109, 35, 41, 0, 112, 83, 113, 85,
            47, 99, 101, 110, 102, 43, 105, 86, 100, 6, 79, 80, 138, 98, 133,
            69, 29, 5, 77, 75, 2, 137, 54, 132, 134, 106, 30, 72, 88, 95, 97, 4,
            93, 94, 11, 3, 12, 71, 135, 123, 26, 27, 28, 103, 104, 136, 16, 87,
            92, 73, 74, 33, 34, 31, 130
          ]
        ],
        "APSC_c": 0.9239000392316533
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [
            57, 60, 61, 53, 62, 52, 37, 38, 18, 115, 116, 67, 21, 70, 1, 114,
            25, 20, 22, 19, 118, 119, 23, 36, 24, 40, 65, 39, 14, 63, 15, 17,
            48, 108, 49, 32, 120, 45
          ],
          [
            121, 129, 124, 128, 122, 131, 125, 126, 127, 59, 55, 64, 66, 51, 68,
            56, 50, 58, 42, 90, 44, 46, 109, 35, 41, 0, 112, 83, 113, 85, 47,
            99, 101, 110, 102, 43, 105, 86, 100, 6, 79, 80, 91, 89, 13, 96, 107,
            117, 76, 8, 81, 9, 82, 111, 10, 7, 78, 84, 138, 98, 133, 69, 29, 5,
            77, 75, 2, 137, 54, 132, 134, 106, 30, 72, 88, 95, 97, 4, 93, 94,
            11, 3, 12, 71, 135, 123, 26, 27, 28, 103, 104, 136, 16, 87, 92, 73,
            74, 33, 34, 31, 130
          ]
        ],
        "APSC_c": 0.931201110229389
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [128, 56, 50, 53, 47, 110, 6, 79],
          [122, 59, 61, 62, 37, 18, 115, 48, 108, 49, 120, 42, 90],
          [
            131, 55, 60, 52, 38, 116, 67, 21, 70, 1, 114, 25, 20, 22, 19, 119,
            23, 36, 24, 40, 65, 39, 14, 63, 15, 17, 45
          ],
          [125, 127],
          [
            121, 100, 13, 96, 107, 117, 76, 8, 81, 138, 98, 133, 69, 29, 5, 77,
            75, 2, 137, 54, 132, 134, 106, 30, 72, 88, 95, 97, 4, 93, 94, 11, 3,
            12, 71, 135, 123, 26, 27, 28, 103, 104, 136, 16, 87, 92, 73, 74, 33,
            34, 31, 130
          ],
          [57, 46, 35, 41, 0, 112, 83, 99, 101, 102, 43, 105, 86, 80],
          [
            129, 126, 118, 32, 44, 109, 113, 85, 91, 89, 9, 82, 111, 10, 7, 78,
            84
          ],
          [124, 64, 66, 51, 68, 58]
        ],
        "APSC_c": 0.9895057408448469
      }
    ]
  },
  {
    "filename": "square_javapoet.json",
    "name_to_id": {
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotated": 0,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedArgumentOfParameterizedType": 1,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedArrayElementType": 2,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedArrayType": 3,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedArrayTypeInVarargsParameter": 4,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedArrayTypeVarargsParameter": 5,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedEnclosingAndNestedType": 6,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedEquivalence": 7,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedInnerMultidimensionalArrayType": 8,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedNestedParameterizedType": 9,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedNestedType": 10,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedOuterMultidimensionalArrayType": 11,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedParameterizedType": 12,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedTwice": 13,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedType": 14,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedWildcardTypeNameWithExtends": 15,
      "com.squareup.javapoet.AnnotatedTypeNameTest#annotatedWildcardTypeNameWithSuper": 16,
      "com.squareup.javapoet.AnnotatedTypeNameTest#nullAnnotationArray": 17,
      "com.squareup.javapoet.AnnotatedTypeNameTest#nullAnnotationList": 18,
      "com.squareup.javapoet.AnnotatedTypeNameTest#withoutAnnotationsOnAnnotatedEnclosingAndNestedType": 19,
      "com.squareup.javapoet.AnnotatedTypeNameTest#withoutAnnotationsOnAnnotatedEnclosingType": 20,
      "com.squareup.javapoet.AnnotatedTypeNameTest#withoutAnnotationsOnAnnotatedNestedType": 21,
      "com.squareup.javapoet.AnnotationSpecTest#defaultAnnotation": 22,
      "com.squareup.javapoet.AnnotationSpecTest#defaultAnnotationToBuilder": 23,
      "com.squareup.javapoet.AnnotationSpecTest#defaultAnnotationWithImport": 24,
      "com.squareup.javapoet.AnnotationSpecTest#disallowsNullMemberName": 25,
      "com.squareup.javapoet.AnnotationSpecTest#dynamicArrayOfEnumConstants": 26,
      "com.squareup.javapoet.AnnotationSpecTest#emptyArray": 27,
      "com.squareup.javapoet.AnnotationSpecTest#equalsAndHashCode": 28,
      "com.squareup.javapoet.AnnotationSpecTest#modifyMembers": 29,
      "com.squareup.javapoet.AnnotationSpecTest#reflectAnnotation": 30,
      "com.squareup.javapoet.AnnotationSpecTest#reflectAnnotationWithDefaults": 31,
      "com.squareup.javapoet.AnnotationSpecTest#requiresValidMemberName": 32,
      "com.squareup.javapoet.ClassNameTest#bestGuessForString_confusingInput": 33,
      "com.squareup.javapoet.ClassNameTest#bestGuessForString_defaultPackage": 34,
      "com.squareup.javapoet.ClassNameTest#bestGuessForString_nestedClass": 35,
      "com.squareup.javapoet.ClassNameTest#bestGuessForString_simpleClass": 36,
      "com.squareup.javapoet.ClassNameTest#bestGuessNonAscii": 37,
      "com.squareup.javapoet.ClassNameTest#canonicalName": 38,
      "com.squareup.javapoet.ClassNameTest#classNameFromClass": 39,
      "com.squareup.javapoet.ClassNameTest#classNameFromTypeElement": 40,
      "com.squareup.javapoet.ClassNameTest#classNameFromTypeElementDoesntUseGetKind": 41,
      "com.squareup.javapoet.ClassNameTest#createNestedClass": 42,
      "com.squareup.javapoet.ClassNameTest#fromClassRejectionTypes": 43,
      "com.squareup.javapoet.ClassNameTest#peerClass": 44,
      "com.squareup.javapoet.ClassNameTest#reflectionName": 45,
      "com.squareup.javapoet.CodeBlockTest#clear": 46,
      "com.squareup.javapoet.CodeBlockTest#danglingNamed": 47,
      "com.squareup.javapoet.CodeBlockTest#deindentCannotBeIndexed": 48,
      "com.squareup.javapoet.CodeBlockTest#dollarSignEscapeCannotBeIndexed": 49,
      "com.squareup.javapoet.CodeBlockTest#equalsAndHashCode": 50,
      "com.squareup.javapoet.CodeBlockTest#formatIndicatorAlone": 51,
      "com.squareup.javapoet.CodeBlockTest#formatIndicatorWithoutIndexOrFormatType": 52,
      "com.squareup.javapoet.CodeBlockTest#indentCannotBeIndexed": 53,
      "com.squareup.javapoet.CodeBlockTest#indexButNoArguments": 54,
      "com.squareup.javapoet.CodeBlockTest#indexIsNegative": 55,
      "com.squareup.javapoet.CodeBlockTest#indexIsZero": 56,
      "com.squareup.javapoet.CodeBlockTest#indexTooHigh": 57,
      "com.squareup.javapoet.CodeBlockTest#indexWithoutFormatType": 58,
      "com.squareup.javapoet.CodeBlockTest#indexWithoutFormatTypeNotAtStringEnd": 59,
      "com.squareup.javapoet.CodeBlockTest#isEmpty": 60,
      "com.squareup.javapoet.CodeBlockTest#join": 61,
      "com.squareup.javapoet.CodeBlockTest#joining": 62,
      "com.squareup.javapoet.CodeBlockTest#joiningSingle": 63,
      "com.squareup.javapoet.CodeBlockTest#joiningWithPrefixAndSuffix": 64,
      "com.squareup.javapoet.CodeBlockTest#literalFormatCanBeIndexed": 65,
      "com.squareup.javapoet.CodeBlockTest#lowerCaseNamed": 66,
      "com.squareup.javapoet.CodeBlockTest#missingNamedArgument": 67,
      "com.squareup.javapoet.CodeBlockTest#multipleNamedArguments": 68,
      "com.squareup.javapoet.CodeBlockTest#nameFormatCanBeIndexed": 69,
      "com.squareup.javapoet.CodeBlockTest#namedAndNoArgFormat": 70,
      "com.squareup.javapoet.CodeBlockTest#namedNewline": 71,
      "com.squareup.javapoet.CodeBlockTest#of": 72,
      "com.squareup.javapoet.CodeBlockTest#repeatedNamedArgument": 73,
      "com.squareup.javapoet.CodeBlockTest#sameIndexCanBeUsedWithDifferentFormats": 74,
      "com.squareup.javapoet.CodeBlockTest#simpleNamedArgument": 75,
      "com.squareup.javapoet.CodeBlockTest#statementBeginningCannotBeIndexed": 76,
      "com.squareup.javapoet.CodeBlockTest#statementEndingCannotBeIndexed": 77,
      "com.squareup.javapoet.CodeBlockTest#statementExitWithoutStatementEnter": 78,
      "com.squareup.javapoet.CodeBlockTest#stringFormatCanBeIndexed": 79,
      "com.squareup.javapoet.CodeBlockTest#tooManyStatementEnters": 80,
      "com.squareup.javapoet.CodeBlockTest#typeFormatCanBeIndexed": 81,
      "com.squareup.javapoet.CodeWriterTest#emptyLineInJavaDocDosEndings": 82,
      "com.squareup.javapoet.FieldSpecTest#equalsAndHashCode": 83,
      "com.squareup.javapoet.FieldSpecTest#modifyAnnotations": 84,
      "com.squareup.javapoet.FieldSpecTest#modifyModifiers": 85,
      "com.squareup.javapoet.FieldSpecTest#nullAnnotationsAddition": 86,
      "com.squareup.javapoet.FileReadingTest#compileJavaFile": 87,
      "com.squareup.javapoet.FileReadingTest#javaFileObjectCharacterContent": 88,
      "com.squareup.javapoet.FileReadingTest#javaFileObjectInputStreamIsUtf8": 89,
      "com.squareup.javapoet.FileReadingTest#javaFileObjectKind": 90,
      "com.squareup.javapoet.FileReadingTest#javaFileObjectUri": 91,
      "com.squareup.javapoet.FileWritingTest#fileDefaultPackage": 92,
      "com.squareup.javapoet.FileWritingTest#fileIsUtf8": 93,
      "com.squareup.javapoet.FileWritingTest#fileNestedClasses": 94,
      "com.squareup.javapoet.FileWritingTest#fileNotDirectory": 95,
      "com.squareup.javapoet.FileWritingTest#filerClassesWithTabIndent": 96,
      "com.squareup.javapoet.FileWritingTest#filerDefaultPackage": 97,
      "com.squareup.javapoet.FileWritingTest#filerNestedClasses": 98,
      "com.squareup.javapoet.FileWritingTest#filerPassesOriginatingElements": 99,
      "com.squareup.javapoet.FileWritingTest#pathDefaultPackage": 100,
      "com.squareup.javapoet.FileWritingTest#pathNestedClasses": 101,
      "com.squareup.javapoet.FileWritingTest#pathNotDirectory": 102,
      "com.squareup.javapoet.FileWritingTest#writeToPathReturnsPath": 103,
      "com.squareup.javapoet.JavaFileTest#alwaysQualifySimple": 104,
      "com.squareup.javapoet.JavaFileTest#alwaysQualifySupersedesJavaLangImports": 105,
      "com.squareup.javapoet.JavaFileTest#annotatedTypeParam": 106,
      "com.squareup.javapoet.JavaFileTest#annotationIsNestedClass": 107,
      "com.squareup.javapoet.JavaFileTest#avoidClashesWithNestedClasses_viaClass": 108,
      "com.squareup.javapoet.JavaFileTest#avoidClashesWithNestedClasses_viaSuperinterfaceType": 109,
      "com.squareup.javapoet.JavaFileTest#avoidClashesWithNestedClasses_viaTypeElement": 110,
      "com.squareup.javapoet.JavaFileTest#avoidClashes_mapEntry": 111,
      "com.squareup.javapoet.JavaFileTest#avoidClashes_parentChild_superclass_type": 112,
      "com.squareup.javapoet.JavaFileTest#avoidClashes_parentChild_superclass_typeMirror": 113,
      "com.squareup.javapoet.JavaFileTest#avoidClashes_parentChild_superinterface_type": 114,
      "com.squareup.javapoet.JavaFileTest#avoidClashes_parentChild_superinterface_typeMirror": 115,
      "com.squareup.javapoet.JavaFileTest#classAndSuperclassShareName": 116,
      "com.squareup.javapoet.JavaFileTest#conflictingAnnotation": 117,
      "com.squareup.javapoet.JavaFileTest#conflictingAnnotationReferencedClass": 118,
      "com.squareup.javapoet.JavaFileTest#conflictingChildName": 119,
      "com.squareup.javapoet.JavaFileTest#conflictingImports": 120,
      "com.squareup.javapoet.JavaFileTest#conflictingNameOutOfScope": 121,
      "com.squareup.javapoet.JavaFileTest#conflictingParentName": 122,
      "com.squareup.javapoet.JavaFileTest#conflictingTypeVariableBound": 123,
      "com.squareup.javapoet.JavaFileTest#defaultPackage": 124,
      "com.squareup.javapoet.JavaFileTest#defaultPackageTypesAreNotImported": 125,
      "com.squareup.javapoet.JavaFileTest#emptyLinesInTopOfFileComment": 126,
      "com.squareup.javapoet.JavaFileTest#importStaticForCrazyFormatsWorks": 127,
      "com.squareup.javapoet.JavaFileTest#importStaticMixed": 128,
      "com.squareup.javapoet.JavaFileTest#importStaticNone": 129,
      "com.squareup.javapoet.JavaFileTest#importStaticOnce": 130,
      "com.squareup.javapoet.JavaFileTest#importStaticReadmeExample": 131,
      "com.squareup.javapoet.JavaFileTest#importStaticTwice": 132,
      "com.squareup.javapoet.JavaFileTest#importStaticUsingWildcards": 133,
      "com.squareup.javapoet.JavaFileTest#modifyStaticImports": 134,
      "com.squareup.javapoet.JavaFileTest#nestedClassAndSuperclassShareName": 135,
      "com.squareup.javapoet.JavaFileTest#noImports": 136,
      "com.squareup.javapoet.JavaFileTest#packageClassConflictsWithNestedClass": 137,
      "com.squareup.javapoet.JavaFileTest#packageClassConflictsWithSuperlass": 138,
      "com.squareup.javapoet.JavaFileTest#singleImport": 139,
      "com.squareup.javapoet.JavaFileTest#skipJavaLangImportsWithConflictingClassFirst": 140,
      "com.squareup.javapoet.JavaFileTest#skipJavaLangImportsWithConflictingClassLast": 141,
      "com.squareup.javapoet.JavaFileTest#superclassReferencesSelf": 142,
      "com.squareup.javapoet.JavaFileTest#topOfFileComment": 143,
      "com.squareup.javapoet.LineWrapperTest#fencepost": 144,
      "com.squareup.javapoet.LineWrapperTest#fencepostZeroWidth": 145,
      "com.squareup.javapoet.LineWrapperTest#multipleWrite": 146,
      "com.squareup.javapoet.LineWrapperTest#noWrap": 147,
      "com.squareup.javapoet.LineWrapperTest#noWrapEmbeddedNewlines": 148,
      "com.squareup.javapoet.LineWrapperTest#noWrapEmbeddedNewlines_ZeroWidth": 149,
      "com.squareup.javapoet.LineWrapperTest#noWrapMultipleNewlines": 150,
      "com.squareup.javapoet.LineWrapperTest#nospaceWrapMax": 151,
      "com.squareup.javapoet.LineWrapperTest#overlyLongLinesWithLeadingSpace": 152,
      "com.squareup.javapoet.LineWrapperTest#overlyLongLinesWithLeadingZeroWidth": 153,
      "com.squareup.javapoet.LineWrapperTest#overlyLongLinesWithoutLeadingSpace": 154,
      "com.squareup.javapoet.LineWrapperTest#wrap": 155,
      "com.squareup.javapoet.LineWrapperTest#wrapEmbeddedNewlines": 156,
      "com.squareup.javapoet.LineWrapperTest#wrapEmbeddedNewlines_ZeroWidth": 157,
      "com.squareup.javapoet.LineWrapperTest#wrapMultipleNewlines": 158,
      "com.squareup.javapoet.LineWrapperTest#zeroWidthNoWrap": 159,
      "com.squareup.javapoet.MethodSpecTest#addModifiersVarargsShouldNotBeNull": 160,
      "com.squareup.javapoet.MethodSpecTest#controlFlowWithNamedCodeBlocks": 161,
      "com.squareup.javapoet.MethodSpecTest#doWhileWithNamedCodeBlocks": 162,
      "com.squareup.javapoet.MethodSpecTest#duplicateExceptionsIgnored": 163,
      "com.squareup.javapoet.MethodSpecTest#ensureTrailingNewline": 164,
      "com.squareup.javapoet.MethodSpecTest#ensureTrailingNewlineWithExistingNewline": 165,
      "com.squareup.javapoet.MethodSpecTest#equalsAndHashCode": 166,
      "com.squareup.javapoet.MethodSpecTest#modifyAnnotations": 167,
      "com.squareup.javapoet.MethodSpecTest#modifyMethodName": 168,
      "com.squareup.javapoet.MethodSpecTest#modifyModifiers": 169,
      "com.squareup.javapoet.MethodSpecTest#modifyParameters": 170,
      "com.squareup.javapoet.MethodSpecTest#modifyTypeVariables": 171,
      "com.squareup.javapoet.MethodSpecTest#nullAnnotationsAddition": 172,
      "com.squareup.javapoet.MethodSpecTest#nullExceptionsAddition": 173,
      "com.squareup.javapoet.MethodSpecTest#nullIsNotAValidMethodName": 174,
      "com.squareup.javapoet.MethodSpecTest#nullParametersAddition": 175,
      "com.squareup.javapoet.MethodSpecTest#nullTypeVariablesAddition": 176,
      "com.squareup.javapoet.MethodSpecTest#overrideDoesNotCopyDefaultModifier": 177,
      "com.squareup.javapoet.MethodSpecTest#overrideDoesNotCopyOverrideAnnotation": 178,
      "com.squareup.javapoet.MethodSpecTest#overrideDoesNotCopyParameterAnnotations": 179,
      "com.squareup.javapoet.MethodSpecTest#overrideEverything": 180,
      "com.squareup.javapoet.MethodSpecTest#overrideExtendsOthersWorksWithActualTypeParameters": 181,
      "com.squareup.javapoet.MethodSpecTest#overrideFinalClassMethod": 182,
      "com.squareup.javapoet.MethodSpecTest#overrideGenerics": 183,
      "com.squareup.javapoet.MethodSpecTest#overrideInvalidModifiers": 184,
      "com.squareup.javapoet.MethodSpecTest#withParameterJavaDoc": 185,
      "com.squareup.javapoet.MethodSpecTest#withParameterJavaDocAndWithoutMethodJavadoc": 186,
      "com.squareup.javapoet.MethodSpecTest#withoutParameterJavaDoc": 187,
      "com.squareup.javapoet.NameAllocatorTest#characterMappingInvalidStartButValidPart": 188,
      "com.squareup.javapoet.NameAllocatorTest#characterMappingInvalidStartIsInvalidPart": 189,
      "com.squareup.javapoet.NameAllocatorTest#characterMappingSubstitute": 190,
      "com.squareup.javapoet.NameAllocatorTest#characterMappingSurrogate": 191,
      "com.squareup.javapoet.NameAllocatorTest#cloneUsage": 192,
      "com.squareup.javapoet.NameAllocatorTest#javaKeyword": 193,
      "com.squareup.javapoet.NameAllocatorTest#nameCollision": 194,
      "com.squareup.javapoet.NameAllocatorTest#nameCollisionWithTag": 195,
      "com.squareup.javapoet.NameAllocatorTest#tagReuseForbidden": 196,
      "com.squareup.javapoet.NameAllocatorTest#usage": 197,
      "com.squareup.javapoet.NameAllocatorTest#useBeforeAllocateForbidden": 198,
      "com.squareup.javapoet.ParameterSpecTest#addNonFinalModifier": 199,
      "com.squareup.javapoet.ParameterSpecTest#equalsAndHashCode": 200,
      "com.squareup.javapoet.ParameterSpecTest#fieldVariableElement": 201,
      "com.squareup.javapoet.ParameterSpecTest#keywordName": 202,
      "com.squareup.javapoet.ParameterSpecTest#modifyAnnotations": 203,
      "com.squareup.javapoet.ParameterSpecTest#modifyModifiers": 204,
      "com.squareup.javapoet.ParameterSpecTest#nullAnnotationsAddition": 205,
      "com.squareup.javapoet.ParameterSpecTest#parameterVariableElement": 206,
      "com.squareup.javapoet.ParameterSpecTest#receiverParameterInstanceMethod": 207,
      "com.squareup.javapoet.ParameterSpecTest#receiverParameterNestedClass": 208,
      "com.squareup.javapoet.TypeNameTest#equalsAndHashCodeArrayTypeName": 209,
      "com.squareup.javapoet.TypeNameTest#equalsAndHashCodeClassName": 210,
      "com.squareup.javapoet.TypeNameTest#equalsAndHashCodeParameterizedTypeName": 211,
      "com.squareup.javapoet.TypeNameTest#equalsAndHashCodePrimitive": 212,
      "com.squareup.javapoet.TypeNameTest#equalsAndHashCodeTypeVariableName": 213,
      "com.squareup.javapoet.TypeNameTest#equalsAndHashCodeWildcardTypeName": 214,
      "com.squareup.javapoet.TypeNameTest#genericType": 215,
      "com.squareup.javapoet.TypeNameTest#innerClassInGenericType": 216,
      "com.squareup.javapoet.TypeNameTest#innerGenericInGenericType": 217,
      "com.squareup.javapoet.TypeNameTest#innerStaticInGenericType": 218,
      "com.squareup.javapoet.TypeNameTest#isBoxedPrimitive": 219,
      "com.squareup.javapoet.TypeNameTest#isPrimitive": 220,
      "com.squareup.javapoet.TypeSpecTest#addAnnotationDisallowsNull": 221,
      "com.squareup.javapoet.TypeSpecTest#annotatedClass": 222,
      "com.squareup.javapoet.TypeSpecTest#annotatedField": 223,
      "com.squareup.javapoet.TypeSpecTest#annotatedParameters": 224,
      "com.squareup.javapoet.TypeSpecTest#annotation": 225,
      "com.squareup.javapoet.TypeSpecTest#annotationDeclarationToString": 226,
      "com.squareup.javapoet.TypeSpecTest#annotationToString": 227,
      "com.squareup.javapoet.TypeSpecTest#annotationWithFields": 228,
      "com.squareup.javapoet.TypeSpecTest#annotationsAndJavaLangTypes": 229,
      "com.squareup.javapoet.TypeSpecTest#annotationsInAnnotations": 230,
      "com.squareup.javapoet.TypeSpecTest#anonymousClassToString": 231,
      "com.squareup.javapoet.TypeSpecTest#anonymousInnerClass": 232,
      "com.squareup.javapoet.TypeSpecTest#arrayType": 233,
      "com.squareup.javapoet.TypeSpecTest#basic": 234,
      "com.squareup.javapoet.TypeSpecTest#classCannotHaveDefaultMethods": 235,
      "com.squareup.javapoet.TypeSpecTest#classCannotHaveDefaultValueForMethod": 236,
      "com.squareup.javapoet.TypeSpecTest#classImplementsExtends": 237,
      "com.squareup.javapoet.TypeSpecTest#classImplementsNestedClass": 238,
      "com.squareup.javapoet.TypeSpecTest#classNameFactories": 239,
      "com.squareup.javapoet.TypeSpecTest#classToString": 240,
      "com.squareup.javapoet.TypeSpecTest#codeBlockAddStatementOfCodeBlockToString": 241,
      "com.squareup.javapoet.TypeSpecTest#codeBlockToString": 242,
      "com.squareup.javapoet.TypeSpecTest#codeBlocks": 243,
      "com.squareup.javapoet.TypeSpecTest#constructorToString": 244,
      "com.squareup.javapoet.TypeSpecTest#defaultModifiersForInterfaceMembers": 245,
      "com.squareup.javapoet.TypeSpecTest#defaultModifiersForMemberInterfacesAndEnums": 246,
      "com.squareup.javapoet.TypeSpecTest#doWhile": 247,
      "com.squareup.javapoet.TypeSpecTest#doubleFieldInitialization": 248,
      "com.squareup.javapoet.TypeSpecTest#elseIf": 249,
      "com.squareup.javapoet.TypeSpecTest#enumImplements": 250,
      "com.squareup.javapoet.TypeSpecTest#enumWithAnnotatedValues": 251,
      "com.squareup.javapoet.TypeSpecTest#enumWithMembersButNoConstructorCall": 252,
      "com.squareup.javapoet.TypeSpecTest#enumWithSubclassing": 253,
      "com.squareup.javapoet.TypeSpecTest#enumsMayDefineAbstractMethods": 254,
      "com.squareup.javapoet.TypeSpecTest#equalsAndHashCode": 255,
      "com.squareup.javapoet.TypeSpecTest#fieldToString": 256,
      "com.squareup.javapoet.TypeSpecTest#ifElse": 257,
      "com.squareup.javapoet.TypeSpecTest#indexedElseIf": 258,
      "com.squareup.javapoet.TypeSpecTest#initializerBlockInRightPlace": 259,
      "com.squareup.javapoet.TypeSpecTest#initializerBlockUnsupportedExceptionOnAnnotation": 260,
      "com.squareup.javapoet.TypeSpecTest#initializerBlockUnsupportedExceptionOnInterface": 261,
      "com.squareup.javapoet.TypeSpecTest#initializersToBuilder": 262,
      "com.squareup.javapoet.TypeSpecTest#inlineIndent": 263,
      "com.squareup.javapoet.TypeSpecTest#innerAnnotationInAnnotationDeclaration": 264,
      "com.squareup.javapoet.TypeSpecTest#interestingTypes": 265,
      "com.squareup.javapoet.TypeSpecTest#interfaceClassToString": 266,
      "com.squareup.javapoet.TypeSpecTest#interfaceDefaultMethods": 267,
      "com.squareup.javapoet.TypeSpecTest#interfaceExtends": 268,
      "com.squareup.javapoet.TypeSpecTest#interfacePrivateMethods": 269,
      "com.squareup.javapoet.TypeSpecTest#interfaceStaticMethods": 270,
      "com.squareup.javapoet.TypeSpecTest#intersectionType": 271,
      "com.squareup.javapoet.TypeSpecTest#invalidInterfacePrivateMethods": 272,
      "com.squareup.javapoet.TypeSpecTest#invalidSuperClass": 273,
      "com.squareup.javapoet.TypeSpecTest#javadoc": 274,
      "com.squareup.javapoet.TypeSpecTest#javadocEnsuresTrailingLine": 275,
      "com.squareup.javapoet.TypeSpecTest#javadocWithTrailingLineDoesNotAddAnother": 276,
      "com.squareup.javapoet.TypeSpecTest#lineWrapping": 277,
      "com.squareup.javapoet.TypeSpecTest#lineWrappingWithZeroWidthSpace": 278,
      "com.squareup.javapoet.TypeSpecTest#literalFromAnything": 279,
      "com.squareup.javapoet.TypeSpecTest#membersOrdering": 280,
      "com.squareup.javapoet.TypeSpecTest#methodThrows": 281,
      "com.squareup.javapoet.TypeSpecTest#methodToString": 282,
      "com.squareup.javapoet.TypeSpecTest#modifyAnnotations": 283,
      "com.squareup.javapoet.TypeSpecTest#modifyEnumConstants": 284,
      "com.squareup.javapoet.TypeSpecTest#modifyFields": 285,
      "com.squareup.javapoet.TypeSpecTest#modifyMethods": 286,
      "com.squareup.javapoet.TypeSpecTest#modifyModifiers": 287,
      "com.squareup.javapoet.TypeSpecTest#modifyOriginatingElements": 288,
      "com.squareup.javapoet.TypeSpecTest#modifySuperinterfaces": 289,
      "com.squareup.javapoet.TypeSpecTest#modifyTypeVariables": 290,
      "com.squareup.javapoet.TypeSpecTest#modifyTypes": 291,
      "com.squareup.javapoet.TypeSpecTest#multilineStatement": 292,
      "com.squareup.javapoet.TypeSpecTest#multilineStatementWithAnonymousClass": 293,
      "com.squareup.javapoet.TypeSpecTest#multilineStrings": 294,
      "com.squareup.javapoet.TypeSpecTest#multipleAnnotationAddition": 295,
      "com.squareup.javapoet.TypeSpecTest#multipleFieldAddition": 296,
      "com.squareup.javapoet.TypeSpecTest#multipleMethodAddition": 297,
      "com.squareup.javapoet.TypeSpecTest#multipleSuperinterfaceAddition": 298,
      "com.squareup.javapoet.TypeSpecTest#multipleTypeAddition": 299,
      "com.squareup.javapoet.TypeSpecTest#multipleTypeVariableAddition": 300,
      "com.squareup.javapoet.TypeSpecTest#nameFromCharSequence": 301,
      "com.squareup.javapoet.TypeSpecTest#nameFromField": 302,
      "com.squareup.javapoet.TypeSpecTest#nameFromMethod": 303,
      "com.squareup.javapoet.TypeSpecTest#nameFromParameter": 304,
      "com.squareup.javapoet.TypeSpecTest#nameFromType": 305,
      "com.squareup.javapoet.TypeSpecTest#nameFromUnsupportedType": 306,
      "com.squareup.javapoet.TypeSpecTest#nativeMethods": 307,
      "com.squareup.javapoet.TypeSpecTest#nestedClasses": 308,
      "com.squareup.javapoet.TypeSpecTest#noEnumConstants": 309,
      "com.squareup.javapoet.TypeSpecTest#nullAnnotationsAddition": 310,
      "com.squareup.javapoet.TypeSpecTest#nullFieldsAddition": 311,
      "com.squareup.javapoet.TypeSpecTest#nullInSuperinterfaceIterableAddition": 312,
      "com.squareup.javapoet.TypeSpecTest#nullMethodsAddition": 313,
      "com.squareup.javapoet.TypeSpecTest#nullModifiersAddition": 314,
      "com.squareup.javapoet.TypeSpecTest#nullSingleSuperinterfaceAddition": 315,
      "com.squareup.javapoet.TypeSpecTest#nullStringLiteral": 316,
      "com.squareup.javapoet.TypeSpecTest#nullSuperinterfacesAddition": 317,
      "com.squareup.javapoet.TypeSpecTest#nullTypeVariablesAddition": 318,
      "com.squareup.javapoet.TypeSpecTest#nullTypesAddition": 319,
      "com.squareup.javapoet.TypeSpecTest#onlyEnumsMayHaveEnumConstants": 320,
      "com.squareup.javapoet.TypeSpecTest#originatingElementsIncludesThoseOfNestedTypes": 321,
      "com.squareup.javapoet.TypeSpecTest#parameterToString": 322,
      "com.squareup.javapoet.TypeSpecTest#referencedAndDeclaredSimpleNamesConflict": 323,
      "com.squareup.javapoet.TypeSpecTest#retrofitStyleInterface": 324,
      "com.squareup.javapoet.TypeSpecTest#simpleNameConflictsWithTypeVariable": 325,
      "com.squareup.javapoet.TypeSpecTest#simpleNamesConflictInThisAndOtherPackage": 326,
      "com.squareup.javapoet.TypeSpecTest#staticCodeBlock": 327,
      "com.squareup.javapoet.TypeSpecTest#stringFromAnything": 328,
      "com.squareup.javapoet.TypeSpecTest#stringFromNull": 329,
      "com.squareup.javapoet.TypeSpecTest#superClassOnlyValidForClasses": 330,
      "com.squareup.javapoet.TypeSpecTest#tooFewArguments": 331,
      "com.squareup.javapoet.TypeSpecTest#tryCatch": 332,
      "com.squareup.javapoet.TypeSpecTest#typeFromReflectType": 333,
      "com.squareup.javapoet.TypeSpecTest#typeFromTypeElement": 334,
      "com.squareup.javapoet.TypeSpecTest#typeFromTypeMirror": 335,
      "com.squareup.javapoet.TypeSpecTest#typeFromTypeName": 336,
      "com.squareup.javapoet.TypeSpecTest#typeFromUnsupportedType": 337,
      "com.squareup.javapoet.TypeSpecTest#typeVariableWithBounds": 338,
      "com.squareup.javapoet.TypeSpecTest#typeVariables": 339,
      "com.squareup.javapoet.TypeSpecTest#unusedArgumentsIndexed": 340,
      "com.squareup.javapoet.TypeSpecTest#unusedArgumentsRelative": 341,
      "com.squareup.javapoet.TypeSpecTest#varargs": 342,
      "com.squareup.javapoet.UtilTest#characterLiteral": 343,
      "com.squareup.javapoet.UtilTest#stringLiteral": 344
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            339, 243, 253, 262, 232, 293, 324, 128, 259, 224, 327, 179, 96, 130,
            113, 132, 115, 112, 280, 114, 87, 274, 124, 277, 245, 131, 258, 129,
            252, 249, 292, 307, 342, 325, 247, 234, 127, 166, 31, 111, 271, 30,
            281, 254, 263, 180, 24, 22, 133, 264, 338, 332, 308, 109, 183, 265,
            223, 181, 237, 106, 294, 257, 296, 250, 231, 268, 229, 316, 295,
            238, 297, 300, 309, 323, 120, 251, 267, 269, 270, 139, 222, 230,
            110, 108, 107, 138, 140, 135, 142, 225, 177, 105, 298, 104, 278,
            141, 119, 122, 121, 88, 123, 326, 118, 137, 116, 282, 4, 5, 233,
            117, 228, 125, 178, 244, 246, 23, 93, 162, 89, 299, 126, 275, 134,
            276, 94, 143, 101, 103, 185, 92, 99, 100, 161, 7, 98, 136, 186, 97,
            255, 187, 256, 26, 241, 28, 9, 242, 12, 226, 240, 1, 266, 168, 15,
            29, 227, 164, 16, 165, 27, 0, 322, 6, 8, 11, 13, 10, 14, 2, 3, 214,
            206, 64, 61, 74, 62, 215, 68, 81, 71, 83, 216, 217, 333, 336, 334,
            335, 200, 211, 19, 20, 21, 209, 213, 163, 303, 210, 305, 302, 304,
            218, 273, 44, 34, 35, 36, 272, 42, 235, 40, 41, 39, 219, 70, 236,
            63, 289, 79, 239, 285, 328, 73, 72, 65, 50, 286, 75, 69, 95, 102,
            91, 279, 284, 320, 82, 90, 283, 290, 329, 301, 170, 248, 32, 287,
            321, 25, 212, 46, 47, 203, 288, 291, 84, 167, 171, 312, 204, 207,
            208, 85, 169, 80, 199, 78, 205, 86, 314, 146, 340, 202, 221, 260,
            261, 330, 18, 17, 158, 157, 145, 151, 156, 310, 311, 313, 315, 317,
            318, 319, 144, 155, 37, 150, 152, 160, 172, 173, 175, 176, 33, 148,
            45, 147, 149, 341, 38, 159, 306, 337, 220, 43, 59, 52, 55, 193, 195,
            56, 57, 54, 197, 192, 194, 153, 188, 196, 331, 189, 190, 191, 48,
            49, 53, 76, 77, 154, 344, 60, 67, 58, 51, 343, 184, 174, 66, 182,
            198, 201
          ]
        ],
        "APSC_c": 0.8279585091231559
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            339, 253, 232, 324, 259, 327, 96, 130, 132, 112, 114, 274, 124, 277,
            245, 258, 252, 292, 342, 247, 166, 111, 271, 254, 263, 24, 133, 338,
            332, 109, 265, 181, 106, 257, 250, 268, 316, 238, 300, 323, 251,
            269, 139, 230, 108, 138, 135, 142, 177, 298, 278, 119, 121, 123,
            326, 137, 282, 5, 117, 125, 244, 23, 162, 126, 134, 94, 101, 185,
            99, 97, 187, 241, 28, 9, 12, 240, 266, 15, 227, 164, 27, 11, 13, 2,
            3, 206, 61, 62, 71, 216, 217, 336, 335, 211, 20, 209, 163, 210, 302,
            304, 273, 34, 36, 42, 40, 39, 219, 70, 236, 63, 289, 79, 239, 285,
            328, 73, 72, 65, 50, 286, 75, 69, 95, 102, 91, 279, 284, 82, 283,
            290, 301, 248, 32, 25, 212, 46, 47, 203, 288, 208, 169, 199, 78,
            314, 146, 221, 261, 18, 17, 157, 151, 310, 313, 317, 319, 155, 152,
            172, 175, 33, 148, 149, 341, 159, 337, 43, 52, 55, 195, 57, 197,
            192, 153, 196, 189, 191, 49, 76, 154, 67, 51, 184, 182, 201
          ],
          [
            243, 262, 293, 128, 224, 179, 113, 115, 280, 87, 131, 129, 249, 307,
            325, 234, 127, 31, 30, 281, 180, 22, 264, 308, 183, 223, 237, 294,
            296, 231, 229, 295, 297, 309, 120, 267, 270, 222, 110, 107, 140,
            225, 105, 104, 141, 122, 88, 118, 116, 4, 233, 228, 178, 246, 93,
            89, 299, 275, 276, 143, 103, 92, 100, 161, 7, 98, 136, 186, 255,
            256, 26, 242, 226, 1, 168, 29, 16, 165, 0, 322, 6, 8, 10, 14, 214,
            64, 74, 215, 68, 81, 83, 333, 334, 200, 19, 21, 213, 303, 305, 218,
            44, 35, 272, 235, 41, 320, 90, 329, 170, 287, 321, 291, 84, 167,
            171, 312, 204, 207, 85, 80, 205, 86, 340, 202, 260, 330, 158, 145,
            156, 311, 315, 318, 144, 37, 150, 160, 173, 176, 45, 147, 38, 306,
            220, 59, 193, 56, 54, 194, 188, 331, 190, 48, 53, 77, 344, 60, 58,
            343, 174, 66, 198
          ]
        ],
        "APSC_c": 0.9137832529082899
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            339, 232, 259, 96, 132, 114, 277, 258, 249, 342, 127, 271, 254, 22,
            308, 223, 106, 296, 229, 297, 120, 270, 110, 135, 177, 119, 88, 116,
            233, 178, 162, 134, 94, 99, 168, 16, 27, 2, 206, 62, 216, 336, 211,
            209, 210, 218, 36, 40, 63, 50, 95, 102, 320, 90, 170, 287, 25, 47,
            288, 157, 311, 317, 144, 172, 33, 45, 341, 159, 59, 195, 197, 153,
            331, 191, 76, 60, 51, 66
          ],
          [
            243, 293, 327, 113, 280, 124, 245, 129, 292, 325, 166, 30, 180, 264,
            183, 294, 231, 316, 309, 267, 139, 108, 140, 298, 141, 123, 137, 5,
            125, 23, 299, 276, 103, 100, 98, 97, 256, 241, 28, 226, 15, 227,
            165, 10, 214, 74, 215, 68, 71, 333, 334, 20, 213, 305, 273, 34, 42,
            39, 70, 79, 285, 73, 65, 69, 91, 82, 290, 301, 248, 321, 78, 146,
            221, 17, 145, 156, 318, 155, 160, 175, 147, 220, 193, 54, 188, 190,
            53, 344, 67, 174, 198
          ],
          [
            253, 128, 179, 112, 274, 131, 252, 307, 234, 31, 263, 133, 332, 265,
            237, 250, 295, 300, 251, 222, 107, 142, 105, 278, 121, 118, 4, 228,
            246, 93, 126, 101, 92, 161, 186, 187, 9, 242, 240, 29, 0, 322, 8,
            13, 3, 61, 81, 217, 200, 21, 303, 304, 35, 235, 219, 236, 289, 239,
            328, 72, 286, 75, 279, 284, 283, 329, 32, 212, 46, 203, 291, 84,
            167, 171, 312, 204, 207, 208, 85, 169, 199, 86, 202, 261, 18, 158,
            310, 315, 37, 150, 173, 148, 38, 337, 43, 55, 57, 194, 189, 49, 154,
            343, 184
          ],
          [
            262, 324, 224, 130, 115, 87, 247, 111, 281, 24, 338, 109, 181, 257,
            268, 238, 323, 269, 230, 138, 225, 104, 122, 326, 282, 117, 244, 89,
            275, 143, 185, 7, 136, 255, 26, 12, 1, 266, 164, 6, 11, 14, 64, 83,
            335, 19, 163, 302, 44, 272, 41, 80, 205, 314, 340, 260, 330, 151,
            313, 319, 152, 176, 149, 306, 52, 56, 192, 196, 48, 77, 58, 182, 201
          ]
        ],
        "APSC_c": 0.9565343396380936
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            339, 327, 87, 308, 106, 268, 323, 222, 142, 141, 326, 117, 162, 143,
            7, 186, 240, 27, 215, 83, 211, 305, 35, 219, 285, 286, 91, 329, 46,
            291, 171, 169, 205, 202, 18, 17, 151, 313, 144, 173, 147, 43, 55,
            57, 188, 191, 344, 51
          ],
          [
            243, 130, 112, 129, 292, 166, 133, 181, 231, 309, 230, 225, 122,
            282, 244, 275, 185, 187, 226, 164, 206, 71, 333, 335, 213, 44, 70,
            328, 65, 102, 290, 287, 203, 167, 204, 199, 86, 261, 157, 315, 150,
            175, 149, 306, 195, 192, 196, 48, 60, 343, 182
          ],
          [
            253, 132, 124, 252, 127, 254, 264, 223, 250, 300, 139, 140, 119,
            116, 228, 299, 103, 161, 256, 28, 29, 10, 214, 68, 216, 334, 209,
            218, 41
          ],
          [
            262, 113, 274, 249, 234, 30, 24, 183, 316, 267, 108, 105, 123, 125,
            89, 101, 98, 241, 12, 168, 322, 11, 2, 61, 20, 303, 272, 39, 79, 50,
            279, 283, 248, 212, 288, 53, 58, 198
          ],
          [
            232, 259, 115, 245, 325, 31, 22, 294, 229, 120, 110, 298, 121, 4,
            246, 126, 99, 336, 21, 304, 42, 63, 82, 170, 47, 84, 208, 78, 340,
            260, 158, 310, 318, 37, 152, 176, 341, 337, 59, 56, 153, 189, 76,
            184
          ],
          [
            293, 179, 277, 307, 111, 263, 332, 237, 295, 251, 107, 104, 118,
            233, 93, 276, 100, 255, 242, 266, 165, 64, 163, 34, 40, 75, 320,
            301, 25, 207, 80, 146, 330, 156, 317, 155, 172, 148, 159, 52, 54,
            331, 190, 77, 66
          ],
          [
            324, 224, 280, 258, 247, 281, 338, 109, 257, 297, 270, 138, 177,
            137, 5, 23, 94, 136, 9, 1, 15, 227, 8, 14, 74, 81, 217, 19, 302,
            273, 235, 289, 73, 69, 284, 32, 312, 85, 314, 221, 145, 311, 319,
            160, 33, 45, 38, 220, 193, 197, 194, 49, 67, 201
          ],
          [
            128, 96, 114, 131, 342, 271, 180, 265, 296, 238, 269, 135, 278, 88,
            178, 134, 92, 97, 26, 16, 0, 6, 13, 3, 62, 200, 210, 36, 236, 239,
            72, 95, 90, 321, 154, 174
          ]
        ],
        "APSC_c": 0.9781789134109559
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            339, 87, 104, 125, 103, 26, 214, 83, 44, 289, 102, 32, 17, 310, 155,
            149, 197, 48, 184
          ],
          [
            243, 129, 127, 308, 268, 139, 278, 5, 299, 97, 29, 333, 209, 35,
            285, 279, 301, 47, 85, 221, 319, 341, 195, 191, 58
          ],
          [
            253, 292, 271, 223, 238, 230, 141, 228, 185, 168, 216, 213, 36, 328,
            75, 287, 207, 86, 317, 175, 220, 194, 174
          ],
          [262, 249, 31, 237, 251, 177, 244, 99, 193, 190, 67],
          [
            232, 115, 325, 24, 296, 267, 105, 117, 143, 241, 242, 227, 215, 20,
            302, 235, 72, 82, 25, 156, 173, 159, 192, 154
          ],
          [293, 124, 166, 294, 120, 225, 4, 126, 256, 28, 13, 64, 50, 290, 288],
          [
            324, 280, 247, 332, 295, 110, 118, 162, 136, 165, 217, 210, 39, 65,
            283, 212, 169, 146, 311, 150, 306, 153, 77
          ],
          [
            128, 258, 180, 106, 309, 142, 123, 89, 7, 187, 164, 334, 305, 40,
            170, 84, 340, 330, 318, 172, 38, 56, 53, 182
          ],
          [
            259, 274, 281, 181, 323, 140, 282, 134, 161, 15, 322, 10, 61, 79,
            320, 321
          ],
          [
            224, 131, 111, 264, 231, 270, 298, 116, 275, 186, 8, 3, 68, 21, 34,
            236, 286, 90, 167, 80, 260, 313, 176, 43, 54, 344, 198
          ],
          [
            327, 252, 263, 183, 300, 135, 326, 23, 98, 27, 336, 163, 272, 239,
            95, 329, 171, 78, 157, 160, 147, 331, 76
          ],
          [
            179, 307, 133, 229, 108, 88, 276, 255, 266, 81, 211, 273, 42, 73,
            284, 291, 199, 261, 315, 148, 55, 189, 60, 201
          ],
          [
            96, 114, 342, 338, 257, 269, 122, 246, 101, 9, 1, 0, 6, 14, 71, 19,
            218, 219, 69, 248, 46, 204, 314, 145, 144, 337, 57, 49, 66
          ],
          [130, 112, 234, 22, 297, 138, 121, 178, 100, 226, 206, 200, 304, 41],
          [
            113, 277, 30, 265, 316, 107, 137, 93, 92, 240, 62, 63, 312, 205, 18,
            151, 152, 59, 196, 51
          ],
          [
            132, 245, 254, 109, 250, 222, 119, 233, 94, 12, 16, 11, 2, 74, 335,
            303, 70, 91, 203, 208, 202, 158, 37, 33, 45, 52, 188, 343
          ]
        ],
        "APSC_c": 0.9887338526091113
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            243, 262, 128, 327, 130, 132, 280, 274, 124, 245, 129, 249, 342,
            234, 31, 30, 263, 22, 338, 109, 265, 237, 296, 231, 316, 297, 120,
            269, 222, 108, 140, 177, 278, 119, 88, 137, 4, 117, 178, 23, 299,
            134, 94, 185, 100, 161, 98, 97, 256, 241, 28, 240, 15, 29, 165, 11,
            10, 3, 64, 215, 71, 217, 335, 211, 209, 303, 302, 273, 34, 272, 235,
            41, 25, 291, 84, 167, 171, 312, 204, 207, 169, 199, 86, 340, 260,
            330, 157, 310, 313, 318, 144, 152, 175, 45, 149, 38, 337, 43, 52,
            195, 54, 153, 196, 191, 53, 77, 58, 184, 198
          ],
          [
            339, 253, 232, 293, 324, 259, 224, 179, 96, 113, 115, 112, 114, 87,
            277, 131, 258, 252, 292, 307, 325, 247, 127, 166, 111, 271, 281,
            254, 180, 24, 133, 264, 332, 308, 183, 223, 181, 106, 294, 257, 250,
            268, 229, 295, 238, 300, 309, 323, 251, 267, 270, 139, 230, 110,
            107, 138, 135, 142, 225, 105, 298, 104, 141, 122, 121, 123, 326,
            118, 116, 282, 5, 233, 228, 125, 244, 246, 93, 162, 89, 126, 275,
            276, 143, 101, 103, 92, 99, 7, 136, 186, 255, 187, 26, 9, 242, 12,
            226, 1, 266, 168, 227, 164, 16, 27, 0, 322, 6, 8, 13, 14, 2, 214,
            206, 61, 74, 62, 68, 81, 83, 216, 333, 336, 334, 200, 19, 20, 21,
            213, 163, 210, 305, 304, 218, 44, 35, 36, 42, 40, 39, 219, 70, 236,
            63, 289, 79, 239, 285, 328, 73, 72, 65, 50, 286, 75, 69, 95, 102,
            91, 279, 284, 320, 82, 90, 283, 290, 329, 301, 170, 248, 32, 287,
            321, 212, 46, 47, 203, 288, 208, 85, 80, 78, 205, 314, 146, 202,
            221, 261, 18, 17, 158, 145, 151, 156, 311, 315, 317, 319, 155, 37,
            150, 160, 172, 173, 176, 33, 148, 147, 341, 159, 306, 220, 59, 55,
            193, 56, 57, 197, 192, 194, 188, 331, 189, 190, 48, 49, 76, 154,
            344, 60, 67, 51, 343, 174, 66, 182, 201
          ]
        ],
        "APSC_c": 0.9426323942093968
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            243, 232, 259, 179, 280, 274, 277, 129, 292, 325, 166, 254, 24, 338,
            109, 223, 294, 250, 316, 309, 267, 222, 107, 142, 105, 119, 88, 282,
            117, 244, 162, 275, 143, 92, 100, 161, 97, 256, 241, 9, 12, 240,
            227, 27, 214, 61, 71, 333, 335, 19, 213, 305, 273, 35, 40, 39, 219,
            70, 236, 63, 79, 65, 69, 279, 320, 290, 248, 287, 25, 212, 46, 288,
            33, 147, 337, 59, 56, 192, 188, 191, 76, 67, 174, 182
          ],
          [
            339, 253, 262, 293, 324, 128, 224, 327, 96, 130, 113, 132, 115, 112,
            114, 87, 124, 245, 131, 258, 252, 249, 307, 342, 247, 234, 127, 31,
            111, 271, 30, 281, 263, 180, 22, 133, 264, 332, 308, 183, 265, 181,
            237, 106, 257, 296, 231, 268, 229, 295, 238, 297, 300, 323, 120,
            251, 269, 270, 139, 230, 110, 108, 138, 140, 135, 225, 177, 298,
            104, 278, 141, 122, 121, 123, 326, 118, 137, 116, 4, 5, 233, 228,
            125, 178, 246, 23, 93, 89, 299, 126, 134, 276, 94, 101, 103, 185,
            99, 7, 98, 136, 186, 255, 187, 26, 28, 242, 226, 1, 266, 168, 15,
            29, 164, 16, 165, 0, 322, 6, 8, 11, 13, 10, 14, 2, 3, 206, 64, 74,
            62, 215, 68, 81, 83, 216, 217, 336, 334, 200, 211, 20, 21, 209, 163,
            303, 210, 302, 304, 218, 44, 34, 36, 272, 42, 235, 41, 289, 239,
            285, 328, 73, 72, 50, 286, 75, 95, 102, 91, 284, 82, 90, 283, 329,
            301, 170, 32, 321, 47, 203, 291, 84, 167, 171, 312, 204, 207, 208,
            85, 169, 80, 199, 78, 205, 86, 314, 146, 340, 202, 221, 260, 261,
            330, 18, 17, 158, 157, 145, 151, 156, 310, 311, 313, 315, 317, 318,
            319, 144, 155, 37, 150, 152, 160, 172, 173, 175, 176, 148, 45, 149,
            341, 38, 159, 306, 220, 43, 52, 55, 193, 195, 57, 54, 197, 194, 153,
            196, 331, 189, 190, 48, 49, 53, 77, 154, 344, 60, 58, 51, 343, 184,
            66, 198, 201
          ]
        ],
        "APSC_c": 0.9568398073893788
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [
            243, 324, 327, 132, 87, 111, 281, 133, 183, 294, 268, 238, 120, 139,
            107, 225, 141, 123, 282, 125, 23, 275, 143, 99, 27, 61, 217, 211,
            163, 304, 35, 41, 155, 173, 45, 149, 220, 193, 197, 153, 189, 53,
            60, 343, 174, 198
          ],
          [
            339, 253, 262, 232, 293, 128, 259, 224, 179, 96, 130, 113, 115, 112,
            280, 114, 274, 124, 277, 245, 131, 258, 129, 252, 249, 292, 307,
            342, 325, 247, 234, 127, 166, 31, 271, 30, 254, 263, 180, 24, 22,
            264, 338, 332, 308, 109, 265, 223, 181, 237, 106, 257, 296, 250,
            231, 229, 316, 295, 297, 300, 309, 323, 251, 267, 269, 270, 222,
            230, 110, 108, 138, 140, 135, 142, 177, 105, 298, 104, 278, 119,
            122, 121, 88, 326, 118, 137, 116, 4, 5, 233, 117, 228, 178, 244,
            246, 93, 162, 89, 299, 126, 134, 276, 94, 101, 103, 185, 92, 100,
            161, 7, 98, 136, 186, 97, 255, 187, 256, 26, 241, 28, 9, 242, 12,
            226, 240, 1, 266, 168, 15, 29, 227, 164, 16, 165, 0, 322, 6, 8, 11,
            13, 10, 14, 2, 3, 214, 206, 64, 74, 62, 215, 68, 81, 71, 83, 216,
            333, 336, 334, 335, 200, 19, 20, 21, 209, 213, 303, 210, 305, 302,
            218, 273, 44, 34, 36, 272, 42, 235, 40, 39, 219, 70, 236, 63, 289,
            79, 239, 285, 328, 73, 72, 65, 50, 286, 75, 69, 95, 102, 91, 279,
            284, 320, 82, 90, 283, 290, 329, 301, 170, 248, 32, 287, 321, 25,
            212, 46, 47, 203, 288, 291, 84, 167, 171, 312, 204, 207, 208, 85,
            169, 80, 199, 78, 205, 86, 314, 146, 340, 202, 221, 260, 261, 330,
            18, 17, 158, 157, 145, 151, 156, 310, 311, 313, 315, 317, 318, 319,
            144, 37, 150, 152, 160, 172, 175, 176, 33, 148, 147, 341, 38, 159,
            306, 337, 43, 59, 52, 55, 195, 56, 57, 54, 192, 194, 188, 196, 331,
            190, 191, 48, 49, 76, 77, 154, 344, 67, 58, 51, 184, 66, 182, 201
          ]
        ],
        "APSC_c": 0.9658240131136968
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [232, 280, 127, 237, 139, 122, 89, 255, 29, 35, 285, 284, 288],
          [
            293, 245, 180, 238, 140, 244, 136, 27, 39, 72, 283, 212, 204, 146,
            311, 37, 33, 220, 331, 60
          ],
          [
            324, 87, 246, 185, 16, 2, 71, 303, 79, 82, 46, 207, 340, 17, 151,
            152, 56, 67
          ],
          [
            128, 258, 24, 316, 105, 125, 161, 15, 6, 62, 286, 329, 203, 169,
            202, 145, 144, 195, 53
          ],
          [
            339, 259, 96, 132, 274, 252, 247, 111, 30, 22, 183, 106, 250, 295,
            323, 269, 108, 135, 104, 121, 118, 4, 117, 93, 299, 94, 100, 97,
            256, 241, 28, 12, 1, 266, 164, 14, 64, 333, 335, 20, 163, 304, 34,
            42, 219, 236, 289, 328, 65, 75, 91, 290, 170, 321, 150, 173, 148,
            38, 337, 59, 57, 153, 189, 49, 344, 51, 66
          ],
          [
            243, 224, 130, 115, 124, 129, 307, 234, 271, 254, 133, 109, 181,
            296, 229, 309, 267, 230, 138, 225, 278, 88, 137, 5, 178, 126, 143,
            92, 186, 26, 240, 227, 322, 11, 10, 206, 215, 81, 216, 336, 211,
            209, 305, 273, 36, 41, 45, 341, 159, 52, 54, 196, 48, 154, 184, 201
          ],
          [
            253, 179, 112, 277, 249, 342, 31, 281, 338, 332, 223, 257, 268, 300,
            251, 222, 107, 177, 141, 326, 116, 233, 23, 275, 276, 103, 7, 98,
            187, 9, 242, 226, 168, 0, 8, 13, 3, 61, 217, 200, 21, 210, 218, 272,
            40, 239, 73, 50, 95, 102, 90, 32, 47, 291, 167, 171, 85, 199, 205,
            86, 260, 261, 18, 157, 310, 313, 317, 319, 172, 176, 149, 306, 193,
            192, 188, 191, 77, 343, 174, 198
          ],
          [
            262, 327, 113, 114, 131, 292, 325, 166, 263, 264, 308, 265, 294,
            231, 297, 120, 270, 110, 142, 298, 119, 123, 282, 228, 162, 134,
            101, 99, 165, 214, 74, 68, 83, 334, 19, 213, 302, 44, 235, 70, 63,
            69, 279, 320, 301, 248, 287, 25, 84, 312, 208, 80, 78, 314, 221,
            330, 158, 156, 315, 318, 155, 160, 175, 147, 43, 55, 197, 194, 190,
            76, 58, 182
          ]
        ],
        "APSC_c": 0.9914069422743971
      }
    ]
  },
  {
    "filename": "progether_jadventure.json",
    "name_to_id": {
      "com.jadventure.game.conversation.ConversationManagerTest#matchConditionShouldMatchCharType": 0,
      "com.jadventure.game.conversation.ConversationManagerTest#matchConditionShouldMatchItem": 1,
      "com.jadventure.game.conversation.ConversationManagerTest#matchConditionShouldMatchLevel": 2,
      "com.jadventure.game.conversation.ConversationManagerTest#matchConditionShouldMatchNotCharType": 3,
      "com.jadventure.game.conversation.ConversationManagerTest#matchConditionShouldNotMatchItem": 4,
      "com.jadventure.game.conversation.ConversationManagerTest#matchConditionShouldNotMatchLevel": 5,
      "com.jadventure.game.conversation.ConversationManagerTest#matchConditionsShouldMatchAlly": 6,
      "com.jadventure.game.conversation.ConversationManagerTest#matchConditionsShouldMatchEnemy": 7,
      "com.jadventure.game.conversation.ConversationManagerTest#matchConditionsShouldNotMatchAlly": 8,
      "com.jadventure.game.conversation.ConversationManagerTest#matchConditionsShouldNotMatchEnemy": 9,
      "com.jadventure.game.conversation.ConversationManagerTest#testCreation": 10,
      "com.jadventure.game.conversation.LineTest#createTest": 11,
      "com.jadventure.game.entities.EntityTest#testCreation": 12,
      "com.jadventure.game.entities.EntityTest#testEquipItem_ArmourDoubleLocation": 13,
      "com.jadventure.game.entities.EntityTest#testEquipItem_ArmourSingleLocation": 14,
      "com.jadventure.game.entities.EntityTest#testEquipItem_ArmourSingleLocationWithDoubleLocationEquip": 15,
      "com.jadventure.game.entities.EntityTest#testEquipItem_OneHanded": 16,
      "com.jadventure.game.entities.EntityTest#testEquipItem_OneHandedWithTwoHandedEquip": 17,
      "com.jadventure.game.entities.EntityTest#testEquipItem_TwoHanded": 18,
      "com.jadventure.game.entities.EntityTest#testSetters": 19,
      "com.jadventure.game.entities.EntityTest#testStorage": 20,
      "com.jadventure.game.entities.EntityTest#testType": 21,
      "com.jadventure.game.entities.EntityTest#testUnequipItem_ArmourDoubleLocation": 22,
      "com.jadventure.game.entities.EntityTest#testUnequipItem_ArmourSingleLocation": 23,
      "com.jadventure.game.entities.EntityTest#testUnequipItem_OneHand": 24,
      "com.jadventure.game.entities.EntityTest#testUnequipItem_TwoHanded": 25,
      "com.jadventure.game.entities.PlayerTest#newRecruit": 26,
      "com.jadventure.game.entities.PlayerTest#newSewerRat": 27,
      "com.jadventure.game.entities.PlayerTest#oldPlayer": 28,
      "com.jadventure.game.items.ItemTest#checkEqual": 29,
      "com.jadventure.game.items.ItemTest#checkNotEqual": 30,
      "com.jadventure.game.items.ItemTest#createTest": 31,
      "com.jadventure.game.items.StorageTest#addAndRemoveWiskyAndBook": 32,
      "com.jadventure.game.items.StorageTest#addWisky": 33,
      "com.jadventure.game.monsters.MonsterFactoryTest#localizedMonsterGenerationTest_Cave": 34,
      "com.jadventure.game.monsters.MonsterFactoryTest#localizedMonsterGenerationTest_Forest": 35,
      "com.jadventure.game.monsters.MonsterFactoryTest#localizedMonsterGenerationTest_Mountains": 36,
      "com.jadventure.game.monsters.MonsterFactoryTest#localizedMonsterGenerationTest_Plains": 37,
      "com.jadventure.game.monsters.MonsterFactoryTest#localizedMonsterGenerationTest_Swamp": 38,
      "com.jadventure.game.monsters.MonsterFactoryTest#monsterGenerationOnNoDangerLocation": 39,
      "com.jadventure.game.monsters.MonsterTest#XPTest": 40,
      "com.jadventure.game.monsters.MonsterTest#addRandomItemTest": 41,
      "com.jadventure.game.monsters.MonsterTest#monsterGenerateTest": 42,
      "com.jadventure.game.monsters.MonsterTest#monsterTypeCompareTest": 43,
      "com.jadventure.game.navigation.CoordinateTest#testBorderingCoordinateNorth": 44,
      "com.jadventure.game.navigation.CoordinateTest#testRawCoordinate": 45,
      "com.jadventure.game.navigation.LocationTest#newLocation": 46,
      "com.jadventure.game.navigation.LocationTest#placeItem": 47,
      "com.jadventure.game.navigation.LocationTest#testRemove_NPC": 48,
      "com.jadventure.game.prompts.CommandCollectionTest#commandGoTest": 49,
      "com.jadventure.game.prompts.CommandCollectionTest#commandHelpTest": 50,
      "com.jadventure.game.prompts.CommandCollectionTest#commandInspectAliasesTest": 51,
      "com.jadventure.game.prompts.CommandCollectionTest#commandInspectTest": 52,
      "com.jadventure.game.prompts.CommandCollectionTest#commandMonsterTest": 53,
      "com.jadventure.game.prompts.CommandCollectionTest#commandPickAliasesTest": 54,
      "com.jadventure.game.prompts.CommandCollectionTest#commandSaveTest": 55,
      "com.jadventure.game.prompts.CommandCollectionTest#commandViewTest": 56,
      "com.jadventure.game.repository.EncounteredNpcRepositoryTest#createRepo": 57,
      "com.jadventure.game.repository.EncounteredNpcRepositoryTest#getNpc": 58,
      "com.jadventure.game.repository.ItemRepositoryTest#addItem": 59,
      "com.jadventure.game.repository.ItemRepositoryTest#addItems": 60,
      "com.jadventure.game.repository.ItemRepositoryTest#getRandomItemTest": 61,
      "com.jadventure.game.repository.ItemRepositoryTest#load": 62,
      "com.jadventure.game.repository.ItemRepositoryTest#retrieveItems": 63,
      "com.jadventure.game.repository.ItemRepositoryTest#storeItems": 64,
      "com.jadventure.game.repository.LocationRepositoryTest#getLocationExpectADarkCave": 65,
      "com.jadventure.game.repository.LocationRepositoryTest#getNonExistingLocation": 66,
      "com.jadventure.game.repository.LocationRepositoryTest#testGetLocation": 67,
      "com.jadventure.game.repository.NpcRepositoryTest#getNpc": 68,
      "com.jadventure.game.repository.NpcRepositoryTest#getNpcThatDoesNotExists": 69,
      "com.jadventure.game.repository.NpcRepositoryTest#getNpcWithItems": 70,
      "com.jadventure.game.repository.NpcRepositoryTest#getNpcWithMoreThanZeroGold": 71,
      "com.jadventure.game.repository.NpcRepositoryTest#getNpcWithNoItems": 72,
      "com.jadventure.game.repository.NpcRepositoryTest#getNpcWithZeroGold": 73
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            55, 49, 56, 28, 53, 35, 50, 38, 34, 37, 36, 52, 1, 4, 65, 7, 8, 9,
            6, 0, 3, 5, 2, 51, 54, 39, 66, 67, 10, 48, 47, 46, 70, 72, 58, 68,
            69, 71, 73, 57, 42, 17, 15, 27, 26, 43, 18, 13, 24, 25, 22, 23, 16,
            14, 41, 20, 21, 19, 32, 61, 12, 40, 33, 63, 62, 59, 60, 64, 44, 31,
            29, 30, 11, 45
          ]
        ],
        "APSC_c": 0.8469946967784525
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            55, 28, 0, 5, 51, 54, 10, 47, 70, 72, 58, 42, 17, 15, 27, 43, 18,
            13, 24, 25, 22, 23, 14, 41, 61, 62, 60, 64
          ],
          [
            49, 56, 53, 35, 50, 38, 34, 37, 36, 52, 1, 4, 65, 7, 8, 9, 6, 3, 2,
            39, 66, 67, 48, 46, 68, 69, 71, 73, 57, 26, 16, 20, 21, 19, 32, 12,
            40, 33, 63, 59, 44, 31, 29, 30, 11, 45
          ]
        ],
        "APSC_c": 0.9296127490305655
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            55, 37, 65, 7, 0, 5, 54, 46, 69, 73, 17, 15, 27, 21, 32, 63, 60, 29,
            45
          ],
          [49, 34, 36, 4, 9, 3, 51, 66, 10, 47, 42, 26, 12, 33, 59, 64],
          [
            56, 53, 35, 50, 38, 52, 1, 8, 6, 2, 39, 67, 48, 68, 71, 57, 14, 20,
            19, 61, 44, 30
          ],
          [28, 70, 72, 58, 43, 18, 13, 24, 25, 22, 23, 16, 41, 40, 62, 31, 11]
        ],
        "APSC_c": 0.9655818259210229
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [55, 66, 47, 14, 32, 60, 11],
          [49, 2, 46, 13, 22, 16, 61],
          [56, 37, 8, 5, 70, 68, 73, 17, 15, 27, 63],
          [28, 19, 33, 31, 29, 45],
          [53, 36, 7, 3, 48, 43, 25, 41, 59],
          [35, 52, 4, 0, 51, 67, 72, 69, 57, 20, 12, 62],
          [50, 1, 9, 39, 10, 58, 18, 24, 23, 21, 40, 44, 30],
          [38, 34, 65, 6, 54, 71, 42, 26, 64]
        ],
        "APSC_c": 0.983368932994904
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [55, 21, 33, 31, 29],
          [49, 25, 61],
          [56, 3, 57],
          [28],
          [53, 5, 17, 22, 20, 40, 44, 11],
          [35, 2, 71, 18, 23, 19, 63],
          [50, 54, 13, 14, 12, 59, 30],
          [38, 0, 47],
          [34, 9, 42, 62],
          [37, 39, 46],
          [36, 6, 68, 15, 24, 41, 60, 45],
          [52, 8, 72, 27],
          [1, 66, 70, 73, 43, 16, 32, 64],
          [4, 67, 69, 26],
          [65, 51, 10, 58],
          [7, 48]
        ],
        "APSC_c": 0.9908167949141936
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            49, 53, 35, 50, 38, 34, 37, 36, 52, 1, 7, 6, 5, 39, 67, 47, 68, 69,
            71, 73, 57, 43, 18, 13, 22, 14, 20, 21, 32, 12, 40, 63, 64
          ],
          [
            55, 56, 28, 4, 65, 8, 9, 0, 3, 2, 51, 54, 66, 10, 48, 46, 70, 72,
            58, 42, 17, 15, 27, 26, 24, 25, 23, 16, 41, 19, 61, 33, 62, 59, 60,
            44, 31, 29, 30, 11, 45
          ]
        ],
        "APSC_c": 0.9514654828696609
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            49, 53, 35, 50, 38, 37, 65, 9, 2, 39, 48, 68, 69, 42, 17, 26, 12,
            33, 59, 44, 30
          ],
          [
            55, 56, 28, 34, 36, 52, 1, 4, 7, 8, 6, 0, 3, 5, 51, 54, 66, 67, 10,
            47, 46, 70, 72, 58, 71, 73, 57, 15, 27, 43, 18, 13, 24, 25, 22, 23,
            16, 14, 41, 20, 21, 19, 32, 61, 40, 63, 62, 60, 64, 31, 29, 11, 45
          ]
        ],
        "APSC_c": 0.962228799703869
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [49, 53, 35, 38, 4, 6, 51, 39, 48, 42, 26, 62],
          [
            55, 56, 28, 50, 34, 37, 36, 52, 1, 65, 7, 8, 9, 0, 3, 5, 2, 54, 66,
            67, 10, 47, 46, 70, 72, 58, 68, 69, 71, 73, 57, 17, 15, 27, 43, 18,
            13, 24, 25, 22, 23, 16, 14, 41, 20, 21, 19, 32, 61, 12, 40, 33, 63,
            59, 60, 64, 44, 31, 29, 30, 11, 45
          ]
        ],
        "APSC_c": 0.9693686269842976
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [53, 4, 70, 68, 73, 15, 13, 61],
          [35, 65, 39, 72, 69, 57],
          [50, 8, 58],
          [38, 52, 5, 71, 17, 23, 32, 30],
          [55, 9, 51, 54, 46, 26, 62, 45],
          [49, 7, 0, 2, 66, 10, 47, 18, 25, 14, 41, 40, 59, 44, 29],
          [56, 34, 37, 36, 1, 6, 3, 67, 48, 27, 63, 31, 11],
          [28, 42, 43, 24, 22, 16, 20, 21, 19, 12, 33, 60, 64]
        ],
        "APSC_c": 0.992971478464263
      }
    ]
  },
  {
    "filename": "cowtowncoder_low-gc-membuffers.json",
    "name_to_id": {
      "com.fasterxml.util.membuf.bytes.AppendAndReadBytesTest#testChunkyAppendAndGet": 0,
      "com.fasterxml.util.membuf.bytes.AppendAndReadBytesTest#testChunkyAppendAndRead": 1,
      "com.fasterxml.util.membuf.bytes.AppendAndReadBytesTest#testChunkyReadFromEmpty": 2,
      "com.fasterxml.util.membuf.bytes.AppendAndReadBytesTest#testEmptySegments": 3,
      "com.fasterxml.util.membuf.bytes.AppendAndReadBytesTest#testStreamyAppendAndGet": 4,
      "com.fasterxml.util.membuf.bytes.AppendAndReadBytesTest#testStreamyAppendAndGet2": 5,
      "com.fasterxml.util.membuf.bytes.AppendAndReadBytesTest#testStreamyReadFromEmpty": 6,
      "com.fasterxml.util.membuf.bytes.FullBytesBufferTest#testChunkyMaxBuffers": 7,
      "com.fasterxml.util.membuf.bytes.FullBytesBufferTest#testChunkyTryWriteToFull": 8,
      "com.fasterxml.util.membuf.bytes.FullBytesBufferTest#testStreamyMaxBuffers": 9,
      "com.fasterxml.util.membuf.bytes.FullBytesBufferTest#testStreamyTryWriteToFull": 10,
      "com.fasterxml.util.membuf.bytes.LeakingBuffersTest#testSimpleLeak": 11,
      "com.fasterxml.util.membuf.bytes.LongerChunkyBytesTest#test12SegmentBuffer": 12,
      "com.fasterxml.util.membuf.bytes.LongerChunkyBytesTest#testShakespeareLineByLine": 13,
      "com.fasterxml.util.membuf.bytes.LongerStreamyBytesTest#test12SegmentBuffer": 14,
      "com.fasterxml.util.membuf.bytes.LongerStreamyBytesTest#testShakespeare": 15,
      "com.fasterxml.util.membuf.bytes.PeekChunkyBytesTest#testChunkyPeeks": 16,
      "com.fasterxml.util.membuf.bytes.SkipBytesTest#testChunkyLongerSkip": 17,
      "com.fasterxml.util.membuf.bytes.SkipBytesTest#testChunkySkipAndRead": 18,
      "com.fasterxml.util.membuf.bytes.SkipBytesTest#testChunkySkips": 19,
      "com.fasterxml.util.membuf.bytes.SkipBytesTest#testStreamyLongerSkip": 20,
      "com.fasterxml.util.membuf.bytes.SkipBytesTest#testStreamySkipAndRead": 21,
      "com.fasterxml.util.membuf.bytes.SkipBytesTest#testStreamySkips": 22,
      "com.fasterxml.util.membuf.impl.BufferCloseTest#testClosing": 23,
      "com.fasterxml.util.membuf.impl.BufferReuseTest#testGlobalReuseWithClear": 24,
      "com.fasterxml.util.membuf.impl.BufferReuseTest#testGlobalReuseWithReads": 25,
      "com.fasterxml.util.membuf.longs.AppendReadLongsTest#testEmptySegments": 26,
      "com.fasterxml.util.membuf.longs.AppendReadLongsTest#testSimpleAppendAndGet": 27,
      "com.fasterxml.util.membuf.longs.AppendReadLongsTest#testSimpleAppendAndRead": 28,
      "com.fasterxml.util.membuf.longs.AppendReadLongsTest#testStreamyAppendAndGet": 29,
      "com.fasterxml.util.membuf.longs.AppendReadLongsTest#testStreamyAppendAndGet2": 30,
      "com.fasterxml.util.membuf.longs.AppendReadLongsTest#testStreamyReadFromEmpty": 31,
      "com.fasterxml.util.membuf.longs.AppendReadLongsTest#testTryReadFromEmpty": 32,
      "com.fasterxml.util.membuf.longs.FullLongsBufferTest#testChunkyMaxBuffers": 33,
      "com.fasterxml.util.membuf.longs.FullLongsBufferTest#testChunkyTryWriteToFull": 34,
      "com.fasterxml.util.membuf.longs.FullLongsBufferTest#testStreamyMaxBuffers": 35,
      "com.fasterxml.util.membuf.longs.FullLongsBufferTest#testStreamyTryWriteToFull": 36,
      "com.fasterxml.util.membuf.longs.LongerChunkyLongsTest#test12SegmentBuffer": 37,
      "com.fasterxml.util.membuf.longs.LongerStreamyLongsTest#test12SegmentBuffer": 38,
      "com.fasterxml.util.membuf.longs.LongerStreamyLongsTest#testShakespeare": 39,
      "com.fasterxml.util.membuf.longs.PeekChunkyLongsTest#testSimplePeeks": 40,
      "com.fasterxml.util.membuf.longs.SkipLongsTest#testChunkySkips": 41,
      "com.fasterxml.util.membuf.longs.SkipLongsTest#testLongerSkip": 42,
      "com.fasterxml.util.membuf.longs.SkipLongsTest#testSimpleSkipAndRead": 43,
      "com.fasterxml.util.membuf.longs.SkipLongsTest#testStreamyLongerSkip": 44,
      "com.fasterxml.util.membuf.longs.SkipLongsTest#testStreamySkipAndRead": 45,
      "com.fasterxml.util.membuf.longs.SkipLongsTest#testStreamySkips": 46,
      "com.fasterxml.util.membuf.misc.TestAutoClose#testAutoCloseWithFinalize": 47,
      "com.fasterxml.util.membuf.util.BufferRecyclerTest#testSimple": 48,
      "com.fasterxml.util.membuf.util.UTF8MateTest#testLonger": 49,
      "com.fasterxml.util.membuf.util.UTF8MateTest#testSimple": 50
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            16, 40, 13, 37, 12, 0, 27, 15, 39, 18, 43, 1, 14, 28, 38, 8, 34, 7,
            3, 33, 4, 29, 19, 41, 9, 35, 10, 36, 17, 26, 21, 42, 45, 5, 30, 23,
            25, 22, 46, 20, 44, 24, 11, 47, 49, 2, 32, 6, 31, 50, 48
          ]
        ],
        "APSC_c": 0.7332166907136681
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [16, 13, 39, 17, 21, 45, 30, 25, 46, 44, 11, 49],
          [
            40, 37, 12, 0, 27, 15, 18, 43, 1, 14, 28, 38, 8, 34, 7, 3, 33, 4,
            29, 19, 41, 9, 35, 10, 36, 26, 42, 5, 23, 22, 20, 24, 47, 2, 32, 6,
            31, 50, 48
          ]
        ],
        "APSC_c": 0.8742093082004464
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            16, 12, 18, 43, 1, 14, 28, 38, 8, 34, 7, 3, 33, 4, 29, 19, 41, 9,
            35, 10, 36, 26, 42, 5, 30, 25, 44, 11, 2, 6
          ],
          [40, 0, 15, 22, 24, 47, 50, 48],
          [13, 32, 31],
          [37, 27, 39, 17, 21, 45, 23, 46, 20, 49]
        ],
        "APSC_c": 0.9452165109895635
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [16, 43, 8, 7, 19, 36, 21, 23, 44, 2, 31],
          [40, 1, 34, 3, 41, 17, 5, 22, 11, 6, 48],
          [13],
          [37, 14, 4, 35, 42, 25, 24, 32, 50],
          [12, 28, 33, 9, 26, 30, 46, 47],
          [0, 18, 38, 29, 10, 45, 20, 49],
          [27, 39],
          [15]
        ],
        "APSC_c": 0.9787524947716624
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [16, 19, 30, 32],
          [40, 41, 23, 6],
          [13],
          [37, 35, 2],
          [12, 10, 20],
          [0, 33, 25, 50],
          [27, 34, 36, 44],
          [15],
          [39],
          [18, 7, 17, 24],
          [43, 3, 45, 48],
          [1, 4, 26, 47],
          [14, 21, 46],
          [28, 9, 22, 31],
          [38, 42, 11],
          [8, 29, 5, 49]
        ],
        "APSC_c": 0.9888476794224698
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            40, 37, 12, 0, 27, 15, 33, 19, 10, 17, 42, 30, 22, 44, 47, 2, 32, 6,
            50, 48
          ],
          [
            16, 13, 39, 18, 43, 1, 14, 28, 38, 8, 34, 7, 3, 4, 29, 41, 9, 35,
            36, 26, 21, 45, 5, 23, 25, 46, 20, 24, 11, 49, 31
          ]
        ],
        "APSC_c": 0.9138218990679482
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [40, 37, 12, 0, 27, 15, 2, 32, 6, 50],
          [
            16, 13, 39, 18, 43, 1, 14, 28, 38, 8, 34, 7, 3, 33, 4, 29, 19, 41,
            9, 35, 10, 36, 17, 26, 21, 42, 45, 5, 30, 23, 25, 22, 46, 20, 44,
            24, 11, 47, 49, 31, 48
          ]
        ],
        "APSC_c": 0.935683495168815
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [40, 37, 12, 0, 27, 15, 2, 50, 48],
          [
            16, 13, 39, 18, 43, 1, 14, 28, 38, 8, 34, 7, 3, 33, 4, 29, 19, 41,
            9, 35, 10, 36, 17, 26, 21, 42, 45, 5, 30, 23, 25, 22, 46, 20, 44,
            24, 11, 47, 49, 32, 6, 31
          ]
        ],
        "APSC_c": 0.9502462094552474
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [12, 19, 23, 2],
          [0, 8, 9, 5, 47],
          [27, 38, 30, 49],
          [15],
          [16, 39],
          [
            40, 18, 1, 28, 34, 3, 4, 41, 10, 17, 21, 42, 25, 46, 44, 24, 32, 50,
            48
          ],
          [13],
          [37, 43, 14, 7, 33, 29, 35, 36, 26, 45, 22, 20, 11, 6, 31]
        ],
        "APSC_c": 0.9885496893160932
      }
    ]
  },
  {
    "filename": "takahikokawasaki_nv-websocket-client.json",
    "name_to_id": {
      "com.neovisionaries.ws.client.MiscTest#test01": 0,
      "com.neovisionaries.ws.client.MiscTest#test02": 1,
      "com.neovisionaries.ws.client.MiscTest#test03": 2,
      "com.neovisionaries.ws.client.MiscTest#test04": 3,
      "com.neovisionaries.ws.client.MiscTest#test05": 4,
      "com.neovisionaries.ws.client.MiscTest#test06": 5,
      "com.neovisionaries.ws.client.MiscTest#test07": 6,
      "com.neovisionaries.ws.client.MiscTest#test08": 7,
      "com.neovisionaries.ws.client.MiscTest#test09": 8,
      "com.neovisionaries.ws.client.MiscTest#test10": 9,
      "com.neovisionaries.ws.client.MiscTest#test11": 10,
      "com.neovisionaries.ws.client.MiscTest#test12": 11,
      "com.neovisionaries.ws.client.MiscTest#test13": 12,
      "com.neovisionaries.ws.client.MiscTest#test14": 13,
      "com.neovisionaries.ws.client.MiscTest#test15": 14,
      "com.neovisionaries.ws.client.MiscTest#test16": 15,
      "com.neovisionaries.ws.client.MiscTest#test17": 16,
      "com.neovisionaries.ws.client.MiscTest#test18": 17,
      "com.neovisionaries.ws.client.MiscTest#test19": 18,
      "com.neovisionaries.ws.client.MiscTest#test20": 19,
      "com.neovisionaries.ws.client.MiscTest#test21": 20,
      "com.neovisionaries.ws.client.MiscTest#test22": 21,
      "com.neovisionaries.ws.client.MiscTest#test23": 22,
      "com.neovisionaries.ws.client.MiscTest#test24": 23,
      "com.neovisionaries.ws.client.MiscTest#test25": 24,
      "com.neovisionaries.ws.client.MiscTest#test26": 25,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test001": 26,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test002": 27,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test003": 28,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test004": 29,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test005": 30,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test006": 31,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test007": 32,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test008": 33,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test009": 34,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test010": 35,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test011": 36,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test012": 37,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test013": 38,
      "com.neovisionaries.ws.client.PerMessageDeflateExtensionTest#test014": 39,
      "com.neovisionaries.ws.client.TokenTest#test001": 40,
      "com.neovisionaries.ws.client.TokenTest#test002": 41,
      "com.neovisionaries.ws.client.TokenTest#test003": 42,
      "com.neovisionaries.ws.client.TokenTest#test004": 43,
      "com.neovisionaries.ws.client.TokenTest#test005": 44,
      "com.neovisionaries.ws.client.TokenTest#test006": 45,
      "com.neovisionaries.ws.client.TokenTest#test007": 46,
      "com.neovisionaries.ws.client.TokenTest#test008": 47,
      "com.neovisionaries.ws.client.TokenTest#test009": 48,
      "com.neovisionaries.ws.client.TokenTest#test010": 49,
      "com.neovisionaries.ws.client.TokenTest#test011": 50,
      "com.neovisionaries.ws.client.TokenTest#test012": 51,
      "com.neovisionaries.ws.client.TokenTest#test013": 52,
      "com.neovisionaries.ws.client.TokenTest#test014": 53,
      "com.neovisionaries.ws.client.TokenTest#test015": 54,
      "com.neovisionaries.ws.client.TokenTest#test016": 55,
      "com.neovisionaries.ws.client.TokenTest#test017": 56,
      "com.neovisionaries.ws.client.TokenTest#test018": 57,
      "com.neovisionaries.ws.client.WebSocketExtensionTest#test001": 58,
      "com.neovisionaries.ws.client.WebSocketExtensionTest#test002": 59,
      "com.neovisionaries.ws.client.WebSocketExtensionTest#test003": 60,
      "com.neovisionaries.ws.client.WebSocketExtensionTest#test004": 61,
      "com.neovisionaries.ws.client.WebSocketExtensionTest#test005": 62,
      "com.neovisionaries.ws.client.WebSocketFrameTest#test001": 63,
      "com.neovisionaries.ws.client.WebSocketFrameTest#test002": 64,
      "com.neovisionaries.ws.client.WebSocketFrameTest#test003": 65,
      "com.neovisionaries.ws.client.WebSocketFrameTest#test004": 66,
      "com.neovisionaries.ws.client.WebSocketFrameTest#test005": 67,
      "com.neovisionaries.ws.client.WebSocketFrameTest#test006": 68,
      "com.neovisionaries.ws.client.WebSocketFrameTest#test007": 69,
      "com.neovisionaries.ws.client.WebSocketFrameTest#test008": 70,
      "com.neovisionaries.ws.client.WebSocketFrameTest#test009": 71,
      "com.neovisionaries.ws.client.WebSocketFrameTest#test010": 72
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            71, 72, 28, 37, 38, 39, 32, 33, 34, 36, 31, 35, 30, 69, 29, 27, 62,
            70, 59, 65, 61, 60, 64, 26, 68, 67, 63, 66, 58, 56, 57, 47, 48, 49,
            43, 53, 42, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
            16, 17, 18, 19, 20, 51, 52, 54, 55, 45, 46, 21, 22, 23, 24, 25, 40,
            41, 44, 50
          ]
        ],
        "APSC_c": 0.8921419467780903
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            71, 28, 38, 32, 34, 31, 35, 69, 62, 59, 65, 60, 26, 68, 66, 56, 47,
            49, 53, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 51, 52, 55, 46, 22, 23,
            25, 44
          ],
          [
            72, 37, 39, 33, 36, 30, 29, 27, 70, 61, 64, 67, 63, 58, 57, 48, 43,
            42, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 54, 45, 21, 24, 40, 41,
            50
          ]
        ],
        "APSC_c": 0.941816074211415
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [71, 34, 30, 62, 59, 61, 64, 66, 43, 1, 6, 11, 14, 19, 54, 21, 40],
          [72, 31, 69, 60, 68, 57, 48, 0, 4, 8, 10, 15, 20, 52, 46, 24, 41],
          [
            28, 38, 32, 35, 27, 70, 26, 63, 47, 53, 3, 7, 12, 16, 18, 55, 22, 25
          ],
          [
            37, 39, 33, 36, 29, 65, 67, 58, 56, 49, 42, 2, 5, 9, 13, 17, 51, 45,
            23, 44, 50
          ]
        ],
        "APSC_c": 0.9689312148659398
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [71, 65, 56, 53, 5, 13, 51, 45, 41],
          [72, 26, 58, 47, 42, 4, 11, 17, 24],
          [28, 35, 62, 60, 66, 3, 12, 20, 40, 50],
          [37, 30, 61, 63, 7, 14, 52, 46, 44],
          [38, 36, 70, 57, 48, 0, 8, 15, 54, 21],
          [39, 31, 27, 59, 68, 6, 16, 55, 22],
          [32, 69, 67, 43, 2, 9, 18, 23],
          [33, 34, 29, 64, 49, 1, 10, 19, 25]
        ],
        "APSC_c": 0.9802561736883036
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [71, 5, 51, 46],
          [72, 13, 25],
          [28, 64, 9, 55, 40],
          [37, 68, 16, 41],
          [38, 61, 49, 1, 18],
          [39, 60, 47, 2, 17],
          [32, 67, 8, 20],
          [33, 59, 57, 53, 10, 22],
          [34, 70, 11, 54, 23],
          [36, 63, 14],
          [31, 65, 6, 44],
          [35, 26, 48, 4, 19],
          [30, 56, 0, 15, 50],
          [69, 42, 7, 45],
          [29, 58, 43, 3, 52, 21],
          [27, 62, 66, 12, 24]
        ],
        "APSC_c": 0.9865052680760212
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            72, 32, 31, 30, 27, 70, 64, 63, 47, 43, 0, 3, 6, 10, 13, 17, 20, 45,
            22, 24, 44
          ],
          [
            71, 28, 37, 38, 39, 33, 34, 36, 35, 69, 29, 62, 59, 65, 61, 60, 26,
            68, 67, 66, 58, 56, 57, 48, 49, 53, 42, 1, 2, 4, 5, 7, 8, 9, 11, 12,
            14, 15, 16, 18, 19, 51, 52, 54, 55, 46, 21, 23, 25, 40, 41, 50
          ]
        ],
        "APSC_c": 0.9638309543453126
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [72, 31, 69, 61, 26, 67, 58, 57, 49, 0, 4, 7, 12, 16, 20, 46, 22, 40],
          [
            71, 28, 37, 38, 39, 32, 33, 34, 36, 35, 30, 29, 27, 62, 70, 59, 65,
            60, 64, 68, 63, 66, 56, 47, 48, 43, 53, 42, 1, 2, 3, 5, 6, 8, 9, 10,
            11, 13, 14, 15, 17, 18, 19, 51, 52, 54, 55, 45, 21, 23, 24, 25, 41,
            44, 50
          ]
        ],
        "APSC_c": 0.9732403916385003
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [72, 69, 60, 67, 58, 48, 1, 6, 12, 18, 21, 44],
          [
            71, 28, 37, 38, 39, 32, 33, 34, 36, 31, 35, 30, 29, 27, 62, 70, 59,
            65, 61, 64, 26, 68, 63, 66, 56, 57, 47, 49, 43, 53, 42, 0, 2, 3, 4,
            5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 51, 52, 54, 55, 45,
            46, 22, 23, 24, 25, 40, 41, 50
          ]
        ],
        "APSC_c": 0.9788627875411408
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [38, 59, 56, 5, 40],
          [39, 65, 10],
          [32, 64, 12],
          [33, 62, 58, 0, 17],
          [71, 30, 70, 66, 49, 1, 6, 15, 20, 45, 23, 44],
          [72, 29, 60, 67, 57, 47, 53, 4, 8, 11, 16, 51, 52, 46, 24, 50],
          [28, 34, 31, 69, 26, 63, 43, 2, 7, 13, 19, 54, 21, 41],
          [37, 36, 35, 27, 61, 68, 48, 42, 3, 9, 14, 18, 55, 22, 25]
        ],
        "APSC_c": 0.9933002137984261
      }
    ]
  },
  {
    "filename": "julman99_gson-fire.json",
    "name_to_id": {
      "io.gsonfire.builders.JsonObjectBuilderTest#merge": 0,
      "io.gsonfire.builders.JsonObjectBuilderTest#setBoolean": 1,
      "io.gsonfire.builders.JsonObjectBuilderTest#setBuildImmutable": 2,
      "io.gsonfire.builders.JsonObjectBuilderTest#setJsonElement": 3,
      "io.gsonfire.builders.JsonObjectBuilderTest#setNull": 4,
      "io.gsonfire.builders.JsonObjectBuilderTest#setNumber": 5,
      "io.gsonfire.builders.JsonObjectBuilderTest#setString": 6,
      "io.gsonfire.gson.AnnotationInspectorTest#testGetAnnotatedMethods": 7,
      "io.gsonfire.gson.ClassHierarchyTest#test": 8,
      "io.gsonfire.gson.ClassHierarchyTest#testTypeSelectorAndHierarchy": 9,
      "io.gsonfire.gson.DateSerializationTest#testRFC3339_deserialize_CSS": 10,
      "io.gsonfire.gson.DateSerializationTest#testRFC3339_deserialize_CSS_dot1": 11,
      "io.gsonfire.gson.DateSerializationTest#testRFC3339_deserialize_CSS_dot10": 12,
      "io.gsonfire.gson.DateSerializationTest#testRFC3339_deserialize_CSS_round_over_5": 13,
      "io.gsonfire.gson.DateSerializationTest#testRFC3339_deserialize_CSS_round_under_5": 14,
      "io.gsonfire.gson.DateSerializationTest#testRFC3339_deserialize_NY": 15,
      "io.gsonfire.gson.DateSerializationTest#testRFC3339_raceCondition": 16,
      "io.gsonfire.gson.DateSerializationTest#testRFC3339_serialize_CCS": 17,
      "io.gsonfire.gson.DateSerializationTest#testRFC3339_serialize_NY": 18,
      "io.gsonfire.gson.DateSerializationTest#testUnixTimestampMillis_deserialize": 19,
      "io.gsonfire.gson.DateSerializationTest#testUnixTimestampMillis_serialize": 20,
      "io.gsonfire.gson.DateSerializationTest#testUnixTimestampMillis_serialize_negative": 21,
      "io.gsonfire.gson.DateSerializationTest#testUnixTimestampMillis_serialize_no_negative": 22,
      "io.gsonfire.gson.DateSerializationTest#testUnixTimestampSeconds_deserialize": 23,
      "io.gsonfire.gson.DateSerializationTest#testUnixTimestampSeconds_serialize": 24,
      "io.gsonfire.gson.DateSerializationTest#testUnixTimestampSeconds_serialize_negative": 25,
      "io.gsonfire.gson.DateSerializationTest#testUnixTimestampSeconds_serialize_no_negative": 26,
      "io.gsonfire.gson.DateSerializationTest#test_nullDeserialize": 27,
      "io.gsonfire.gson.DateSerializationTest#test_nullSerialize": 28,
      "io.gsonfire.gson.EnumDefaultValueTest#testNull": 29,
      "io.gsonfire.gson.EnumDefaultValueTest#testParse": 30,
      "io.gsonfire.gson.EnumDefaultValueTest#testParseToNull": 31,
      "io.gsonfire.gson.EnumDefaultValueTest#testSerialize": 32,
      "io.gsonfire.gson.ExcludeByValueTest#testExclusion": 33,
      "io.gsonfire.gson.ExcludeByValueTest#testNonExclusion": 34,
      "io.gsonfire.gson.ExposeMethodResultTest#test": 35,
      "io.gsonfire.gson.ExposeMethodResultTest#testConflictResolution": 36,
      "io.gsonfire.gson.ExposeMethodResultTest#testError": 37,
      "io.gsonfire.gson.ExposeMethodResultTest#testInterfaceMethodsMapping": 38,
      "io.gsonfire.gson.FireExclusionStrategyTest#testMethodExclusion": 39,
      "io.gsonfire.gson.HooksExceptionTest#testNonEnabled": 40,
      "io.gsonfire.gson.HooksExceptionTest#testPostDeserializeException": 41,
      "io.gsonfire.gson.HooksExceptionTest#testPreSerializeException": 42,
      "io.gsonfire.gson.HooksTest#testNonEnabled": 43,
      "io.gsonfire.gson.HooksTest#testNull": 44,
      "io.gsonfire.gson.HooksTest#testPostDeserialize": 45,
      "io.gsonfire.gson.HooksTest#testPostDeserializeOrder": 46,
      "io.gsonfire.gson.HooksTest#testPreSerialize": 47,
      "io.gsonfire.gson.HooksTest#testRecursion": 48,
      "io.gsonfire.gson.LenientPersistTest#testLeninentPersist": 49,
      "io.gsonfire.gson.LenientPersistTest#testNonLeninentPersist": 50,
      "io.gsonfire.gson.MergeMapTest#testMergeMap": 51,
      "io.gsonfire.gson.NaNTest#testNanAllow": 52,
      "io.gsonfire.gson.NaNTest#testNanDisallowSerializing": 53,
      "io.gsonfire.gson.PostProcessorTest#test": 54,
      "io.gsonfire.gson.PreProcessorTest#test": 55,
      "io.gsonfire.gson.SimpleIterableTest#testGenericIterated": 56,
      "io.gsonfire.gson.SimpleIterableTest#testRecursiveGenericIterated": 57,
      "io.gsonfire.gson.SimpleIterableTest#testSimpleIterableContainer": 58,
      "io.gsonfire.gson.SimpleIterableTest#testSimpleIterated": 59,
      "io.gsonfire.gson.TypeSelectorTest#test": 60,
      "io.gsonfire.gson.TypeSelectorTest#testNull": 61,
      "io.gsonfire.gson.WrapTest#testUnwrap": 62,
      "io.gsonfire.gson.WrapTest#testWrap": 63,
      "io.gsonfire.util.IterableMapperTest#testEqualsEmpty": 64,
      "io.gsonfire.util.IterableMapperTest#testEqualsWithNull": 65,
      "io.gsonfire.util.IterableMapperTest#testEqualsWithValues": 66,
      "io.gsonfire.util.IterableMapperTest#testMapsCorrectly": 67,
      "io.gsonfire.util.IterableMapperTest#testMapsWhenIterates": 68,
      "io.gsonfire.util.RFC3339DateFormatTest#testFormatNoTime": 69,
      "io.gsonfire.util.RFC3339DateFormatTest#testFormatWithMillis": 70,
      "io.gsonfire.util.RFC3339DateFormatTest#testFormatWithMillisWithInvisibleTailingZero": 71,
      "io.gsonfire.util.RFC3339DateFormatTest#testFormatWithMillisWithLeadingZero": 72,
      "io.gsonfire.util.RFC3339DateFormatTest#testFormatWithMillisWithVisibleTailingZero": 73,
      "io.gsonfire.util.RFC3339DateFormatTest#testFormatWithMillis_CCS": 74,
      "io.gsonfire.util.RFC3339DateFormatTest#testFormatWithMillis_NY": 75,
      "io.gsonfire.util.RFC3339DateFormatTest#testFormatWithZeroMillisNotVisible": 76,
      "io.gsonfire.util.RFC3339DateFormatTest#testFormatWithZeroMillisVisible": 77,
      "io.gsonfire.util.RFC3339DateFormatTest#testFormatWithoutMillis": 78,
      "io.gsonfire.util.RFC3339DateFormatTest#testParseDateTime_NoTime": 79,
      "io.gsonfire.util.RFC3339DateFormatTest#testParseDate_NoTime": 80,
      "io.gsonfire.util.RFC3339DateFormatTest#testParseDate_Time": 81,
      "io.gsonfire.util.RFC3339DateFormatTest#testParseLowerCase": 82,
      "io.gsonfire.util.RFC3339DateFormatTest#testParseNoTZ": 83,
      "io.gsonfire.util.RFC3339DateFormatTest#testParseSimple": 84,
      "io.gsonfire.util.RFC3339DateFormatTest#testParseTimezoneShiftDays": 85,
      "io.gsonfire.util.RFC3339DateFormatTest#testParseWithMillis": 86,
      "io.gsonfire.util.RFC3339DateFormatTest#testParseWithMillisAndLeadingZero": 87,
      "io.gsonfire.util.RFC3339DateFormatTest#testParseWithMillisAndTailingZero": 88,
      "io.gsonfire.util.RFC3339DateFormatTest#testParseWithMillisAndWithoutTailingZero": 89,
      "io.gsonfire.util.reflection.CachedReflectionFactoryTest#get": 90
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            9, 48, 46, 8, 52, 39, 45, 60, 36, 38, 35, 41, 33, 47, 51, 42, 37,
            16, 53, 34, 54, 55, 61, 44, 49, 50, 10, 11, 12, 13, 15, 14, 17, 18,
            56, 57, 59, 58, 63, 27, 62, 30, 31, 19, 20, 21, 23, 24, 25, 29, 22,
            26, 32, 28, 65, 66, 40, 43, 82, 3, 7, 74, 75, 86, 87, 88, 89, 70,
            71, 72, 78, 79, 83, 84, 85, 81, 80, 0, 73, 76, 77, 64, 67, 68, 4, 1,
            2, 5, 6, 69, 90
          ]
        ],
        "APSC_c": 0.7008029363988604
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            9, 46, 52, 45, 36, 35, 33, 47, 42, 16, 56, 59, 63, 30, 31, 20, 23,
            29, 32, 65, 66, 40, 3, 7, 75, 87, 89, 71, 72, 83, 85, 81, 73, 77,
            67, 4, 2, 6, 90
          ],
          [
            48, 8, 39, 60, 38, 41, 51, 37, 53, 34, 54, 55, 61, 44, 49, 50, 10,
            11, 12, 13, 15, 14, 17, 18, 57, 58, 27, 62, 19, 21, 24, 25, 22, 26,
            28, 43, 82, 74, 86, 88, 70, 78, 79, 84, 80, 0, 76, 64, 68, 1, 5, 69
          ]
        ],
        "APSC_c": 0.8453722363456108
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            9, 52, 36, 33, 37, 54, 61, 49, 11, 14, 17, 57, 63, 31, 21, 25, 26,
            28, 82, 3, 7, 74, 86, 89, 72, 83, 81, 73, 64, 4, 5, 90
          ],
          [
            48, 60, 41, 42, 53, 55, 50, 12, 15, 18, 59, 27, 30, 19, 23, 22, 32,
            43, 75, 88, 71, 78, 84, 80, 77, 67, 1, 69
          ],
          [46, 45, 38, 47, 16],
          [
            8, 39, 35, 51, 34, 44, 10, 13, 56, 58, 62, 20, 24, 29, 65, 66, 40,
            87, 70, 79, 85, 0, 76, 68, 2, 6
          ]
        ],
        "APSC_c": 0.9283131214587681
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [9, 38, 16],
          [48, 42, 54, 50, 14, 59, 19, 29, 88, 79, 73, 5],
          [46, 33, 34, 12, 18, 62, 22, 66, 82, 75, 89, 83, 76, 90],
          [8, 35, 53, 10, 56, 30, 24, 28, 87, 72, 85, 64, 1],
          [52, 36, 37, 49, 15, 58, 20, 32, 7, 86, 71, 84, 4, 69],
          [39, 51, 44, 17, 27, 21, 26, 3, 74, 70, 81, 67, 6],
          [45, 41, 55, 13, 63, 23, 43, 78, 80, 68, 2],
          [60, 47, 61, 11, 57, 31, 25, 65, 40, 0, 77]
        ],
        "APSC_c": 0.9658441474181101
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [9, 53, 59, 25, 79, 4],
          [48, 14, 31, 28, 78, 0, 5],
          [46, 61, 56, 66, 82, 89, 76],
          [8, 34, 63, 7, 86, 85, 6],
          [52, 16],
          [39, 15, 20, 75, 72, 64, 2],
          [45, 54, 57, 26, 84],
          [60, 50, 58, 29],
          [36, 44, 21, 3, 87, 81, 69],
          [38, 49, 18, 65, 40],
          [35, 10, 62, 74, 71, 77],
          [41, 11, 19, 43, 68],
          [33, 55, 30, 32, 80],
          [47, 12, 27, 22, 70, 67, 90],
          [51, 13, 24, 88, 73],
          [42, 37, 17, 23, 83, 1]
        ],
        "APSC_c": 0.9829585690198527
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            48, 52, 60, 35, 47, 37, 53, 34, 54, 55, 61, 44, 49, 50, 12, 15, 56,
            58, 62, 20, 24, 29, 65, 66, 43, 75, 88, 71, 79, 85, 0, 76, 4, 5, 90
          ],
          [
            9, 46, 8, 39, 45, 36, 38, 41, 33, 51, 42, 16, 10, 11, 13, 14, 17,
            18, 57, 59, 63, 27, 30, 31, 19, 21, 23, 25, 22, 26, 32, 28, 40, 82,
            3, 7, 74, 86, 87, 89, 70, 72, 78, 83, 84, 81, 80, 73, 77, 64, 67,
            68, 1, 2, 6, 69
          ]
        ],
        "APSC_c": 0.8987351061548698
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            48, 45, 38, 47, 53, 34, 54, 55, 61, 44, 12, 14, 57, 27, 30, 23, 22,
            28, 82, 86, 70, 83, 81, 77, 2, 90
          ],
          [
            9, 46, 8, 52, 39, 60, 36, 35, 41, 33, 51, 42, 37, 16, 49, 50, 10,
            11, 13, 15, 17, 18, 56, 59, 58, 63, 62, 31, 19, 20, 21, 24, 25, 29,
            26, 32, 65, 66, 40, 43, 3, 7, 74, 75, 87, 88, 89, 71, 72, 78, 79,
            84, 85, 80, 0, 73, 76, 64, 67, 68, 4, 1, 5, 6, 69
          ]
        ],
        "APSC_c": 0.9244288256382625
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [48, 60, 33, 16],
          [
            9, 46, 8, 52, 39, 45, 36, 38, 35, 41, 47, 51, 42, 37, 53, 34, 54,
            55, 61, 44, 49, 50, 10, 11, 12, 13, 15, 14, 17, 18, 56, 57, 59, 58,
            63, 27, 62, 30, 31, 19, 20, 21, 23, 24, 25, 29, 22, 26, 32, 28, 65,
            66, 40, 43, 82, 3, 7, 74, 75, 86, 87, 88, 89, 70, 71, 72, 78, 79,
            83, 84, 85, 81, 80, 0, 73, 76, 77, 64, 67, 68, 4, 1, 2, 5, 6, 69, 90
          ]
        ],
        "APSC_c": 0.9449354794554148
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [52, 34, 59, 32, 6],
          [39, 12, 31, 65, 3, 89, 64],
          [45, 61, 57, 22, 85],
          [60, 50, 63, 74, 81],
          [
            9, 36, 33, 37, 55, 10, 15, 17, 58, 30, 21, 24, 26, 40, 88, 72, 83,
            0, 76, 4, 5
          ],
          [
            48, 41, 42, 53, 49, 11, 14, 18, 27, 19, 23, 29, 82, 7, 75, 86, 70,
            79, 80, 77, 68, 2, 69
          ],
          [
            46, 35, 51, 54, 44, 13, 56, 62, 20, 25, 28, 66, 43, 87, 71, 78, 84,
            73, 67, 1, 90
          ],
          [8, 38, 47, 16]
        ],
        "APSC_c": 0.9862108214431808
      }
    ]
  },
  {
    "filename": "cowtowncoder_java-uuid-generator.json",
    "name_to_id": {
      "com.fasterxml.uuid.EthernetAddressTest#testAsByteArray": 0,
      "com.fasterxml.uuid.EthernetAddressTest#testBogus": 1,
      "com.fasterxml.uuid.EthernetAddressTest#testByteArrayEthernetAddressConstructor": 2,
      "com.fasterxml.uuid.EthernetAddressTest#testClone": 3,
      "com.fasterxml.uuid.EthernetAddressTest#testCompareTo": 4,
      "com.fasterxml.uuid.EthernetAddressTest#testEquals": 5,
      "com.fasterxml.uuid.EthernetAddressTest#testFromInterface": 6,
      "com.fasterxml.uuid.EthernetAddressTest#testLongEthernetAddressConstructor": 7,
      "com.fasterxml.uuid.EthernetAddressTest#testStringEthernetAddressConstructor": 8,
      "com.fasterxml.uuid.EthernetAddressTest#testToByteArray": 9,
      "com.fasterxml.uuid.EthernetAddressTest#testToByteArrayDest": 10,
      "com.fasterxml.uuid.EthernetAddressTest#testToByteArrayDestOffset": 11,
      "com.fasterxml.uuid.EthernetAddressTest#testToLong": 12,
      "com.fasterxml.uuid.EthernetAddressTest#testToString": 13,
      "com.fasterxml.uuid.EthernetAddressTest#testValueOfByteArray": 14,
      "com.fasterxml.uuid.EthernetAddressTest#testValueOfIntArray": 15,
      "com.fasterxml.uuid.EthernetAddressTest#testValueOfLong": 16,
      "com.fasterxml.uuid.EthernetAddressTest#testValueOfString": 17,
      "com.fasterxml.uuid.SimpleGenerationTest#testIssue5": 18,
      "com.fasterxml.uuid.UUIDComparatorTest#testIntComp": 19,
      "com.fasterxml.uuid.UUIDComparatorTest#testLongComp": 20,
      "com.fasterxml.uuid.UUIDComparatorTest#testSorting": 21,
      "com.fasterxml.uuid.UUIDGeneratorTest#testGenerateNameBasedUUIDNameSpaceAndName": 22,
      "com.fasterxml.uuid.UUIDGeneratorTest#testGenerateNameBasedUUIDNameSpaceNameAndMessageDigest": 23,
      "com.fasterxml.uuid.UUIDGeneratorTest#testGenerateRandomBasedUUID": 24,
      "com.fasterxml.uuid.UUIDGeneratorTest#testGenerateTimeBasedUUID": 25,
      "com.fasterxml.uuid.UUIDGeneratorTest#testGenerateTimeBasedUUIDWithEthernetAddress": 26,
      "com.fasterxml.uuid.UUIDGeneratorTest#testGetDummyAddress": 27,
      "com.fasterxml.uuid.UUIDTest#testAsByteArray": 28,
      "com.fasterxml.uuid.UUIDTest#testByteArrayUUIDConstructor": 29,
      "com.fasterxml.uuid.UUIDTest#testCompareTo": 30,
      "com.fasterxml.uuid.UUIDTest#testDefaultUUIDConstructor": 31,
      "com.fasterxml.uuid.UUIDTest#testEquals": 32,
      "com.fasterxml.uuid.UUIDTest#testGetNullUUID": 33,
      "com.fasterxml.uuid.UUIDTest#testGetType": 34,
      "com.fasterxml.uuid.UUIDTest#testHashCode": 35,
      "com.fasterxml.uuid.UUIDTest#testIsNullUUID": 36,
      "com.fasterxml.uuid.UUIDTest#testStringUUIDConstructor": 37,
      "com.fasterxml.uuid.UUIDTest#testToByteArray": 38,
      "com.fasterxml.uuid.UUIDTest#testToByteArrayDest": 39,
      "com.fasterxml.uuid.UUIDTest#testToByteArrayDestOffset": 40,
      "com.fasterxml.uuid.UUIDTest#testToString": 41,
      "com.fasterxml.uuid.UUIDTest#testValueOfString": 42,
      "com.fasterxml.uuid.UUIDTimerTest#testGetTimestamp": 43,
      "com.fasterxml.uuid.UUIDTimerTest#testGetTimestampReproducible": 44,
      "com.fasterxml.uuid.UUIDTimerTest#testSecureRandomUUIDTimerConstructor": 45
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            26, 25, 17, 34, 8, 22, 23, 30, 29, 39, 40, 10, 11, 28, 38, 36, 24,
            32, 35, 41, 1, 3, 31, 33, 37, 42, 43, 6, 45, 4, 18, 13, 27, 21, 44,
            9, 5, 15, 0, 14, 20, 2, 12, 19, 16, 7
          ]
        ],
        "APSC_c": 0.6538696635750241
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            26, 17, 34, 8, 23, 10, 28, 36, 32, 35, 41, 1, 3, 31, 33, 37, 42, 43,
            13, 27, 15, 14, 2, 12, 16, 7
          ],
          [
            25, 22, 30, 29, 39, 40, 11, 38, 24, 6, 45, 4, 18, 21, 44, 9, 5, 0,
            20, 19
          ]
        ],
        "APSC_c": 0.8181139210402699
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [26, 30, 29, 39, 10, 11, 38, 24, 45, 27, 20, 7],
          [25, 40, 28, 36, 32, 35, 41, 1, 3, 31, 33, 37, 42, 43, 19],
          [17, 22, 6, 4, 18, 9, 5, 0, 12],
          [34, 8, 23, 13, 21, 44, 15, 14, 2, 16]
        ],
        "APSC_c": 0.9255883063969291
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [26],
          [25],
          [17, 11, 24, 2, 19],
          [34, 29, 40, 36, 41, 31, 37, 43],
          [8, 39, 28, 32, 3, 33, 42, 6, 4, 18, 21, 44, 9, 15, 14, 12, 7],
          [22],
          [23],
          [30, 10, 38, 35, 1, 45, 13, 27, 5, 0, 20, 16]
        ],
        "APSC_c": 0.9719098804813764
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [26],
          [25],
          [17, 45],
          [34, 24],
          [8, 41, 27],
          [22],
          [23],
          [30, 43],
          [29, 32, 4, 15, 20],
          [39, 42, 9, 0, 16],
          [40, 1],
          [10, 35, 6, 7],
          [11, 3, 18],
          [28, 31, 21, 14, 12],
          [38, 33, 13, 5, 2, 19],
          [36, 37, 44]
        ],
        "APSC_c": 0.981889420213801
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [25, 23, 20, 16, 7],
          [
            26, 17, 34, 8, 22, 30, 29, 39, 40, 10, 11, 28, 38, 36, 24, 32, 35,
            41, 1, 3, 31, 33, 37, 42, 43, 6, 45, 4, 18, 13, 27, 21, 44, 9, 5,
            15, 0, 14, 2, 12, 19
          ]
        ],
        "APSC_c": 0.8977291264979137
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [25, 30, 29, 39, 40, 10, 11, 28, 38, 36, 24, 21, 44, 12],
          [
            26, 17, 34, 8, 22, 23, 32, 35, 41, 1, 3, 31, 33, 37, 42, 43, 6, 45,
            4, 18, 13, 27, 9, 5, 15, 0, 14, 20, 2, 19, 16, 7
          ]
        ],
        "APSC_c": 0.920467264554601
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [25, 30, 29, 39, 10, 36, 32, 35, 41, 1, 6, 4, 13, 21, 44, 7],
          [
            26, 17, 34, 8, 22, 23, 40, 11, 28, 38, 24, 3, 31, 33, 37, 42, 43,
            45, 18, 27, 9, 5, 15, 0, 14, 20, 2, 12, 19, 16
          ]
        ],
        "APSC_c": 0.9340657755345515
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [8, 36, 3, 42, 45],
          [22],
          [23],
          [30, 41, 33, 6, 21, 20],
          [26, 13, 27, 12],
          [25, 9, 5, 15, 2, 7],
          [17, 40, 10, 28, 24, 4, 18, 44, 14, 19],
          [34, 29, 39, 11, 38, 32, 35, 1, 31, 37, 43, 0, 16]
        ],
        "APSC_c": 0.9844675711637981
      }
    ]
  },
  {
    "filename": "avaje-metrics_metrics.json",
    "name_to_id": {
      "io.avaje.metrics.core.BaseTimingEntryTest#testCompareTo": 0,
      "io.avaje.metrics.core.BaseTimingEntryTest#testCompareToWithSameDepth": 1,
      "io.avaje.metrics.core.BasicRequestTimingWriterTest#testToMillis": 2,
      "io.avaje.metrics.core.BasicRequestTimingWriterTest#testWrite": 3,
      "io.avaje.metrics.core.CounterMetricTest#test": 4,
      "io.avaje.metrics.core.CounterTest#test": 5,
      "io.avaje.metrics.core.CsvFileReporterTest#exercise_with_MetricReportManager": 6,
      "io.avaje.metrics.core.CsvWriteVisitorTest#testBucketTimedMetricFull": 7,
      "io.avaje.metrics.core.CsvWriteVisitorTest#testBucketTimedMetricPartial": 8,
      "io.avaje.metrics.core.CsvWriteVisitorTest#testCounter": 9,
      "io.avaje.metrics.core.CsvWriteVisitorTest#testGaugeMetric": 10,
      "io.avaje.metrics.core.CsvWriteVisitorTest#testTimedMetric": 11,
      "io.avaje.metrics.core.CsvWriteVisitorTest#testValueMetric": 12,
      "io.avaje.metrics.core.DefaultBucketTimedMetricTest#test": 13,
      "io.avaje.metrics.core.DefaultGaugeDoubleMetricTest#skipCollection_when_unchanged": 14,
      "io.avaje.metrics.core.DefaultGaugeDoubleMetricTest#test": 15,
      "io.avaje.metrics.core.DefaultGaugeLongMetricTest#skipCollection_when_unchanged": 16,
      "io.avaje.metrics.core.DefaultGaugeLongMetricTest#test": 17,
      "io.avaje.metrics.core.DefaultMetricManagerTest#testGetRequestTimingMetrics": 18,
      "io.avaje.metrics.core.DefaultMetricManagerTest#testSetCollection": 19,
      "io.avaje.metrics.core.DefaultMetricNameCacheTest#test": 20,
      "io.avaje.metrics.core.DefaultMetricNameTest#isError": 21,
      "io.avaje.metrics.core.DefaultMetricNameTest#partial_onlyOne": 22,
      "io.avaje.metrics.core.DefaultMetricNameTest#partial_onlyTwo": 23,
      "io.avaje.metrics.core.DefaultMetricNameTest#startsWith": 24,
      "io.avaje.metrics.core.DefaultMetricNameTest#testParse": 25,
      "io.avaje.metrics.core.DisableCollectionTest#test": 26,
      "io.avaje.metrics.core.FileLinesTest#exists": 27,
      "io.avaje.metrics.core.FileLinesTest#exists_when_doesNotExist": 28,
      "io.avaje.metrics.core.FileLinesTest#lines": 29,
      "io.avaje.metrics.core.FileLinesTest#lines_whenError_expect_emptyList": 30,
      "io.avaje.metrics.core.FileLinesTest#linux_only_cpuThrottleMicros": 31,
      "io.avaje.metrics.core.FileLinesTest#linux_only_cpuUsageMicros": 32,
      "io.avaje.metrics.core.JsonWriterTest#testBucketTimedMetricFull": 33,
      "io.avaje.metrics.core.JsonWriterTest#testBucketTimedMetricPartial": 34,
      "io.avaje.metrics.core.JsonWriterTest#testCounter": 35,
      "io.avaje.metrics.core.JsonWriterTest#testGaugeMetric": 36,
      "io.avaje.metrics.core.JsonWriterTest#testMetricList": 37,
      "io.avaje.metrics.core.JsonWriterTest#testTimedMetric": 38,
      "io.avaje.metrics.core.JsonWriterTest#testValueMetric": 39,
      "io.avaje.metrics.core.JvmCGroupCpuMetricGroupTest#convertQuotaToLimits": 40,
      "io.avaje.metrics.core.JvmCGroupCpuMetricGroupTest#convertSharesToRequests": 41,
      "io.avaje.metrics.core.JvmCGroupCpuMetricGroupTest#cpuThrottleMicros": 42,
      "io.avaje.metrics.core.JvmCGroupCpuMetricGroupTest#cpuUsageMicros": 43,
      "io.avaje.metrics.core.JvmCGroupCpuMetricGroupTest#createCGroupCpuLimit": 44,
      "io.avaje.metrics.core.JvmCGroupCpuMetricGroupTest#createCGroupCpuRequests": 45,
      "io.avaje.metrics.core.JvmCGroupMemoryMetricGroupTest#memSource": 46,
      "io.avaje.metrics.core.JvmCGroupMemoryMetricGroupTest#toMegaBytes": 47,
      "io.avaje.metrics.core.JvmGCLoadTest#test": 48,
      "io.avaje.metrics.core.JvmMemoryMetricGroupTest#testCreateHeapGroup": 49,
      "io.avaje.metrics.core.JvmMemoryMetricGroupTest#testCreateNonHeapGroup": 50,
      "io.avaje.metrics.core.JvmProcessMemoryTest#testGetMetrics": 51,
      "io.avaje.metrics.core.JvmSystemMetricGroupTest#testToLoad": 52,
      "io.avaje.metrics.core.MetricManifestTest#testOtherRead": 53,
      "io.avaje.metrics.core.MetricManifestTest#testRead": 54,
      "io.avaje.metrics.core.MetricReportManagerTest#test_constructor": 55,
      "io.avaje.metrics.core.NestedContextTest#testNestedSimple": 56,
      "io.avaje.metrics.core.NestedContextTest#testReport": 57,
      "io.avaje.metrics.core.NestedContextTest#testRequestActive": 58,
      "io.avaje.metrics.core.NestedContextTest#testSkip": 59,
      "io.avaje.metrics.core.NestedContextTest#testSupplier": 60,
      "io.avaje.metrics.core.TimedMetricGroupTest#test": 61,
      "io.avaje.metrics.core.TimedMetricTest#add": 62,
      "io.avaje.metrics.core.TimedMetricTest#timeCallable_when_error": 63,
      "io.avaje.metrics.core.TimedMetricTest#timeCallable_when_success": 64,
      "io.avaje.metrics.core.TimedMetricTest#timeRunnable": 65,
      "io.avaje.metrics.core.TimedMetricTest#timeRunnable_when_error": 66,
      "io.avaje.metrics.core.ValueCounterTest#test": 67,
      "io.avaje.metrics.core.ValueCounterTest#testGetStatisticsWithNoReset": 68,
      "io.avaje.metrics.core.ValueMetricTest#test": 69,
      "io.avaje.metrics.util.LikeMatcherTest#testContains": 70,
      "io.avaje.metrics.util.LikeMatcherTest#testEndsWith": 71,
      "io.avaje.metrics.util.LikeMatcherTest#testStartsAndContains": 72,
      "io.avaje.metrics.util.LikeMatcherTest#testStartsContainsEnds": 73,
      "io.avaje.metrics.util.LikeMatcherTest#testStartsWith": 74,
      "io.avaje.metrics.util.ProcessHandlerTest#testCommand": 75
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            6, 37, 55, 19, 33, 34, 7, 8, 62, 18, 38, 58, 39, 63, 64, 66, 65, 11,
            60, 12, 57, 59, 69, 61, 56, 3, 36, 35, 4, 9, 10, 67, 68, 48, 13, 49,
            15, 17, 46, 50, 42, 14, 16, 44, 51, 45, 20, 53, 54, 2, 5, 43, 1, 0,
            29, 30, 70, 71, 72, 73, 74, 21, 22, 23, 24, 25, 27, 28, 31, 32, 40,
            41, 47, 52, 26, 75
          ]
        ],
        "APSC_c": 0.4860308939295258
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            6, 19, 33, 34, 7, 8, 62, 18, 38, 58, 39, 63, 64, 66, 65, 11, 60, 12,
            57, 59, 69, 61, 56, 3, 36, 35, 4, 9, 10, 67, 68, 48, 13, 49, 15, 17,
            46, 50, 42, 14, 16, 44, 51, 45, 20, 53, 54, 2, 5, 43, 1, 0, 29, 30,
            70, 71, 72, 73, 74, 21, 22, 23, 24, 25, 27, 28, 31, 32, 40, 41, 47,
            52, 26, 75
          ],
          [37, 55]
        ],
        "APSC_c": 0.8736266537889343
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [6],
          [
            37, 34, 62, 38, 39, 64, 65, 60, 57, 69, 56, 36, 4, 10, 68, 13, 49,
            15, 17, 46, 50, 42, 14, 16, 44, 51, 45, 20, 53, 54, 2, 5, 43, 1, 0,
            29, 30, 70, 71, 72, 73, 74, 21, 22, 23, 24, 25, 27, 28, 31, 32, 40,
            41, 47, 52, 26, 75
          ],
          [55],
          [19, 33, 7, 8, 18, 58, 63, 66, 11, 12, 59, 61, 3, 35, 9, 67, 48]
        ],
        "APSC_c": 0.968258905683095
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [6],
          [37, 11, 61, 4, 15, 50, 44, 2, 5, 43, 31],
          [55],
          [19, 38, 64, 57, 3, 67, 16, 45, 1, 0, 30, 40, 41, 47],
          [33, 58, 65, 69, 10, 46, 20, 54, 73, 21, 22, 25, 28, 52],
          [
            34, 39, 60, 56, 9, 13, 49, 17, 42, 53, 70, 71, 72, 74, 23, 24, 27,
            26, 75
          ],
          [7, 62, 63, 12, 36, 48],
          [8, 18, 66, 59, 35, 68, 14, 51, 29, 32]
        ],
        "APSC_c": 0.9790179855408256
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [6],
          [37, 50, 0, 29],
          [55],
          [19, 59, 67, 21, 24, 27],
          [33, 35, 44, 47],
          [34, 4, 45],
          [7, 11, 15, 51],
          [8, 12, 17, 20, 53, 41, 52],
          [62, 57, 9, 54],
          [18, 69, 42, 32],
          [38, 60, 10, 73, 22, 25, 31],
          [58, 65, 68, 30],
          [39, 56, 48],
          [63, 61, 13, 49, 46, 40, 26, 75],
          [64, 36, 16, 43],
          [66, 3, 14, 2, 5, 1, 70, 71, 72, 74, 23, 28]
        ],
        "APSC_c": 0.9819479694317508
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [37, 55],
          [
            6, 19, 33, 34, 7, 8, 62, 18, 38, 58, 39, 63, 64, 66, 65, 11, 60, 12,
            57, 59, 69, 61, 56, 3, 36, 35, 4, 9, 10, 67, 68, 48, 13, 49, 15, 17,
            46, 50, 42, 14, 16, 44, 51, 45, 20, 53, 54, 2, 5, 43, 1, 0, 29, 30,
            70, 71, 72, 73, 74, 21, 22, 23, 24, 25, 27, 28, 31, 32, 40, 41, 47,
            52, 26, 75
          ]
        ],
        "APSC_c": 0.9347290409393245
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [37, 55],
          [
            6, 19, 33, 34, 7, 8, 62, 18, 38, 58, 39, 63, 64, 66, 65, 11, 60, 12,
            57, 59, 69, 61, 56, 3, 36, 35, 4, 9, 10, 67, 68, 48, 13, 49, 15, 17,
            46, 50, 42, 14, 16, 44, 51, 45, 20, 53, 54, 2, 5, 43, 1, 0, 29, 30,
            70, 71, 72, 73, 74, 21, 22, 23, 24, 25, 27, 28, 31, 32, 40, 41, 47,
            52, 26, 75
          ]
        ],
        "APSC_c": 0.9550965769863902
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [37, 55],
          [
            6, 19, 33, 34, 7, 8, 62, 18, 38, 58, 39, 63, 64, 66, 65, 11, 60, 12,
            57, 59, 69, 61, 56, 3, 36, 35, 4, 9, 10, 67, 68, 48, 13, 49, 15, 17,
            46, 50, 42, 14, 16, 44, 51, 45, 20, 53, 54, 2, 5, 43, 1, 0, 29, 30,
            70, 71, 72, 73, 74, 21, 22, 23, 24, 25, 27, 28, 31, 32, 40, 41, 47,
            52, 26, 75
          ]
        ],
        "APSC_c": 0.9652800851339747
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [33, 12, 68, 51, 28],
          [34, 57, 9, 42, 30],
          [7, 63, 36, 50, 45, 25, 32],
          [8, 66, 4, 14, 53, 70, 71, 72, 23, 31],
          [6],
          [
            37, 38, 39, 65, 60, 69, 56, 35, 67, 13, 49, 15, 17, 46, 16, 44, 20,
            54, 2, 5, 43, 1, 0, 29, 73, 74, 21, 22, 24, 27, 40, 41, 47, 52, 26,
            75
          ],
          [55],
          [19, 62, 18, 58, 64, 11, 59, 61, 3, 10, 48]
        ],
        "APSC_c": 0.9934757527963268
      }
    ]
  },
  {
    "filename": "laforge49_jactor.json",
    "name_to_id": {
      "org.agilewiki.jactor.advanced.allInOne.AllInOneTest#test": 0,
      "org.agilewiki.jactor.advanced.many.ManyTest#test": 1,
      "org.agilewiki.jactor.basics.Test1#test": 2,
      "org.agilewiki.jactor.basics.Test2#test": 3,
      "org.agilewiki.jactor.basics.Test2a#test": 4,
      "org.agilewiki.jactor.basics.Test3#test": 5,
      "org.agilewiki.jactor.basics.Test4#test": 6,
      "org.agilewiki.jactor.basics.Test5#test": 7,
      "org.agilewiki.jactor.bufferedEvents.BufferedTimingTest#testTiming": 8,
      "org.agilewiki.jactor.continuation.ContinuationTest#test": 9,
      "org.agilewiki.jactor.counterTest.CounterTest#testAsync": 10,
      "org.agilewiki.jactor.counterTest.CounterTest#testShared": 11,
      "org.agilewiki.jactor.counterTest.CounterTest#testUnshared": 12,
      "org.agilewiki.jactor.events.quadTest.QuadTest#testTiming": 13,
      "org.agilewiki.jactor.iteratorTest.AsyncTimingTest#testSync": 14,
      "org.agilewiki.jactor.iteratorTest.SimpleFactorialTest#testFactorial": 15,
      "org.agilewiki.jactor.iteratorTest.SyncTimingTest#testSync": 16,
      "org.agilewiki.jactor.iteratorTest.factorialTest.FactorialTest#testFactorial": 17,
      "org.agilewiki.jactor.lpc.ASATest#test": 18,
      "org.agilewiki.jactor.lpc.EventTest#test": 19,
      "org.agilewiki.jactor.lpc.SSATest#test": 20,
      "org.agilewiki.jactor.lpc.ShATest#test": 21,
      "org.agilewiki.jactor.lpc.calculatorTest.CalculatorTest#test1": 22,
      "org.agilewiki.jactor.lpc.calculatorTest.CalculatorTest#test2": 23,
      "org.agilewiki.jactor.lpc.calculatorTest.CalculatorTest#test3": 24,
      "org.agilewiki.jactor.lpc.calculatorTest.CalculatorTest#test4": 25,
      "org.agilewiki.jactor.lpc.calculatorTest.CalculatorTest#test5": 26,
      "org.agilewiki.jactor.lpc.calculatorTest.CalculatorTest#test6": 27,
      "org.agilewiki.jactor.lpc.exceptionsTest.AsyncTest#testExceptions": 28,
      "org.agilewiki.jactor.lpc.exceptionsTest.SharedMailboxTest#testExceptions": 29,
      "org.agilewiki.jactor.lpc.exceptionsTest.SyncTest#testExceptions": 30,
      "org.agilewiki.jactor.lpc.serverTest.ServerTest#test": 31,
      "org.agilewiki.jactor.lpc.syncTiming.Sync1Test#test": 32,
      "org.agilewiki.jactor.lpc.timingTest.AsyncMailboxTest#testTiming": 33,
      "org.agilewiki.jactor.lpc.timingTest.MailboxTest#testTiming": 34,
      "org.agilewiki.jactor.lpc.timingTest.SharedMailboxTest#testTiming": 35,
      "org.agilewiki.jactor.multithreadingTest.ResponsePrinterTest#test1": 36,
      "org.agilewiki.jactor.multithreadingTest.ResponsePrinterTest#test2": 37,
      "org.agilewiki.jactor.multithreadingTest.ResponsePrinterTest#test3": 38,
      "org.agilewiki.jactor.multithreadingTest.ResponsePrinterTest#test4": 39,
      "org.agilewiki.jactor.multithreadingTest.ResponsePrinterTest#test5": 40,
      "org.agilewiki.jactor.nbLock.NBLockTest#test": 41,
      "org.agilewiki.jactor.nbLock.exceptionsTest.NBLockExceptionsTest#test": 42,
      "org.agilewiki.jactor.properties.PropertiesTest#test": 43,
      "org.agilewiki.jactor.pubsub.actorName.ActorNameTest#test": 44,
      "org.agilewiki.jactor.pubsub.latency.SharedTest#test": 45,
      "org.agilewiki.jactor.pubsub.publish.PublishTest#test": 46,
      "org.agilewiki.jactor.simpleMachine.CallTest#test": 47,
      "org.agilewiki.jactor.simpleMachine.GotoTest#test": 48,
      "org.agilewiki.jactor.simpleMachine.IfFTest#test": 49,
      "org.agilewiki.jactor.simpleMachine.IfVTest#test": 50,
      "org.agilewiki.jactor.simpleMachine.IteratorTest#test": 51,
      "org.agilewiki.jactor.simpleMachine.ReturnFTest#test": 52,
      "org.agilewiki.jactor.simpleMachine.ReturnVTest#test": 53,
      "org.agilewiki.jactor.simpleMachine.SendFFTest#test": 54,
      "org.agilewiki.jactor.simpleMachine.SendFVTest#test": 55,
      "org.agilewiki.jactor.simpleMachine.SendVFTest#test": 56,
      "org.agilewiki.jactor.simpleMachine.SendVVTest#test": 57,
      "org.agilewiki.jactor.simpleMachine.SetFTest#test": 58,
      "org.agilewiki.jactor.simpleMachine.SetVTest#test": 59
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            12, 34, 10, 1, 25, 11, 35, 40, 54, 56, 39, 42, 45, 55, 57, 46, 18,
            33, 20, 38, 30, 37, 21, 28, 24, 49, 50, 58, 17, 7, 27, 48, 47, 31,
            6, 59, 51, 41, 0, 26, 3, 29, 36, 23, 32, 53, 52, 9, 19, 5, 4, 2, 22,
            8, 43, 13, 44, 15, 14, 16
          ]
        ],
        "APSC_c": 0.7542355568328449
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            12, 10, 25, 11, 35, 20, 38, 30, 37, 21, 28, 24, 49, 50, 58, 17, 7,
            27, 48, 47, 31, 6, 59, 51, 41, 0, 26, 3, 29, 36, 23, 32, 53, 52, 9,
            19, 5, 4, 2, 22, 8, 43, 13, 44, 15, 14, 16
          ],
          [34, 1, 40, 54, 56, 39, 42, 45, 55, 57, 46, 18, 33]
        ],
        "APSC_c": 0.9427858733248277
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [12, 11, 54, 39, 45, 55, 57, 46, 18, 33],
          [34, 35, 0, 26, 3, 29, 36, 23, 53, 52, 19, 4, 22, 13, 16],
          [
            10, 25, 40, 56, 42, 24, 50, 17, 27, 48, 47, 31, 6, 59, 51, 41, 8, 44
          ],
          [1, 20, 38, 30, 37, 21, 28, 49, 58, 7, 32, 9, 5, 2, 43, 15, 14]
        ],
        "APSC_c": 0.9782859448094878
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [12, 45, 33],
          [34, 55, 20, 21, 50, 27, 31, 26, 29, 32, 19, 2, 13],
          [10, 56, 18, 37, 28, 58, 48, 6, 51, 0, 3, 36, 53, 5, 22, 44],
          [1, 23, 52, 9, 8, 15, 14],
          [25, 39, 57, 38, 49, 17, 47, 59, 41],
          [11, 42, 4, 43, 16],
          [35],
          [40, 54, 46, 30, 24, 7]
        ],
        "APSC_c": 0.991566579070743
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [12, 58, 3, 19, 43],
          [34, 17, 41],
          [10, 21, 48, 23, 2],
          [1],
          [25, 24, 26, 9, 16],
          [11, 50, 51, 5, 13],
          [35],
          [40, 18, 27, 29, 4, 14],
          [54, 49, 6, 53, 44],
          [56, 30, 31],
          [39, 33],
          [42],
          [45, 37, 7],
          [55, 28, 47, 32, 15],
          [57, 38, 0, 52, 22],
          [46, 20, 59, 36, 8]
        ],
        "APSC_c": 0.9958776120930274
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            34, 25, 11, 35, 20, 38, 30, 37, 21, 28, 24, 49, 50, 58, 17, 7, 27,
            48, 47, 31, 6, 59, 51, 41, 0, 26, 3, 29, 36, 23, 32, 53, 52, 9, 19,
            5, 4, 2, 22, 8, 43, 13, 44, 15, 14, 16
          ],
          [12, 10, 1, 40, 54, 56, 39, 42, 45, 55, 57, 46, 18, 33]
        ],
        "APSC_c": 0.9507930851110153
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            34, 25, 11, 35, 20, 38, 30, 37, 21, 28, 24, 49, 50, 58, 17, 7, 27,
            48, 47, 31, 6, 59, 51, 41, 0, 26, 3, 29, 36, 23, 32, 53, 52, 9, 19,
            5, 4, 2, 43, 16
          ],
          [
            12, 10, 1, 40, 54, 56, 39, 42, 45, 55, 57, 46, 18, 33, 22, 8, 13,
            44, 15, 14
          ]
        ],
        "APSC_c": 0.9536185580346581
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [
            34, 25, 11, 40, 54, 56, 39, 42, 20, 38, 30, 37, 21, 28, 24, 49, 50,
            58, 17, 7, 27, 48, 47, 31, 6, 59, 51, 41, 0, 26, 3, 29, 36, 23, 32,
            52, 4, 43
          ],
          [
            12, 10, 1, 35, 45, 55, 57, 46, 18, 33, 53, 9, 19, 5, 2, 22, 8, 13,
            44, 15, 14, 16
          ]
        ],
        "APSC_c": 0.9622119739708749
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [25, 38, 17, 31, 15],
          [11, 30, 58, 6, 3, 52, 2, 14],
          [35],
          [40, 18, 24, 47, 29, 9, 43],
          [12, 56, 55, 46, 20, 37, 21, 28, 49, 50, 7],
          [34, 39, 45, 57, 33],
          [10, 54, 42, 41, 16],
          [1, 27, 48, 59, 51, 0, 26, 36, 23, 32, 53, 19, 5, 4, 22, 8, 13, 44]
        ],
        "APSC_c": 0.9966898692447591
      }
    ]
  },
  {
    "filename": "jakewharton_disklrucache.json",
    "name_to_id": {
      "com.jakewharton.disklrucache.DiskLruCacheTest#aggressiveClearingHandlesEdit": 0,
      "com.jakewharton.disklrucache.DiskLruCacheTest#aggressiveClearingHandlesPartialEdit": 1,
      "com.jakewharton.disklrucache.DiskLruCacheTest#aggressiveClearingHandlesRead": 2,
      "com.jakewharton.disklrucache.DiskLruCacheTest#aggressiveClearingHandlesWrite": 3,
      "com.jakewharton.disklrucache.DiskLruCacheTest#cacheSingleEntryOfSizeGreaterThanMaxSize": 4,
      "com.jakewharton.disklrucache.DiskLruCacheTest#cacheSingleValueOfSizeGreaterThanMaxSize": 5,
      "com.jakewharton.disklrucache.DiskLruCacheTest#cannotOperateOnEditAfterPublish": 6,
      "com.jakewharton.disklrucache.DiskLruCacheTest#cannotOperateOnEditAfterRevert": 7,
      "com.jakewharton.disklrucache.DiskLruCacheTest#constructorDoesNotAllowZeroCacheSize": 8,
      "com.jakewharton.disklrucache.DiskLruCacheTest#constructorDoesNotAllowZeroValuesPerEntry": 9,
      "com.jakewharton.disklrucache.DiskLruCacheTest#createNewEntryWithTooFewValuesFails": 10,
      "com.jakewharton.disklrucache.DiskLruCacheTest#editSameVersion": 11,
      "com.jakewharton.disklrucache.DiskLruCacheTest#editSinceEvicted": 12,
      "com.jakewharton.disklrucache.DiskLruCacheTest#editSinceEvictedAndRecreated": 13,
      "com.jakewharton.disklrucache.DiskLruCacheTest#editSnapshotAfterChangeAborted": 14,
      "com.jakewharton.disklrucache.DiskLruCacheTest#editSnapshotAfterChangeCommitted": 15,
      "com.jakewharton.disklrucache.DiskLruCacheTest#emptyCache": 16,
      "com.jakewharton.disklrucache.DiskLruCacheTest#evictOnInsert": 17,
      "com.jakewharton.disklrucache.DiskLruCacheTest#evictOnUpdate": 18,
      "com.jakewharton.disklrucache.DiskLruCacheTest#evictionHonorsLruFromCurrentSession": 19,
      "com.jakewharton.disklrucache.DiskLruCacheTest#evictionHonorsLruFromPreviousSession": 20,
      "com.jakewharton.disklrucache.DiskLruCacheTest#explicitRemoveAppliedToDiskImmediately": 21,
      "com.jakewharton.disklrucache.DiskLruCacheTest#fileDeletedExternally": 22,
      "com.jakewharton.disklrucache.DiskLruCacheTest#growMaxSize": 23,
      "com.jakewharton.disklrucache.DiskLruCacheTest#journalDoesNotIncludeReadOfYetUnpublishedValue": 24,
      "com.jakewharton.disklrucache.DiskLruCacheTest#journalFileIsPreferredOverBackupFile": 25,
      "com.jakewharton.disklrucache.DiskLruCacheTest#journalWithEditAndPublish": 26,
      "com.jakewharton.disklrucache.DiskLruCacheTest#journalWithEditAndPublishAndRead": 27,
      "com.jakewharton.disklrucache.DiskLruCacheTest#keyWithCarriageReturnNotPermitted": 28,
      "com.jakewharton.disklrucache.DiskLruCacheTest#keyWithNewlineNotPermitted": 29,
      "com.jakewharton.disklrucache.DiskLruCacheTest#keyWithSpaceNotPermitted": 30,
      "com.jakewharton.disklrucache.DiskLruCacheTest#nullKeyThrows": 31,
      "com.jakewharton.disklrucache.DiskLruCacheTest#openCreatesDirectoryIfNecessary": 32,
      "com.jakewharton.disklrucache.DiskLruCacheTest#openWithDirtyKeyDeletesAllFilesForThatKey": 33,
      "com.jakewharton.disklrucache.DiskLruCacheTest#openWithInvalidAppVersionClearsDirectory": 34,
      "com.jakewharton.disklrucache.DiskLruCacheTest#openWithInvalidBlankLineClearsDirectory": 35,
      "com.jakewharton.disklrucache.DiskLruCacheTest#openWithInvalidFileSizeClearsDirectory": 36,
      "com.jakewharton.disklrucache.DiskLruCacheTest#openWithInvalidJournalLineClearsDirectory": 37,
      "com.jakewharton.disklrucache.DiskLruCacheTest#openWithInvalidValueCountClearsDirectory": 38,
      "com.jakewharton.disklrucache.DiskLruCacheTest#openWithInvalidVersionClearsDirectory": 39,
      "com.jakewharton.disklrucache.DiskLruCacheTest#openWithTooManyFileSizesClearsDirectory": 40,
      "com.jakewharton.disklrucache.DiskLruCacheTest#openWithTruncatedLineDiscardsThatLine": 41,
      "com.jakewharton.disklrucache.DiskLruCacheTest#readAndWriteEntryAcrossCacheOpenAndClose": 42,
      "com.jakewharton.disklrucache.DiskLruCacheTest#readAndWriteEntryWithoutProperClose": 43,
      "com.jakewharton.disklrucache.DiskLruCacheTest#readAndWriteOverlapsMaintainConsistency": 44,
      "com.jakewharton.disklrucache.DiskLruCacheTest#readingTheSameStreamMultipleTimes": 45,
      "com.jakewharton.disklrucache.DiskLruCacheTest#rebuildJournalOnRepeatedEdits": 46,
      "com.jakewharton.disklrucache.DiskLruCacheTest#rebuildJournalOnRepeatedEditsWithOpenAndClose": 47,
      "com.jakewharton.disklrucache.DiskLruCacheTest#rebuildJournalOnRepeatedReads": 48,
      "com.jakewharton.disklrucache.DiskLruCacheTest#rebuildJournalOnRepeatedReadsWithOpenAndClose": 49,
      "com.jakewharton.disklrucache.DiskLruCacheTest#removeAbsentElement": 50,
      "com.jakewharton.disklrucache.DiskLruCacheTest#removeHandlesMissingFile": 51,
      "com.jakewharton.disklrucache.DiskLruCacheTest#restoreBackupFile": 52,
      "com.jakewharton.disklrucache.DiskLruCacheTest#revertWithTooFewValues": 53,
      "com.jakewharton.disklrucache.DiskLruCacheTest#revertedNewFileIsRemoveInJournal": 54,
      "com.jakewharton.disklrucache.DiskLruCacheTest#shrinkMaxSizeEvicts": 55,
      "com.jakewharton.disklrucache.DiskLruCacheTest#unterminatedEditIsRevertedOnClose": 56,
      "com.jakewharton.disklrucache.DiskLruCacheTest#updateExistingEntryWithTooFewValuesReusesPreviousValues": 57,
      "com.jakewharton.disklrucache.DiskLruCacheTest#validateKey": 58,
      "com.jakewharton.disklrucache.DiskLruCacheTest#writeAndReadEntry": 59,
      "com.jakewharton.disklrucache.StrictLineReaderTest#lineReaderConsistencyWithReadAsciiLine": 60
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            49, 20, 41, 47, 25, 52, 18, 42, 43, 17, 19, 13, 12, 4, 5, 55, 23,
            46, 48, 14, 11, 59, 57, 44, 3, 1, 0, 15, 27, 45, 10, 22, 21, 51, 6,
            33, 24, 37, 36, 40, 26, 32, 7, 53, 54, 34, 35, 38, 39, 56, 58, 2,
            50, 28, 29, 30, 31, 60, 8, 9, 16
          ]
        ],
        "APSC_c": 0.7415464216331391
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            49, 25, 52, 18, 42, 43, 17, 19, 12, 5, 23, 48, 14, 11, 59, 57, 44,
            3, 1, 0, 15, 27, 45, 10, 22, 21, 51, 6, 33, 24, 37, 36, 40, 26, 32,
            7, 53, 54, 34, 35, 38, 39, 56, 58, 2, 50, 28, 29, 30, 31, 60, 8, 9,
            16
          ],
          [20, 41, 47, 13, 4, 55, 46]
        ],
        "APSC_c": 0.9218011687660589
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [49, 56, 2, 60, 16],
          [
            20, 52, 18, 43, 19, 12, 5, 23, 48, 14, 11, 59, 57, 44, 3, 1, 0, 15,
            27, 45, 10, 22, 21, 51, 6, 33, 24, 37, 36, 40, 26, 32, 7, 53, 54,
            34, 35, 38, 39, 58, 50, 28, 29, 30, 31, 8, 9
          ],
          [41, 25, 42, 17, 13, 4, 55, 46],
          [47]
        ],
        "APSC_c": 0.9672396910446825
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [49],
          [20, 12, 23, 59, 3, 10, 6, 24, 26, 54, 58, 2],
          [41, 19, 48],
          [47],
          [25, 55, 57, 1, 45, 21, 36, 7, 53, 38, 28, 30, 60],
          [52, 17, 46],
          [18, 13, 4, 11, 0, 15, 22, 33, 40, 34, 39, 31, 8, 16],
          [42, 43, 5, 14, 44, 27, 51, 37, 32, 35, 56, 50, 29, 9]
        ],
        "APSC_c": 0.9900376793883562
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [49],
          [20, 15, 6, 26, 50, 31],
          [41, 44, 24, 58],
          [47],
          [25, 37, 56],
          [52, 11, 21, 34, 60],
          [18, 3, 53, 2],
          [42, 46],
          [43, 59, 22, 35, 8],
          [17, 0, 33, 39],
          [19, 27, 32, 28, 9],
          [13, 23, 45, 7, 38],
          [12, 48],
          [4, 1, 36, 29],
          [5, 14, 51, 54, 30],
          [55, 57, 10, 40, 16]
        ],
        "APSC_c": 0.9943418249044307
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [20, 41, 47, 48, 32, 54, 39, 2, 9],
          [
            49, 25, 52, 18, 42, 43, 17, 19, 13, 12, 4, 5, 55, 23, 46, 14, 11,
            59, 57, 44, 3, 1, 0, 15, 27, 45, 10, 22, 21, 51, 6, 33, 24, 37, 36,
            40, 26, 7, 53, 34, 35, 38, 56, 58, 50, 28, 29, 30, 31, 60, 8, 16
          ]
        ],
        "APSC_c": 0.9423793241210753
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [20, 41, 47],
          [
            49, 25, 52, 18, 42, 43, 17, 19, 13, 12, 4, 5, 55, 23, 46, 48, 14,
            11, 59, 57, 44, 3, 1, 0, 15, 27, 45, 10, 22, 21, 51, 6, 33, 24, 37,
            36, 40, 26, 32, 7, 53, 54, 34, 35, 38, 39, 56, 58, 2, 50, 28, 29,
            30, 31, 60, 8, 9, 16
          ]
        ],
        "APSC_c": 0.9573777495769882
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [20, 41, 47],
          [
            49, 25, 52, 18, 42, 43, 17, 19, 13, 12, 4, 5, 55, 23, 46, 48, 14,
            11, 59, 57, 44, 3, 1, 0, 15, 27, 45, 10, 22, 21, 51, 6, 33, 24, 37,
            36, 40, 26, 32, 7, 53, 54, 34, 35, 38, 39, 56, 58, 2, 50, 28, 29,
            30, 31, 60, 8, 9, 16
          ]
        ],
        "APSC_c": 0.9671686798897037
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [25, 57, 0, 15, 33, 53, 2],
          [52, 55, 59, 44, 45, 37, 34, 30, 8],
          [18, 23, 11, 3, 51, 40, 56],
          [42, 5, 14, 1, 22, 26, 38],
          [49],
          [20, 17, 13, 12, 46],
          [
            41, 43, 19, 4, 48, 27, 10, 21, 6, 24, 36, 32, 7, 54, 35, 39, 58, 50,
            28, 29, 31, 60, 9, 16
          ],
          [47]
        ],
        "APSC_c": 0.9946989095694678
      }
    ]
  },
  {
    "filename": "tumblr_jumblr.json",
    "name_to_id": {
      "com.tumblr.jumblr.JumblrClientErrorTest#blogDraftPosts": 0,
      "com.tumblr.jumblr.JumblrClientErrorTest#blogFollowers": 1,
      "com.tumblr.jumblr.JumblrClientErrorTest#blogInfo": 2,
      "com.tumblr.jumblr.JumblrClientErrorTest#blogLikes": 3,
      "com.tumblr.jumblr.JumblrClientErrorTest#blogPost": 4,
      "com.tumblr.jumblr.JumblrClientErrorTest#blogPosts": 5,
      "com.tumblr.jumblr.JumblrClientErrorTest#blogQueuedPosts": 6,
      "com.tumblr.jumblr.JumblrClientErrorTest#blogSubmissions": 7,
      "com.tumblr.jumblr.JumblrClientErrorTest#follow": 8,
      "com.tumblr.jumblr.JumblrClientErrorTest#like": 9,
      "com.tumblr.jumblr.JumblrClientErrorTest#postDelete": 10,
      "com.tumblr.jumblr.JumblrClientErrorTest#postReblog": 11,
      "com.tumblr.jumblr.JumblrClientErrorTest#tagged": 12,
      "com.tumblr.jumblr.JumblrClientErrorTest#unfollow": 13,
      "com.tumblr.jumblr.JumblrClientErrorTest#unlike": 14,
      "com.tumblr.jumblr.JumblrClientErrorTest#user": 15,
      "com.tumblr.jumblr.JumblrClientErrorTest#userAvatar": 16,
      "com.tumblr.jumblr.JumblrClientErrorTest#userDashboard": 17,
      "com.tumblr.jumblr.JumblrClientErrorTest#userFollowing": 18,
      "com.tumblr.jumblr.JumblrClientErrorTest#userLikes": 19,
      "com.tumblr.jumblr.JumblrClientTest#blogDraftPosts": 20,
      "com.tumblr.jumblr.JumblrClientTest#blogFollowers": 21,
      "com.tumblr.jumblr.JumblrClientTest#blogInfo": 22,
      "com.tumblr.jumblr.JumblrClientTest#blogLikes": 23,
      "com.tumblr.jumblr.JumblrClientTest#blogPost": 24,
      "com.tumblr.jumblr.JumblrClientTest#blogPosts": 25,
      "com.tumblr.jumblr.JumblrClientTest#blogQueuedPosts": 26,
      "com.tumblr.jumblr.JumblrClientTest#blogSubmissions": 27,
      "com.tumblr.jumblr.JumblrClientTest#follow": 28,
      "com.tumblr.jumblr.JumblrClientTest#like": 29,
      "com.tumblr.jumblr.JumblrClientTest#newPost": 30,
      "com.tumblr.jumblr.JumblrClientTest#postCreate": 31,
      "com.tumblr.jumblr.JumblrClientTest#postDelete": 32,
      "com.tumblr.jumblr.JumblrClientTest#postEdit": 33,
      "com.tumblr.jumblr.JumblrClientTest#postReblog": 34,
      "com.tumblr.jumblr.JumblrClientTest#setToken": 35,
      "com.tumblr.jumblr.JumblrClientTest#tagged": 36,
      "com.tumblr.jumblr.JumblrClientTest#unfollow": 37,
      "com.tumblr.jumblr.JumblrClientTest#unlike": 38,
      "com.tumblr.jumblr.JumblrClientTest#user": 39,
      "com.tumblr.jumblr.JumblrClientTest#userAvatar": 40,
      "com.tumblr.jumblr.JumblrClientTest#userDashboard": 41,
      "com.tumblr.jumblr.JumblrClientTest#userFollowing": 42,
      "com.tumblr.jumblr.JumblrClientTest#userLikes": 43,
      "com.tumblr.jumblr.JumblrClientTest#xauth": 44,
      "com.tumblr.jumblr.request.RequestBuilderTest#testClearEmptyJson": 45,
      "com.tumblr.jumblr.request.RequestBuilderTest#testGetParams": 46,
      "com.tumblr.jumblr.request.RequestBuilderTest#testXauthBadResponseGoodCode": 47,
      "com.tumblr.jumblr.request.RequestBuilderTest#testXauthForbidden": 48,
      "com.tumblr.jumblr.request.RequestBuilderTest#testXauthSuccess": 49,
      "com.tumblr.jumblr.request.RequestBuilderTest#testXauthSuccessWithExtra": 50,
      "com.tumblr.jumblr.types.AnswerPostTest#getAskingName": 51,
      "com.tumblr.jumblr.types.AnswerPostTest#save": 52,
      "com.tumblr.jumblr.types.AudioPostTest#setDataWithSource": 53,
      "com.tumblr.jumblr.types.AudioPostTest#setDataWithoutSource": 54,
      "com.tumblr.jumblr.types.AudioPostTest#setSourceWithData": 55,
      "com.tumblr.jumblr.types.AudioPostTest#setSourceWithoutData": 56,
      "com.tumblr.jumblr.types.AudioPostTest#testOtherDetail": 57,
      "com.tumblr.jumblr.types.AudioPostTest#testReaders": 58,
      "com.tumblr.jumblr.types.BlogTest#avatar": 59,
      "com.tumblr.jumblr.types.BlogTest#draftPosts": 60,
      "com.tumblr.jumblr.types.BlogTest#followers": 61,
      "com.tumblr.jumblr.types.BlogTest#getFollow": 62,
      "com.tumblr.jumblr.types.BlogTest#getLikedPosts": 63,
      "com.tumblr.jumblr.types.BlogTest#getPost": 64,
      "com.tumblr.jumblr.types.BlogTest#getUnfollow": 65,
      "com.tumblr.jumblr.types.BlogTest#newPost": 66,
      "com.tumblr.jumblr.types.BlogTest#posts": 67,
      "com.tumblr.jumblr.types.BlogTest#queuedPosts": 68,
      "com.tumblr.jumblr.types.BlogTest#submissions": 69,
      "com.tumblr.jumblr.types.BlogTest#testReaders": 70,
      "com.tumblr.jumblr.types.ChatPostTest#detail": 71,
      "com.tumblr.jumblr.types.ChatPostTest#testReaders": 72,
      "com.tumblr.jumblr.types.ChatPostTest#testWriters": 73,
      "com.tumblr.jumblr.types.LinkPostTest#detail": 74,
      "com.tumblr.jumblr.types.LinkPostTest#testReaders": 75,
      "com.tumblr.jumblr.types.LinkPostTest#testWriters": 76,
      "com.tumblr.jumblr.types.PhotoPostTest#setDataWithSource": 77,
      "com.tumblr.jumblr.types.PhotoPostTest#setDataWithoutSource": 78,
      "com.tumblr.jumblr.types.PhotoPostTest#setSourceWithData": 79,
      "com.tumblr.jumblr.types.PhotoPostTest#setSourceWithoutData": 80,
      "com.tumblr.jumblr.types.PhotoPostTest#testOtherDetail": 81,
      "com.tumblr.jumblr.types.PhotoPostTest#testReaders": 82,
      "com.tumblr.jumblr.types.PostcardPostTest#detail": 83,
      "com.tumblr.jumblr.types.PostcardPostTest#testReaders": 84,
      "com.tumblr.jumblr.types.PostcardPostTest#testWriters": 85,
      "com.tumblr.jumblr.types.QuotePostTest#detail": 86,
      "com.tumblr.jumblr.types.QuotePostTest#testNotes": 87,
      "com.tumblr.jumblr.types.QuotePostTest#testReaders": 88,
      "com.tumblr.jumblr.types.QuotePostTest#testWriters": 89,
      "com.tumblr.jumblr.types.TextPostTest#detail": 90,
      "com.tumblr.jumblr.types.TextPostTest#testNoteCount": 91,
      "com.tumblr.jumblr.types.TextPostTest#testReaders": 92,
      "com.tumblr.jumblr.types.TextPostTest#testReblog": 93,
      "com.tumblr.jumblr.types.TextPostTest#testWriters": 94,
      "com.tumblr.jumblr.types.UnknownTypePostTest#isFound": 95,
      "com.tumblr.jumblr.types.UserTest#testReaders": 96,
      "com.tumblr.jumblr.types.VideoPostTest#setDataWithEmbedCode": 97,
      "com.tumblr.jumblr.types.VideoPostTest#setDataWithoutEmbedCode": 98,
      "com.tumblr.jumblr.types.VideoPostTest#setEmbedCodeWithData": 99,
      "com.tumblr.jumblr.types.VideoPostTest#setEmbedCodeWithoutData": 100,
      "com.tumblr.jumblr.types.VideoPostTest#testOtherDetail": 101,
      "com.tumblr.jumblr.types.VideoPostTest#testReaders": 102
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            78, 80, 34, 81, 25, 24, 23, 74, 83, 77, 79, 54, 56, 98, 100, 36, 71,
            86, 90, 57, 101, 30, 33, 40, 82, 22, 58, 20, 21, 26, 27, 32, 50, 28,
            31, 37, 49, 102, 29, 38, 41, 42, 43, 44, 46, 70, 39, 72, 76, 85, 87,
            96, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
            18, 19, 35, 88, 51, 53, 55, 73, 89, 94, 97, 99, 75, 84, 92, 93, 95,
            52, 91, 59, 60, 61, 63, 67, 68, 69, 62, 64, 65, 66, 45, 47, 48
          ]
        ],
        "APSC_c": 0.8000269278982312
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            78, 81, 24, 74, 83, 79, 56, 36, 86, 57, 30, 40, 22, 21, 26, 50, 102,
            29, 38, 41, 42, 44, 70, 39, 72, 76, 85, 0, 1, 3, 5, 7, 9, 11, 14,
            15, 17, 19, 88, 55, 73, 94, 99, 92, 95, 52, 59, 63, 68, 62, 65, 45,
            48
          ],
          [
            80, 34, 25, 23, 77, 54, 98, 100, 71, 90, 101, 33, 82, 58, 20, 27,
            32, 28, 31, 37, 49, 43, 46, 87, 96, 2, 4, 6, 8, 10, 12, 13, 16, 18,
            35, 51, 53, 89, 97, 75, 84, 93, 91, 60, 61, 67, 69, 64, 66, 47
          ]
        ],
        "APSC_c": 0.9004531315288546
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            78, 74, 83, 56, 86, 101, 82, 58, 21, 32, 37, 29, 42, 43, 70, 39, 72,
            76, 85, 96, 2, 4, 5, 8, 12, 16, 35, 73, 99, 95, 59, 69, 66, 48
          ],
          [
            80, 25, 77, 98, 71, 57, 40, 20, 28, 102, 38, 41, 44, 46, 87, 0, 1,
            3, 7, 10, 14, 17, 88, 89, 75, 93, 60, 67, 64, 47
          ],
          [
            34, 23, 79, 100, 90, 33, 26, 31, 49, 11, 15, 19, 53, 94, 84, 52, 61,
            68, 65
          ],
          [
            81, 24, 54, 36, 30, 22, 27, 50, 6, 9, 13, 18, 51, 55, 97, 92, 91,
            63, 62, 45
          ]
        ],
        "APSC_c": 0.9537592274478852
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [78, 56, 40, 50, 48],
          [80, 77, 98, 101, 21, 37, 44, 85, 2, 5, 11, 17, 53, 75, 52, 67, 64],
          [34, 54, 57, 58, 32, 102, 43, 87, 1, 4, 9, 15, 88, 94, 93, 63, 65],
          [81, 79, 86, 82, 26, 38, 46, 10, 16, 51, 73, 84, 91, 68, 45],
          [25, 100, 30, 27, 49],
          [24, 90, 22, 28, 41, 72, 96, 8, 14, 35, 99, 59, 66],
          [23, 36, 20, 29, 70, 76, 0, 6, 12, 18, 55, 97, 95, 60, 69, 47],
          [74, 83, 71, 33, 31, 42, 39, 3, 7, 13, 19, 89, 92, 61, 62]
        ],
        "APSC_c": 0.9776257022145874
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [78, 26, 3, 14, 91, 48],
          [80, 40, 41, 8, 35, 63],
          [34, 58, 38, 76, 4, 15, 97, 69],
          [81, 82, 49],
          [25, 27, 43, 9, 88, 93, 66],
          [24, 102, 44, 5, 16, 99, 47],
          [23, 32, 46, 59],
          [74, 86, 50],
          [83, 90, 28, 85, 10, 51, 73, 60],
          [77, 71, 20, 1, 12, 89, 61],
          [79, 57, 31, 70, 96, 53, 95, 67],
          [54, 101, 37, 87, 6, 17, 75, 62],
          [56, 22, 42, 7, 18, 84, 64],
          [98, 30, 29, 0, 19, 92, 65],
          [100, 33, 39, 11, 55, 94, 68],
          [36, 21, 72, 2, 13, 52, 45]
        ],
        "APSC_c": 0.9885872138910814
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            80, 81, 24, 79, 98, 71, 90, 30, 40, 20, 32, 28, 31, 37, 49, 5, 8,
            11, 14, 17, 35, 73, 97, 84, 95, 91, 60, 67, 69, 65, 47
          ],
          [
            78, 34, 25, 23, 74, 83, 77, 54, 56, 100, 36, 86, 57, 101, 33, 82,
            22, 58, 21, 26, 27, 50, 102, 29, 38, 41, 42, 43, 44, 46, 70, 39, 72,
            76, 85, 87, 96, 0, 1, 2, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 18, 19,
            88, 51, 53, 55, 89, 94, 99, 75, 92, 93, 52, 59, 61, 63, 68, 62, 64,
            66, 45, 48
          ]
        ],
        "APSC_c": 0.9358786387483171
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            80, 25, 83, 98, 71, 57, 40, 20, 28, 31, 37, 49, 35, 89, 75, 93, 59,
            68, 65, 47
          ],
          [
            78, 34, 81, 24, 23, 74, 77, 79, 54, 56, 100, 36, 86, 90, 101, 30,
            33, 82, 22, 58, 21, 26, 27, 32, 50, 102, 29, 38, 41, 42, 43, 44, 46,
            70, 39, 72, 76, 85, 87, 96, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
            12, 13, 14, 15, 16, 17, 18, 19, 88, 51, 53, 55, 73, 94, 97, 99, 84,
            92, 95, 52, 91, 60, 61, 63, 67, 69, 62, 64, 66, 45, 48
          ]
        ],
        "APSC_c": 0.952757713914295
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [80, 24, 98, 86, 33, 26, 28, 31, 49, 60, 68, 66, 47],
          [
            78, 34, 81, 25, 23, 74, 83, 77, 79, 54, 56, 100, 36, 71, 90, 57,
            101, 30, 40, 82, 22, 58, 20, 21, 27, 32, 50, 37, 102, 29, 38, 41,
            42, 43, 44, 46, 70, 39, 72, 76, 85, 87, 96, 0, 1, 2, 3, 4, 5, 6, 7,
            8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 35, 88, 51, 53, 55,
            73, 89, 94, 97, 99, 75, 84, 92, 93, 95, 52, 91, 59, 61, 63, 67, 69,
            62, 64, 65, 45, 48
          ]
        ],
        "APSC_c": 0.9626899670365384
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [25, 32, 87, 7, 53, 68],
          [24, 49],
          [23, 50],
          [74, 57, 28, 2, 17, 63],
          [
            78, 54, 36, 40, 20, 102, 41, 46, 6, 11, 15, 19, 55, 97, 92, 91, 67,
            65, 48
          ],
          [
            80, 83, 98, 71, 101, 82, 58, 21, 31, 38, 44, 39, 0, 3, 10, 14, 18,
            51, 94, 84, 95, 59, 64, 47
          ],
          [
            34, 79, 100, 90, 33, 26, 29, 43, 72, 85, 1, 4, 8, 12, 16, 88, 73,
            99, 52, 61, 62, 45
          ],
          [
            81, 77, 56, 86, 30, 22, 27, 37, 42, 70, 76, 96, 5, 9, 13, 35, 89,
            75, 93, 60, 69, 66
          ]
        ],
        "APSC_c": 0.9909323181206185
      }
    ]
  },
  {
    "filename": "sanity_lastcalc.json",
    "name_to_id": {
      "com.lastcalc.ParsersTest#testTokenize": 0,
      "com.lastcalc.SequentialParserTest#addListsTest": 1,
      "com.lastcalc.SequentialParserTest#ansTest": 2,
      "com.lastcalc.SequentialParserTest#backtrackTest": 3,
      "com.lastcalc.SequentialParserTest#concatTest": 4,
      "com.lastcalc.SequentialParserTest#fibTest": 5,
      "com.lastcalc.SequentialParserTest#filterTest": 6,
      "com.lastcalc.SequentialParserTest#firstLineFunctionDefinition": 7,
      "com.lastcalc.SequentialParserTest#ifTest": 8,
      "com.lastcalc.SequentialParserTest#incrementTest": 9,
      "com.lastcalc.SequentialParserTest#mapMatchTest": 10,
      "com.lastcalc.SequentialParserTest#mathOpTest": 11,
      "com.lastcalc.SequentialParserTest#negativeExpTest": 12,
      "com.lastcalc.SequentialParserTest#negativesTest": 13,
      "com.lastcalc.SequentialParserTest#parseWithPrevAnswer": 14,
      "com.lastcalc.SequentialParserTest#powTest": 15,
      "com.lastcalc.SequentialParserTest#precedenceTest": 16,
      "com.lastcalc.SequentialParserTest#radixTest": 17,
      "com.lastcalc.SequentialParserTest#stringFromMapTest": 18,
      "com.lastcalc.SequentialParserTest#toLowerCaseTest": 19,
      "com.lastcalc.engines.CombinedParserPickerFactoryTest#test": 20,
      "com.lastcalc.parsers.PreParserTest#findObjectTest": 21,
      "com.lastcalc.parsers.UserDefinedParserParserTest#bindListTest": 22,
      "com.lastcalc.parsers.UserDefinedParserParserTest#bindMapTest": 23,
      "com.lastcalc.parsers.amounts.UnitParserTest#test": 24,
      "com.lastcalc.parsers.bool.IfThenElseParserTest#ifThenElseTrueTest": 25,
      "com.lastcalc.parsers.bool.IfThenElseParserTest#ifThenTest": 26,
      "com.lastcalc.parsers.currency.CurrenciesTest#test": 27,
      "com.lastcalc.parsers.math.FactorialParserTest#successfulParseTest": 28,
      "com.lastcalc.parsers.math.FactorialParserTest#tooBigOrSmallTest": 29,
      "com.lastcalc.parsers.math.GCDLCMTest#gcdlcmTest": 30,
      "com.lastcalc.parsers.math.IsPrimeTest#isPrimeTest": 31,
      "com.lastcalc.parsers.math.PrimesUnderTest#primesUnderTest": 32,
      "com.lastcalc.servlets.WorksheetServletTest#testFunctionCreation": 33
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            33, 6, 5, 9, 4, 16, 7, 17, 14, 12, 15, 2, 13, 19, 10, 11, 18, 3, 8,
            1, 20, 24, 25, 26, 21, 30, 32, 31, 28, 0, 23, 22, 29, 27
          ]
        ],
        "APSC_c": 0.8643162784890908
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [33, 5, 16, 7, 14, 2, 19, 11, 3, 1, 25, 26, 30, 31, 0, 29],
          [6, 9, 4, 17, 12, 15, 13, 10, 18, 8, 20, 24, 21, 32, 28, 23, 22, 27]
        ],
        "APSC_c": 0.9228972245815933
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [33, 7, 15, 10, 8, 25, 26, 32, 22],
          [6, 17, 2, 11, 1, 28, 29],
          [5, 16, 14, 19, 3, 21, 31, 23, 27],
          [9, 4, 12, 13, 18, 20, 24, 30, 0]
        ],
        "APSC_c": 0.9543548048395204
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [33, 10, 26, 32, 22],
          [6, 11, 21, 31, 0],
          [5, 12, 18],
          [9, 14, 1],
          [4, 13, 8],
          [16, 2, 20, 25, 30, 23, 29],
          [7, 15, 3],
          [17, 19, 24, 28, 27]
        ],
        "APSC_c": 0.9692101689080777
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [33],
          [6],
          [5, 3],
          [9, 18],
          [4, 32],
          [16, 21, 23],
          [7, 8],
          [17, 29],
          [14, 27],
          [12, 20, 22],
          [15, 26, 0],
          [2, 31],
          [13, 24],
          [19, 30],
          [10, 25, 28],
          [11, 1]
        ],
        "APSC_c": 0.9748063228183325
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [6, 4, 17, 15, 19, 18, 1],
          [
            33, 5, 9, 16, 7, 14, 12, 2, 13, 10, 11, 3, 8, 20, 24, 25, 26, 21,
            30, 32, 31, 28, 0, 23, 22, 29, 27
          ]
        ],
        "APSC_c": 0.952128039965104
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [6, 16, 12, 19, 3, 28, 27],
          [
            33, 5, 9, 4, 7, 17, 14, 15, 2, 13, 10, 11, 18, 8, 1, 20, 24, 25, 26,
            21, 30, 32, 31, 0, 23, 22, 29
          ]
        ],
        "APSC_c": 0.9643392165763305
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [6, 7, 2, 18, 31, 22],
          [
            33, 5, 9, 4, 16, 17, 14, 12, 15, 13, 19, 10, 11, 3, 8, 1, 20, 24,
            25, 26, 21, 30, 32, 28, 0, 23, 29, 27
          ]
        ],
        "APSC_c": 0.9717659308307467
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [4, 23],
          [16, 32],
          [7, 24],
          [17],
          [33, 15, 10, 8, 30, 22],
          [6, 2, 11, 1, 0],
          [5, 12, 13, 18, 20, 25, 26, 21, 31, 29],
          [9, 14, 19, 3, 28, 27]
        ],
        "APSC_c": 0.9897309113660612
      }
    ]
  },
  {
    "filename": "danieldk_dictomaton.json",
    "name_to_id": {
      "eu.danieldk.dictomaton.CompactIntArrayTest#binarySearchTest": 0,
      "eu.danieldk.dictomaton.CompactIntArrayTest#fullWidthTest": 1,
      "eu.danieldk.dictomaton.CompactIntArrayTest#randomizedOverwriteTest": 2,
      "eu.danieldk.dictomaton.CompactIntArrayTest#randomizedTest": 3,
      "eu.danieldk.dictomaton.DictionaryBuilderTest#addToFinalizedTest": 4,
      "eu.danieldk.dictomaton.DictionaryBuilderTest#emptyDictionaryTest": 5,
      "eu.danieldk.dictomaton.DictionaryBuilderTest#incorrectOrderTest": 6,
      "eu.danieldk.dictomaton.DictionaryBuilderTest#testCompareCharacterSequences": 7,
      "eu.danieldk.dictomaton.DictionaryBuilderTest#testDot": 8,
      "eu.danieldk.dictomaton.DictionaryTest#addAllTest": 9,
      "eu.danieldk.dictomaton.DictionaryTest#addTest": 10,
      "eu.danieldk.dictomaton.DictionaryTest#clearTest": 11,
      "eu.danieldk.dictomaton.DictionaryTest#containsAllTest": 12,
      "eu.danieldk.dictomaton.DictionaryTest#containsTest": 13,
      "eu.danieldk.dictomaton.DictionaryTest#doesNotContainWordsTest": 14,
      "eu.danieldk.dictomaton.DictionaryTest#emptyTest": 15,
      "eu.danieldk.dictomaton.DictionaryTest#isEmptyTest": 16,
      "eu.danieldk.dictomaton.DictionaryTest#iterationTest": 17,
      "eu.danieldk.dictomaton.DictionaryTest#iteratorRemoveTest": 18,
      "eu.danieldk.dictomaton.DictionaryTest#removeAllTest": 19,
      "eu.danieldk.dictomaton.DictionaryTest#removeTest": 20,
      "eu.danieldk.dictomaton.DictionaryTest#retainAllTest": 21,
      "eu.danieldk.dictomaton.DictionaryTest#sizeTest": 22,
      "eu.danieldk.dictomaton.DictionaryTest#toArrayTest": 23,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#cycleTest": 24,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#emptyTest": 25,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#sizeTest": 26,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#testResumeTransitionsAfterFinal": 27,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#testResumeTransitionsAfterFinalForCard": 28,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#testResumeTransitionsAfterNonFinal": 29,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#testResumeTransitionsAfterNonFinalForCard": 30,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#testStateInfo": 31,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#testStateInfoForCard": 32,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#toNumberTest": 33,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#toNumberTransitionsTest": 34,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#toWordTest": 35,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#toWordTransitionsTest": 36,
      "eu.danieldk.dictomaton.PerfectHashDictionaryTest#unknownHashTest": 37,
      "eu.danieldk.dictomaton.collections.ImmutableStringIntTest#containsOrderedPutTest": 38,
      "eu.danieldk.dictomaton.collections.ImmutableStringIntTest#containsTest": 39,
      "eu.danieldk.dictomaton.collections.ImmutableStringIntTest#getOrElseTest": 40,
      "eu.danieldk.dictomaton.collections.ImmutableStringIntTest#invalidOrderTest": 41,
      "eu.danieldk.dictomaton.collections.ImmutableStringIntTest#iteratorTest": 42,
      "eu.danieldk.dictomaton.collections.ImmutableStringIntTest#orderedComparatorTest": 43,
      "eu.danieldk.dictomaton.collections.ImmutableStringObjectMapTest#containsOrderedPutTest": 44,
      "eu.danieldk.dictomaton.collections.ImmutableStringObjectMapTest#equalsTest": 45,
      "eu.danieldk.dictomaton.collections.ImmutableStringObjectMapTest#getTest": 46,
      "eu.danieldk.dictomaton.collections.ImmutableStringObjectMapTest#invalidOrderTest": 47,
      "eu.danieldk.dictomaton.collections.ImmutableStringObjectMapTest#orderedComparatorTest": 48,
      "eu.danieldk.dictomaton.collections.ImmutableStringStringMapTest#equalsTest": 49,
      "eu.danieldk.dictomaton.collections.ImmutableStringStringMapTest#getTest": 50,
      "eu.danieldk.dictomaton.levenshtein.LevenshteinAutomatonTest#intersectionLanguage1Test": 51,
      "eu.danieldk.dictomaton.levenshtein.LevenshteinAutomatonTest#intersectionLanguage2Test": 52
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            52, 51, 31, 33, 32, 34, 29, 27, 25, 28, 30, 36, 49, 50, 35, 46, 37,
            24, 26, 39, 40, 45, 38, 44, 42, 23, 12, 14, 13, 17, 15, 18, 16, 9,
            10, 11, 19, 20, 21, 22, 5, 8, 4, 41, 47, 6, 0, 2, 3, 1, 7, 43, 48
          ]
        ],
        "APSC_c": 0.7018356878641444
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [52, 2, 3, 1, 7, 43, 48],
          [
            51, 31, 33, 32, 34, 29, 27, 25, 28, 30, 36, 49, 50, 35, 46, 37, 24,
            26, 39, 40, 45, 38, 44, 42, 23, 12, 14, 13, 17, 15, 18, 16, 9, 10,
            11, 19, 20, 21, 22, 5, 8, 4, 41, 47, 6, 0
          ]
        ],
        "APSC_c": 0.8534341741542367
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [52],
          [51, 1, 7, 43, 48],
          [
            31, 32, 29, 25, 30, 49, 35, 37, 24, 26, 40, 38, 42, 14, 17, 18, 9,
            11, 20, 22, 8, 41, 47, 0
          ],
          [
            33, 34, 27, 28, 36, 50, 46, 39, 45, 44, 23, 12, 13, 15, 16, 10, 19,
            21, 5, 4, 6, 2, 3
          ]
        ],
        "APSC_c": 0.97348933719227
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [52],
          [51],
          [31, 28, 46, 42, 19, 4, 43, 48],
          [33, 30, 37, 26, 45, 14, 18, 20, 41, 0],
          [32, 25, 35, 39, 23, 17, 11, 5, 3],
          [34, 50, 44, 13, 10, 8, 2],
          [29, 36, 24, 40, 12, 15, 16, 21, 47, 7],
          [27, 49, 38, 9, 22, 6, 1]
        ],
        "APSC_c": 0.9750033470239055
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [52],
          [51],
          [31, 24, 18, 19, 47],
          [33, 26, 13, 9, 6],
          [32, 37, 14, 16, 20, 2],
          [34, 12, 17, 8],
          [29, 39, 3],
          [27, 40, 4],
          [25, 45, 1],
          [28, 38, 7],
          [30, 44, 21],
          [36, 42, 43],
          [49, 22, 48],
          [50, 5],
          [35, 23, 15, 10, 0],
          [46, 11, 41]
        ],
        "APSC_c": 0.9752577399848047
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [51, 2],
          [
            52, 31, 33, 32, 34, 29, 27, 25, 28, 30, 36, 49, 50, 35, 46, 37, 24,
            26, 39, 40, 45, 38, 44, 42, 23, 12, 14, 13, 17, 15, 18, 16, 9, 10,
            11, 19, 20, 21, 22, 5, 8, 4, 41, 47, 6, 0, 3, 1, 7, 43, 48
          ]
        ],
        "APSC_c": 0.902382771524682
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [51, 2],
          [
            52, 31, 33, 32, 34, 29, 27, 25, 28, 30, 36, 49, 50, 35, 46, 37, 24,
            26, 39, 40, 45, 38, 44, 42, 23, 12, 14, 13, 17, 15, 18, 16, 9, 10,
            11, 19, 20, 21, 22, 5, 8, 4, 41, 47, 6, 0, 3, 1, 7, 43, 48
          ]
        ],
        "APSC_c": 0.9336101631599173
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [51, 1, 7, 43, 48],
          [
            52, 31, 33, 32, 34, 29, 27, 25, 28, 30, 36, 49, 50, 35, 46, 37, 24,
            26, 39, 40, 45, 38, 44, 42, 23, 12, 14, 13, 17, 15, 18, 16, 9, 10,
            11, 19, 20, 21, 22, 5, 8, 4, 41, 47, 6, 0, 2, 3
          ]
        ],
        "APSC_c": 0.9491442601124472
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [32, 35, 40, 5, 1],
          [34, 24, 42, 3],
          [29, 46, 11, 4, 43, 48],
          [27, 37, 45, 47, 7],
          [52],
          [51],
          [31, 25, 30, 49, 26, 38, 23, 12, 13, 15, 16, 10, 20, 22, 41, 0],
          [33, 28, 36, 50, 39, 44, 14, 17, 18, 9, 19, 21, 8, 6, 2]
        ],
        "APSC_c": 0.9936432447740801
      }
    ]
  },
  {
    "filename": "square_protoparser.json",
    "name_to_id": {
      "com.squareup.protoparser.DataTypeTest#mapToString": 0,
      "com.squareup.protoparser.DataTypeTest#namedToString": 1,
      "com.squareup.protoparser.DataTypeTest#scalarToString": 2,
      "com.squareup.protoparser.EnumConstantElementTest#nameRequired": 3,
      "com.squareup.protoparser.EnumConstantElementTest#nullBuilderValuesThrow": 4,
      "com.squareup.protoparser.EnumConstantElementTest#tagRequired": 5,
      "com.squareup.protoparser.EnumElementTest#addMultipleConstants": 6,
      "com.squareup.protoparser.EnumElementTest#addMultipleOptions": 7,
      "com.squareup.protoparser.EnumElementTest#duplicateValueTagThrows": 8,
      "com.squareup.protoparser.EnumElementTest#duplicateValueTagWithAllowAlias": 9,
      "com.squareup.protoparser.EnumElementTest#emptyToSchema": 10,
      "com.squareup.protoparser.EnumElementTest#fieldToSchema": 11,
      "com.squareup.protoparser.EnumElementTest#fieldWithDocumentationToSchema": 12,
      "com.squareup.protoparser.EnumElementTest#fieldWithOptionsToSchema": 13,
      "com.squareup.protoparser.EnumElementTest#nameRequired": 14,
      "com.squareup.protoparser.EnumElementTest#nameSetsQualifiedName": 15,
      "com.squareup.protoparser.EnumElementTest#nullBuilderValuesThrow": 16,
      "com.squareup.protoparser.EnumElementTest#simpleToSchema": 17,
      "com.squareup.protoparser.EnumElementTest#simpleWithDocumentationToSchema": 18,
      "com.squareup.protoparser.EnumElementTest#simpleWithOptionsToSchema": 19,
      "com.squareup.protoparser.ExtendElementTest#addMultipleFields": 20,
      "com.squareup.protoparser.ExtendElementTest#duplicateTagValueThrows": 21,
      "com.squareup.protoparser.ExtendElementTest#emptyToSchema": 22,
      "com.squareup.protoparser.ExtendElementTest#nameRequired": 23,
      "com.squareup.protoparser.ExtendElementTest#nameSetsQualifiedName": 24,
      "com.squareup.protoparser.ExtendElementTest#nullBuilderValuesThrow": 25,
      "com.squareup.protoparser.ExtendElementTest#simpleToSchema": 26,
      "com.squareup.protoparser.ExtendElementTest#simpleWithDocumentationToSchema": 27,
      "com.squareup.protoparser.ExtensionsElementTest#invalidTagRangeThrows": 28,
      "com.squareup.protoparser.ExtensionsElementTest#maxRangeToSchema": 29,
      "com.squareup.protoparser.ExtensionsElementTest#rangeToSchema": 30,
      "com.squareup.protoparser.ExtensionsElementTest#singleValueToSchema": 31,
      "com.squareup.protoparser.ExtensionsElementTest#withDocumentationToSchema": 32,
      "com.squareup.protoparser.FieldElementTest#addMultipleOptions": 33,
      "com.squareup.protoparser.FieldElementTest#deprecatedSupportStringAndBoolean": 34,
      "com.squareup.protoparser.FieldElementTest#field": 35,
      "com.squareup.protoparser.FieldElementTest#labelRequired": 36,
      "com.squareup.protoparser.FieldElementTest#nameRequired": 37,
      "com.squareup.protoparser.FieldElementTest#nullBuilderValuesThrow": 38,
      "com.squareup.protoparser.FieldElementTest#packedSupportStringAndBoolean": 39,
      "com.squareup.protoparser.FieldElementTest#tagRequired": 40,
      "com.squareup.protoparser.FieldElementTest#typeRequired": 41,
      "com.squareup.protoparser.MessageElementTest#addMultipleExtensions": 42,
      "com.squareup.protoparser.MessageElementTest#addMultipleFields": 43,
      "com.squareup.protoparser.MessageElementTest#addMultipleOneOfs": 44,
      "com.squareup.protoparser.MessageElementTest#addMultipleOptions": 45,
      "com.squareup.protoparser.MessageElementTest#addMultipleTypes": 46,
      "com.squareup.protoparser.MessageElementTest#defaultMissing": 47,
      "com.squareup.protoparser.MessageElementTest#defaultValue": 48,
      "com.squareup.protoparser.MessageElementTest#deprecatedFalse": 49,
      "com.squareup.protoparser.MessageElementTest#deprecatedMissing": 50,
      "com.squareup.protoparser.MessageElementTest#deprecatedTrue": 51,
      "com.squareup.protoparser.MessageElementTest#duplicateEnumValueTagInScopeThrows": 52,
      "com.squareup.protoparser.MessageElementTest#duplicateTagValueOneOfThrows": 53,
      "com.squareup.protoparser.MessageElementTest#duplicateTagValueThrows": 54,
      "com.squareup.protoparser.MessageElementTest#emptyToSchema": 55,
      "com.squareup.protoparser.MessageElementTest#fieldToSchema": 56,
      "com.squareup.protoparser.MessageElementTest#fieldWithDocumentationToSchema": 57,
      "com.squareup.protoparser.MessageElementTest#fieldWithOptionsToSchema": 58,
      "com.squareup.protoparser.MessageElementTest#multipleEverythingToSchema": 59,
      "com.squareup.protoparser.MessageElementTest#nameRequired": 60,
      "com.squareup.protoparser.MessageElementTest#nameSetsQualifiedName": 61,
      "com.squareup.protoparser.MessageElementTest#nullBuilderValuesThrow": 62,
      "com.squareup.protoparser.MessageElementTest#oneOfFieldDisallowed": 63,
      "com.squareup.protoparser.MessageElementTest#oneOfFieldToSchema": 64,
      "com.squareup.protoparser.MessageElementTest#oneOfToSchema": 65,
      "com.squareup.protoparser.MessageElementTest#packedFalse": 66,
      "com.squareup.protoparser.MessageElementTest#packedMissing": 67,
      "com.squareup.protoparser.MessageElementTest#packedTrue": 68,
      "com.squareup.protoparser.MessageElementTest#simpleToSchema": 69,
      "com.squareup.protoparser.MessageElementTest#simpleWithDocumentationToSchema": 70,
      "com.squareup.protoparser.MessageElementTest#simpleWithExtensionsToSchema": 71,
      "com.squareup.protoparser.MessageElementTest#simpleWithNestedElementsToSchema": 72,
      "com.squareup.protoparser.MessageElementTest#simpleWithOptionsToSchema": 73,
      "com.squareup.protoparser.OneOfElementTest#nameRequired": 74,
      "com.squareup.protoparser.OneOfElementTest#nullBuilderValuesThrow": 75,
      "com.squareup.protoparser.OptionElementTest#booleanToSchema": 76,
      "com.squareup.protoparser.OptionElementTest#findInList": 77,
      "com.squareup.protoparser.OptionElementTest#findInListDuplicate": 78,
      "com.squareup.protoparser.OptionElementTest#findInListMissing": 79,
      "com.squareup.protoparser.OptionElementTest#listToSchema": 80,
      "com.squareup.protoparser.OptionElementTest#mapToSchema": 81,
      "com.squareup.protoparser.OptionElementTest#nestedToSchema": 82,
      "com.squareup.protoparser.OptionElementTest#nullNameThrows": 83,
      "com.squareup.protoparser.OptionElementTest#nullValueThrows": 84,
      "com.squareup.protoparser.OptionElementTest#optionListToMap": 85,
      "com.squareup.protoparser.OptionElementTest#simpleToSchema": 86,
      "com.squareup.protoparser.ProtoFileTest#addMultipleDependencies": 87,
      "com.squareup.protoparser.ProtoFileTest#addMultipleExtends": 88,
      "com.squareup.protoparser.ProtoFileTest#addMultipleOptions": 89,
      "com.squareup.protoparser.ProtoFileTest#addMultiplePublicDependencies": 90,
      "com.squareup.protoparser.ProtoFileTest#addMultipleServices": 91,
      "com.squareup.protoparser.ProtoFileTest#emptyToSchema": 92,
      "com.squareup.protoparser.ProtoFileTest#emptyWithPackageToSchema": 93,
      "com.squareup.protoparser.ProtoFileTest#multipleEverythingToSchema": 94,
      "com.squareup.protoparser.ProtoFileTest#nullBuilderValuesThrow": 95,
      "com.squareup.protoparser.ProtoFileTest#simpleToSchema": 96,
      "com.squareup.protoparser.ProtoFileTest#simpleWithBothImportsToSchema": 97,
      "com.squareup.protoparser.ProtoFileTest#simpleWithExtendsToSchema": 98,
      "com.squareup.protoparser.ProtoFileTest#simpleWithImportsToSchema": 99,
      "com.squareup.protoparser.ProtoFileTest#simpleWithOptionsToSchema": 100,
      "com.squareup.protoparser.ProtoFileTest#simpleWithPublicImportsToSchema": 101,
      "com.squareup.protoparser.ProtoFileTest#simpleWithServicesToSchema": 102,
      "com.squareup.protoparser.ProtoFileTest#syntaxToSchema": 103,
      "com.squareup.protoparser.ProtoFileTest#tagValueValidation": 104,
      "com.squareup.protoparser.ProtoParserTest#defaultFieldWithParen": 105,
      "com.squareup.protoparser.ProtoParserTest#defaultFieldWithStringEscapes": 106,
      "com.squareup.protoparser.ProtoParserTest#enumValueLeadingAndTrailingCommentsAreCombined": 107,
      "com.squareup.protoparser.ProtoParserTest#enumValueTrailingComment": 108,
      "com.squareup.protoparser.ProtoParserTest#extend": 109,
      "com.squareup.protoparser.ProtoParserTest#extendInMessage": 110,
      "com.squareup.protoparser.ProtoParserTest#extendInMessageWithPackage": 111,
      "com.squareup.protoparser.ProtoParserTest#extensionWithNestedMessage": 112,
      "com.squareup.protoparser.ProtoParserTest#fqcnExtendInMessage": 113,
      "com.squareup.protoparser.ProtoParserTest#fqcnExtendInMessageWithPackage": 114,
      "com.squareup.protoparser.ProtoParserTest#hexTag": 115,
      "com.squareup.protoparser.ProtoParserTest#imports": 116,
      "com.squareup.protoparser.ProtoParserTest#invalidHexStringEscape": 117,
      "com.squareup.protoparser.ProtoParserTest#invalidSyntaxValueThrows": 118,
      "com.squareup.protoparser.ProtoParserTest#invalidTrailingComment": 119,
      "com.squareup.protoparser.ProtoParserTest#messageFieldLeadingAndTrailingCommentAreCombined": 120,
      "com.squareup.protoparser.ProtoParserTest#messageFieldTrailingComment": 121,
      "com.squareup.protoparser.ProtoParserTest#multilineJavadocComment": 122,
      "com.squareup.protoparser.ProtoParserTest#multilineJavadocCommentWithLeadingWhitespace": 123,
      "com.squareup.protoparser.ProtoParserTest#multilineJavadocCommentWithoutLeadingAsterisks": 124,
      "com.squareup.protoparser.ProtoParserTest#multipleSingleLineComments": 125,
      "com.squareup.protoparser.ProtoParserTest#multipleSingleLineCommentsWithLeadingWhitespace": 126,
      "com.squareup.protoparser.ProtoParserTest#nestingInMessage": 127,
      "com.squareup.protoparser.ProtoParserTest#noWhitespace": 128,
      "com.squareup.protoparser.ProtoParserTest#optionNumericalBounds": 129,
      "com.squareup.protoparser.ProtoParserTest#optionParentheses": 130,
      "com.squareup.protoparser.ProtoParserTest#optionsWithNestedMapsAndTrailingCommas": 131,
      "com.squareup.protoparser.ProtoParserTest#packageDeclaration": 132,
      "com.squareup.protoparser.ProtoParserTest#parseEnum": 133,
      "com.squareup.protoparser.ProtoParserTest#parseEnumWithOptions": 134,
      "com.squareup.protoparser.ProtoParserTest#parseMessageAndFields": 135,
      "com.squareup.protoparser.ProtoParserTest#parseMessageAndOneOf": 136,
      "com.squareup.protoparser.ProtoParserTest#publicImports": 137,
      "com.squareup.protoparser.ProtoParserTest#service": 138,
      "com.squareup.protoparser.ProtoParserTest#serviceTypesMustBeNamed": 139,
      "com.squareup.protoparser.ProtoParserTest#singleLineComment": 140,
      "com.squareup.protoparser.ProtoParserTest#singleLineJavadocComment": 141,
      "com.squareup.protoparser.ProtoParserTest#structuredOption": 142,
      "com.squareup.protoparser.ProtoParserTest#syntaxInWrongContextThrows": 143,
      "com.squareup.protoparser.ProtoParserTest#syntaxNotRequired": 144,
      "com.squareup.protoparser.ProtoParserTest#syntaxSpecified": 145,
      "com.squareup.protoparser.ProtoParserTest#trailingCommentNotAssignedToFollowingField": 146,
      "com.squareup.protoparser.ProtoParserTest#trailingCommentNotCombinedWhenEmpty": 147,
      "com.squareup.protoparser.ProtoParserTest#trailingMultilineComment": 148,
      "com.squareup.protoparser.ProtoParserTest#trailingMultilineCommentMustBeLastOnLineThrows": 149,
      "com.squareup.protoparser.ProtoParserTest#trailingUnclosedMultilineCommentThrows": 150,
      "com.squareup.protoparser.ProtoParserTest#typeParsing": 151,
      "com.squareup.protoparser.RpcElementTest#nameRequired": 152,
      "com.squareup.protoparser.RpcElementTest#nullBuilderValuesThrow": 153,
      "com.squareup.protoparser.RpcElementTest#requestTypeRequired": 154,
      "com.squareup.protoparser.RpcElementTest#responseTypeRequired": 155,
      "com.squareup.protoparser.ServiceElementTest#addMultipleOptions": 156,
      "com.squareup.protoparser.ServiceElementTest#addMultipleRpcs": 157,
      "com.squareup.protoparser.ServiceElementTest#emptyToSchema": 158,
      "com.squareup.protoparser.ServiceElementTest#multipleToSchema": 159,
      "com.squareup.protoparser.ServiceElementTest#nameRequired": 160,
      "com.squareup.protoparser.ServiceElementTest#nameSetsQualifiedName": 161,
      "com.squareup.protoparser.ServiceElementTest#nullBuilderValuesThrow": 162,
      "com.squareup.protoparser.ServiceElementTest#rpcToSchema": 163,
      "com.squareup.protoparser.ServiceElementTest#rpcWithDocumentationToSchema": 164,
      "com.squareup.protoparser.ServiceElementTest#rpcWithOptionsToSchema": 165,
      "com.squareup.protoparser.ServiceElementTest#singleToSchema": 166,
      "com.squareup.protoparser.ServiceElementTest#singleWithDocumentationToSchema": 167,
      "com.squareup.protoparser.ServiceElementTest#singleWithOptionsToSchema": 168,
      "com.squareup.protoparser.UtilsTest#documentationTest": 169,
      "com.squareup.protoparser.UtilsTest#indentationTest": 170
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            127, 94, 129, 131, 106, 134, 111, 114, 138, 110, 113, 151, 130, 112,
            120, 142, 105, 136, 107, 133, 146, 147, 121, 109, 148, 132, 108,
            128, 115, 135, 117, 149, 59, 124, 122, 123, 145, 150, 141, 125, 126,
            139, 140, 119, 144, 71, 73, 143, 65, 137, 116, 72, 102, 98, 70, 100,
            19, 69, 118, 52, 168, 97, 27, 99, 101, 103, 26, 18, 44, 96, 42, 45,
            17, 53, 167, 46, 58, 43, 159, 166, 7, 165, 35, 63, 9, 13, 20, 21,
            54, 34, 39, 6, 8, 48, 156, 49, 51, 66, 68, 81, 89, 57, 55, 56, 87,
            90, 10, 64, 157, 33, 164, 47, 95, 50, 67, 163, 62, 80, 85, 88, 22,
            93, 15, 12, 91, 61, 92, 158, 11, 82, 29, 30, 24, 16, 162, 78, 31,
            40, 77, 155, 32, 37, 153, 154, 41, 152, 25, 36, 38, 76, 86, 161, 79,
            75, 5, 28, 14, 23, 60, 160, 0, 4, 3, 84, 1, 74, 83, 169, 170, 2, 104
          ]
        ],
        "APSC_c": 0.8575628711454533
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            127, 131, 134, 114, 110, 151, 112, 142, 136, 133, 147, 109, 132,
            128, 135, 149, 124, 123, 150, 125, 139, 140, 144, 143, 137, 72, 98,
            100, 19, 118, 168, 99, 101, 18, 44, 42, 17, 46, 43, 159, 7, 35, 9,
            20, 54, 39, 8, 156, 51, 68, 89, 55, 87, 10, 157, 164, 47, 67, 163,
            88, 93, 12, 61, 158, 82, 30, 16, 162, 40, 155, 37, 154, 152, 36, 76,
            161, 75, 14, 60, 0, 3, 84, 83, 169, 2
          ],
          [
            94, 129, 106, 111, 138, 113, 130, 120, 105, 107, 146, 121, 148, 108,
            115, 117, 59, 122, 145, 141, 126, 119, 71, 73, 65, 116, 102, 70, 69,
            52, 97, 27, 103, 26, 96, 45, 53, 167, 58, 166, 165, 63, 13, 21, 34,
            6, 48, 49, 66, 81, 57, 56, 90, 64, 33, 95, 50, 62, 80, 85, 22, 15,
            91, 92, 11, 29, 24, 78, 31, 77, 32, 153, 41, 25, 38, 86, 79, 5, 28,
            23, 160, 4, 1, 74, 170, 104
          ]
        ],
        "APSC_c": 0.9283429785079816
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            127, 111, 113, 120, 136, 147, 108, 117, 122, 141, 140, 143, 116, 70,
            118, 27, 18, 42, 53, 58, 35, 13, 34, 48, 66, 57, 90, 33, 67, 80, 93,
            92, 30, 162, 32, 153, 38, 79, 14, 0, 1, 169
          ],
          [
            94, 134, 138, 112, 107, 121, 128, 149, 123, 125, 119, 73, 72, 100,
            52, 99, 103, 44, 17, 159, 165, 21, 39, 156, 68, 55, 10, 164, 50, 88,
            15, 61, 82, 16, 40, 37, 41, 25, 86, 5, 23, 4, 74, 104
          ],
          [
            129, 106, 110, 130, 105, 146, 148, 115, 59, 145, 126, 71, 65, 102,
            19, 168, 101, 96, 167, 43, 7, 9, 54, 8, 51, 89, 87, 157, 95, 163,
            91, 11, 24, 31, 155, 152, 76, 75, 60, 3, 83, 2
          ],
          [
            131, 114, 151, 142, 133, 109, 132, 135, 124, 150, 139, 144, 137, 98,
            69, 97, 26, 45, 46, 166, 63, 20, 6, 49, 81, 56, 64, 47, 62, 85, 22,
            12, 158, 29, 78, 77, 154, 36, 161, 28, 160, 84, 170
          ]
        ],
        "APSC_c": 0.963392781647772
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            127, 120, 146, 115, 150, 71, 137, 52, 18, 53, 7, 54, 51, 87, 95, 22,
            92, 78, 154, 79, 0, 169
          ],
          [
            94, 112, 121, 149, 125, 143, 70, 27, 42, 43, 9, 39, 81, 33, 85, 12,
            29, 32, 25, 5, 4, 2
          ],
          [
            129, 130, 105, 148, 124, 126, 116, 19, 101, 167, 165, 8, 57, 47, 88,
            61, 162, 153, 86, 60, 83
          ],
          [
            131, 142, 109, 135, 145, 119, 102, 168, 45, 159, 13, 48, 66, 90, 67,
            93, 82, 31, 41, 161, 160, 104
          ],
          [
            106, 110, 136, 132, 59, 139, 65, 69, 26, 46, 63, 6, 89, 64, 80, 158,
            24, 37, 38, 14, 84
          ],
          [
            134, 138, 133, 128, 122, 140, 72, 118, 103, 17, 35, 34, 68, 10, 50,
            91, 30, 155, 76, 23, 1
          ],
          [
            111, 151, 147, 117, 141, 73, 100, 97, 96, 166, 20, 49, 56, 164, 62,
            15, 11, 40, 152, 75, 74
          ],
          [
            114, 113, 107, 108, 123, 144, 98, 99, 44, 58, 21, 156, 55, 157, 163,
            16, 77, 36, 28, 3, 170
          ]
        ],
        "APSC_c": 0.9808883127258852
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [127, 115, 143, 52, 46, 6, 95, 15, 31, 75],
          [94, 132, 141, 100, 44, 13, 68, 67, 30, 152, 4],
          [129, 109, 150, 72, 26, 63, 89, 163, 5, 170],
          [131, 149, 140, 27, 166, 51, 64, 158, 32, 79, 2],
          [106, 136, 122, 116, 103, 43, 8, 47, 61, 154, 60],
          [134, 105, 59, 98, 17, 54, 87, 11, 153, 0],
          [111, 147, 71, 19, 45, 20, 56, 80, 78, 76, 74],
          [114, 146, 123, 102, 96, 21, 57, 88, 16, 41, 14],
          [138, 135, 119, 168, 35, 66, 50, 162, 86, 83],
          [110, 108, 144, 118, 53, 34, 157, 22, 24, 36, 3],
          [113, 148, 125, 70, 42, 9, 81, 85, 29, 25, 84],
          [151, 128, 126, 99, 58, 49, 33, 92, 38, 1],
          [130, 107, 124, 137, 18, 7, 48, 90, 12, 77, 161, 169],
          [112, 117, 139, 69, 167, 39, 10, 93, 40, 23],
          [120, 133, 145, 65, 101, 165, 55, 62, 82, 37, 28, 104],
          [142, 121, 73, 97, 159, 156, 164, 91, 155, 160]
        ],
        "APSC_c": 0.9896388222209214
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            94, 131, 114, 113, 112, 136, 146, 121, 108, 135, 59, 145, 141, 139,
            144, 143, 116, 98, 69, 168, 99, 26, 96, 53, 46, 159, 165, 13, 54, 6,
            156, 66, 89, 56, 90, 157, 164, 50, 62, 85, 93, 61, 158, 29, 162, 40,
            32, 154, 25, 76, 79, 28, 60, 0, 84, 83, 2
          ],
          [
            127, 129, 106, 134, 111, 138, 110, 151, 130, 120, 142, 105, 107,
            133, 147, 109, 148, 132, 128, 115, 117, 149, 124, 122, 123, 150,
            125, 126, 140, 119, 71, 73, 65, 137, 72, 102, 70, 100, 19, 118, 52,
            97, 27, 101, 103, 18, 44, 42, 45, 17, 167, 58, 43, 166, 7, 35, 63,
            9, 20, 21, 34, 39, 8, 48, 49, 51, 68, 81, 57, 55, 87, 10, 64, 33,
            47, 95, 67, 163, 80, 88, 22, 15, 12, 91, 92, 11, 82, 30, 24, 16, 78,
            31, 77, 155, 37, 153, 41, 152, 36, 38, 86, 161, 75, 5, 14, 23, 160,
            4, 3, 1, 74, 169, 170, 104
          ]
        ],
        "APSC_c": 0.9523501203817528
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            94, 106, 138, 130, 105, 146, 109, 128, 117, 122, 141, 140, 73, 72,
            100, 118, 27, 26, 45, 167, 159, 35, 20, 39, 156, 81, 56, 10, 164,
            50, 80, 15, 92, 24, 78, 155, 41, 38, 79, 28, 160, 1, 170
          ],
          [
            127, 129, 131, 134, 111, 114, 110, 113, 151, 112, 120, 142, 136,
            107, 133, 147, 121, 148, 132, 108, 115, 135, 149, 59, 124, 123, 145,
            150, 125, 126, 139, 119, 144, 71, 143, 65, 137, 116, 102, 98, 70,
            19, 69, 52, 168, 97, 99, 101, 103, 18, 44, 96, 42, 17, 53, 46, 58,
            43, 166, 7, 165, 63, 9, 13, 21, 54, 34, 6, 8, 48, 49, 51, 66, 68,
            89, 57, 55, 87, 90, 64, 157, 33, 47, 95, 67, 163, 62, 85, 88, 22,
            93, 12, 91, 61, 158, 11, 82, 29, 30, 16, 162, 31, 40, 77, 32, 37,
            153, 154, 152, 25, 36, 76, 86, 161, 75, 5, 14, 23, 60, 0, 4, 3, 84,
            74, 83, 169, 2, 104
          ]
        ],
        "APSC_c": 0.9641942132746222
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [
            94, 134, 110, 120, 133, 148, 135, 124, 141, 119, 137, 70, 52, 99,
            44, 53, 159, 63, 54, 48, 66, 55, 10, 164, 163, 92, 16, 40, 154, 38,
            79, 23, 4, 83
          ],
          [
            127, 129, 131, 106, 111, 114, 138, 113, 151, 130, 112, 142, 105,
            136, 107, 146, 147, 121, 109, 132, 108, 128, 115, 117, 149, 59, 122,
            123, 145, 150, 125, 126, 139, 140, 144, 71, 73, 143, 65, 116, 72,
            102, 98, 100, 19, 69, 118, 168, 97, 27, 101, 103, 26, 18, 96, 42,
            45, 17, 167, 46, 58, 43, 166, 7, 165, 35, 9, 13, 20, 21, 34, 39, 6,
            8, 156, 49, 51, 68, 81, 89, 57, 56, 87, 90, 64, 157, 33, 47, 95, 50,
            67, 62, 80, 85, 88, 22, 93, 15, 12, 91, 61, 158, 11, 82, 29, 30, 24,
            162, 78, 31, 77, 155, 32, 37, 153, 41, 152, 25, 36, 76, 86, 161, 75,
            5, 28, 14, 60, 160, 0, 3, 84, 1, 74, 169, 170, 2, 104
          ]
        ],
        "APSC_c": 0.971322203305864
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [106, 133, 125, 69, 43, 156, 95, 11, 38, 1],
          [134, 107, 145, 100, 17, 51, 50, 155, 84],
          [111, 109, 126, 103, 63, 55, 88, 78, 60],
          [114, 121, 143, 26, 39, 164, 82, 152, 83],
          [
            127, 113, 112, 147, 128, 149, 123, 140, 73, 72, 19, 97, 18, 45, 58,
            165, 54, 48, 66, 57, 64, 163, 91, 29, 162, 32, 41, 86, 5, 23, 3, 2
          ],
          [
            94, 110, 130, 105, 148, 115, 124, 141, 119, 137, 98, 168, 101, 42,
            46, 7, 13, 34, 49, 89, 87, 33, 62, 22, 12, 158, 24, 31, 37, 25, 161,
            28, 0, 74, 104
          ],
          [
            129, 138, 120, 136, 132, 135, 59, 150, 144, 65, 102, 118, 27, 44,
            53, 159, 35, 20, 8, 81, 90, 157, 67, 85, 93, 92, 16, 77, 154, 36,
            79, 14, 4, 170
          ],
          [
            131, 151, 142, 146, 108, 117, 122, 139, 71, 116, 70, 52, 99, 96,
            167, 166, 9, 21, 6, 68, 56, 10, 47, 80, 15, 61, 30, 40, 153, 76, 75,
            160, 169
          ]
        ],
        "APSC_c": 0.9926436057830939
      }
    ]
  },
  {
    "filename": "fasseg_exp4j.json",
    "name_to_id": {
      "net.objecthunter.exp4j.ArrayStackTest#testConstructor": 0,
      "net.objecthunter.exp4j.ArrayStackTest#testIsEmpty": 1,
      "net.objecthunter.exp4j.ArrayStackTest#testPeek": 2,
      "net.objecthunter.exp4j.ArrayStackTest#testPeek2": 3,
      "net.objecthunter.exp4j.ArrayStackTest#testPeekNoData": 4,
      "net.objecthunter.exp4j.ArrayStackTest#testPop": 5,
      "net.objecthunter.exp4j.ArrayStackTest#testPop2": 6,
      "net.objecthunter.exp4j.ArrayStackTest#testPop3": 7,
      "net.objecthunter.exp4j.ArrayStackTest#testPopNoData": 8,
      "net.objecthunter.exp4j.ArrayStackTest#testPushLessSize": 9,
      "net.objecthunter.exp4j.ArrayStackTest#testPushNoSize": 10,
      "net.objecthunter.exp4j.ArrayStackTest#testSize": 11,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testCustomPercent": 12,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample1": 13,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample10": 14,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample11": 15,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample12": 16,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample2": 17,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample3": 18,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample4": 19,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample5": 20,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample6": 21,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample7": 22,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample8": 23,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testDocumentationExample9": 24,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression1": 25,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression10": 26,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression11": 27,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression12": 28,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression13": 29,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression14": 30,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression15": 31,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression16": 32,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression17": 33,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression18": 34,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression19": 35,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression2": 36,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression20": 37,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression21": 38,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression22": 39,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression23": 40,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression24": 41,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression25": 42,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression26": 43,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression27": 44,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression28": 45,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression29": 46,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression3": 47,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression30": 48,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression31": 49,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression32": 50,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression33": 51,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression34": 52,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression4": 53,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression40": 54,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression41": 55,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression42": 56,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression43": 57,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression44": 58,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression45": 59,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression46": 60,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression48": 61,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression49": 62,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression5": 63,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression50": 64,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression51": 65,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression52": 66,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression53": 67,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression54": 68,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression55": 69,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression56": 70,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression57": 71,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression58": 72,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression59": 73,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression6": 74,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression60": 75,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression61": 76,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression62": 77,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression63": 78,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression64": 79,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression65": 80,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression66": 81,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression67": 82,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression68": 83,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression69": 84,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression7": 85,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression70": 86,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression71": 87,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression72": 88,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression73": 89,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression74": 90,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression75": 91,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression76": 92,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression77": 93,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression78": 94,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression79": 95,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression8": 96,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression80": 97,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression81": 98,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression82": 99,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression83": 100,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression84": 101,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression85": 102,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpression9": 103,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder01": 104,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder02": 105,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder03": 106,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder04": 107,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder05": 108,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder06": 109,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder07": 110,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder08": 111,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder1": 112,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder10": 113,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder11": 114,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder12": 115,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder13": 116,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder14": 117,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder15": 118,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder16": 119,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder17": 120,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder18": 121,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder19": 122,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder2": 123,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder3": 124,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder4": 125,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder5": 126,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder6": 127,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder7": 128,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder8": 129,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionBuilder9": 130,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionMultiplication": 131,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testExpressionPower": 132,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFailUnknownFunction1": 133,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFailUnknownFunction2": 134,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFailUnknownFunction3": 135,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction1": 136,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction10": 137,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction11": 138,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction12": 139,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction13": 140,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction14": 141,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction15": 142,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction16": 143,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction17": 144,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction18": 145,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction19": 146,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction2": 147,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction20": 148,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction22": 149,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction23": 150,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction24": 151,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction3": 152,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction4": 153,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction5": 154,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction6": 155,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testFunction7": 156,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testGetVariableNames1": 157,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testGetVariableNames2": 158,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testImplicitMultiplicationOffFunction": 159,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testImplicitMultiplicationOffNumber": 160,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testImplicitMultiplicationOffParentheses": 161,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testImplicitMultiplicationOffVariable": 162,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testImplicitMultiplicationOnFunction": 163,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testImplicitMultiplicationOnNumber": 164,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testImplicitMultiplicationOnParentheses": 165,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testImplicitMultiplicationOnVariable": 166,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testInvalidFunction": 167,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testInvalidFunction1": 168,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testInvalidFunction2": 169,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testInvalidNumberOfArguments1": 170,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testInvalidNumberOfArguments2": 171,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testInvalidOperator1": 172,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testInvalidVarName": 173,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testMisplacedSeparator": 174,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testMissingVar": 175,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testModulo1": 176,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testOperators1": 177,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testOperators2": 178,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testOperators3": 179,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testOperators4": 180,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfix1": 181,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixEverything": 182,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixExponentiation1": 183,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixExponentiation2": 184,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixExponentiation3": 185,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixExponentiation4": 186,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction1": 187,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction10": 188,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction11": 189,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction12": 190,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction13": 191,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction14": 192,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction15": 193,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction16": 194,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction17": 195,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction18": 196,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction19": 197,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction2": 198,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction20": 199,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction21": 200,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction3": 201,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction5": 202,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction6": 203,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction7": 204,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction8": 205,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixFunction9": 206,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixInvalidVariableName": 207,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixParenthesis": 208,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testPostfixVariables": 209,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testSameName": 210,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testSameVariableAndBuiltinFunctionName": 211,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testSameVariableAndUserFunctionName": 212,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testSecondArgumentNegative": 213,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testSignum": 214,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testSpaceBetweenNumbers": 215,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testTwoAdjacentOperators": 216,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testUnaryMinus": 217,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testUnaryMinusInParenthesisSpace": 218,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testUnaryMinusPowerPrecedence": 219,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testUnaryMinusSpace": 220,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testUnaryMinusSpace1": 221,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testUnaryMinusSpaces": 222,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testUnicodeVariable1": 223,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testUnicodeVariable2": 224,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testUnicodeVariable3": 225,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testUnicodeVariable4": 226,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testValidationDocExample": 227,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testVarMap": 228,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testVarName1": 229,
      "net.objecthunter.exp4j.ExpressionBuilderTest#testVariableWithDot": 230,
      "net.objecthunter.exp4j.ExpressionTest#testClearVariables": 231,
      "net.objecthunter.exp4j.ExpressionTest#testCotangent1": 232,
      "net.objecthunter.exp4j.ExpressionTest#testExpression1": 233,
      "net.objecthunter.exp4j.ExpressionTest#testExpression2": 234,
      "net.objecthunter.exp4j.ExpressionTest#testFactorial": 235,
      "net.objecthunter.exp4j.ExpressionTest#testGetVariableNames1": 236,
      "net.objecthunter.exp4j.ExpressionTest#testInvalidCotangent1": 237,
      "net.objecthunter.exp4j.ExpressionTest#testInvalidFactorial2": 238,
      "net.objecthunter.exp4j.ExpressionTest#testOperatorFactorial2": 239,
      "net.objecthunter.exp4j.ExpressionValidateTest#testNoArgFunctionValidation": 240,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunction": 241,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionAndOperator": 242,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionNegative": 243,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionPositive": 244,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionWithSevenArguments": 245,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionWithSevenArgumentsAndOperator": 246,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionWithThreeArguments": 247,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionWithThreeArgumentsAndOperator": 248,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionWithTwoAndThreeArguments": 249,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionWithTwoAndThreeArgumentsAndMultipleOperator": 250,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionWithTwoAndThreeArgumentsAndOperator": 251,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionWithTwoArguments": 252,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateFunctionWithTwoArgumentsAndOperator": 253,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateInvalidFunction": 254,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateInvalidFunctionWithManyArguments": 255,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateInvalidFunctionWithTooFewArguments": 256,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateInvalidFunctionWithTooFewArgumentsAndOperands": 257,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateInvalidOperand": 258,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateInvalidOperator": 259,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateNumber": 260,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateNumberNegative": 261,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateNumberPositive": 262,
      "net.objecthunter.exp4j.ExpressionValidateTest#testValidateOperator": 263,
      "net.objecthunter.exp4j.FunctionsTest#testCheckFunctionNames": 264,
      "net.objecthunter.exp4j.FunctionsTest#testFunctionNameEmpty": 265,
      "net.objecthunter.exp4j.FunctionsTest#testFunctionNameNegativeArgs": 266,
      "net.objecthunter.exp4j.FunctionsTest#testFunctionNameNull": 267,
      "net.objecthunter.exp4j.FunctionsTest#testFunctionNameZeroArgs": 268,
      "net.objecthunter.exp4j.FunctionsTest#testGetAllowedFunctionChars": 269,
      "net.objecthunter.exp4j.FunctionsTest#testIllegalFunctionName1": 270,
      "net.objecthunter.exp4j.FunctionsTest#testIllegalFunctionName2": 271,
      "net.objecthunter.exp4j.FunctionsTest#testIllegalFunctionName3": 272,
      "net.objecthunter.exp4j.PerformanceTest#testBenches": 273,
      "net.objecthunter.exp4j.shuntingyard.ShuntingYardTest#testShuntingYard1": 274,
      "net.objecthunter.exp4j.shuntingyard.ShuntingYardTest#testShuntingYard2": 275,
      "net.objecthunter.exp4j.shuntingyard.ShuntingYardTest#testShuntingYard3": 276,
      "net.objecthunter.exp4j.shuntingyard.ShuntingYardTest#testShuntingYard4": 277,
      "net.objecthunter.exp4j.shuntingyard.ShuntingYardTest#testShuntingYard5": 278,
      "net.objecthunter.exp4j.shuntingyard.ShuntingYardTest#testShuntingYard6": 279,
      "net.objecthunter.exp4j.shuntingyard.ShuntingYardTest#testShuntingYard7": 280,
      "net.objecthunter.exp4j.shuntingyard.ShuntingYardTest#testShuntingYard8": 281,
      "net.objecthunter.exp4j.shuntingyard.ShuntingYardTest#testShuntingYard9": 282,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization1": 283,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization10": 284,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization11": 285,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization12": 286,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization13": 287,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization14": 288,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization15": 289,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization16": 290,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization17": 291,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization18": 292,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization19": 293,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization2": 294,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization20": 295,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization21": 296,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization22": 297,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization3": 298,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization4": 299,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization5": 300,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization6": 301,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization7": 302,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization8": 303,
      "net.objecthunter.exp4j.tokenizer.TokenizerTest#testTokenization9": 304,
      "net.objecthunter.exp4j.tokenizer.TokenizerUnknownTokenOrVariableTest#testTokenizationOfUnknownFunction": 305,
      "net.objecthunter.exp4j.tokenizer.TokenizerUnknownTokenOrVariableTest#testTokenizationOfUnknownFunction1Details": 306,
      "net.objecthunter.exp4j.tokenizer.TokenizerUnknownTokenOrVariableTest#testTokenizationOfUnknownFunction2Details": 307,
      "net.objecthunter.exp4j.tokenizer.TokenizerUnknownTokenOrVariableTest#testTokenizationOfUnknownVariable": 308,
      "net.objecthunter.exp4j.tokenizer.TokenizerUnknownTokenOrVariableTest#testTokenizationOfUnknownVariable1Details": 309,
      "net.objecthunter.exp4j.tokenizer.TokenizerUnknownTokenOrVariableTest#testTokenizationOfUnknownVariable2Details": 310
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            40, 38, 39, 49, 50, 51, 143, 106, 107, 42, 45, 203, 17, 41, 13, 48,
            82, 124, 186, 190, 32, 205, 145, 214, 141, 37, 224, 189, 90, 91,
            182, 144, 31, 72, 119, 273, 250, 142, 93, 246, 235, 12, 213, 28, 67,
            202, 92, 226, 248, 251, 253, 187, 242, 240, 27, 68, 70, 163, 228,
            18, 69, 99, 80, 88, 158, 178, 81, 89, 185, 121, 33, 77, 104, 105,
            43, 102, 257, 52, 229, 208, 30, 95, 97, 230, 85, 96, 103, 94, 175,
            100, 165, 243, 244, 74, 98, 176, 84, 108, 44, 87, 218, 179, 117,
            263, 159, 222, 216, 19, 86, 29, 63, 209, 109, 35, 231, 21, 139, 146,
            140, 157, 220, 22, 126, 131, 132, 148, 184, 36, 101, 151, 170, 116,
            219, 26, 118, 138, 164, 245, 53, 137, 129, 47, 255, 125, 232, 78,
            79, 150, 83, 122, 155, 198, 201, 237, 120, 153, 154, 110, 111, 147,
            46, 136, 152, 156, 192, 196, 197, 200, 225, 290, 25, 76, 123, 149,
            188, 191, 193, 194, 195, 199, 204, 206, 180, 291, 112, 71, 181, 183,
            256, 166, 247, 249, 252, 288, 289, 24, 207, 34, 217, 221, 161, 177,
            167, 23, 127, 241, 258, 14, 65, 296, 261, 262, 254, 66, 61, 62, 64,
            306, 309, 160, 174, 305, 308, 259, 173, 15, 227, 223, 130, 162, 128,
            293, 16, 292, 286, 275, 279, 280, 278, 238, 239, 277, 281, 20, 54,
            55, 56, 57, 58, 113, 114, 115, 297, 133, 134, 135, 171, 274, 284,
            260, 303, 304, 307, 310, 276, 302, 299, 215, 282, 234, 285, 300,
            301, 59, 60, 295, 233, 210, 212, 211, 287, 236, 283, 294, 298, 172,
            271, 272, 268, 168, 169, 264, 270, 1, 11, 3, 7, 5, 6, 2, 10, 265,
            269, 9, 267, 4, 8, 0, 73, 75, 266
          ]
        ],
        "APSC_c": 0.777696306658037
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            40, 39, 51, 143, 107, 203, 41, 13, 48, 124, 190, 205, 214, 37, 189,
            91, 144, 72, 273
          ],
          [
            38, 49, 50, 106, 42, 45, 17, 82, 186, 32, 145, 141, 224, 90, 182,
            31, 119, 250, 142, 93, 246, 235, 12, 213, 28, 67, 202, 92, 226, 248,
            251, 253, 187, 242, 240, 27, 68, 70, 163, 228, 18, 69, 99, 80, 88,
            158, 178, 81, 89, 185, 121, 33, 77, 104, 105, 43, 102, 257, 52, 229,
            208, 30, 95, 97, 230, 85, 96, 103, 94, 175, 100, 165, 243, 244, 74,
            98, 176, 84, 108, 44, 87, 218, 179, 117, 263, 159, 222, 216, 19, 86,
            29, 63, 209, 109, 35, 231, 21, 139, 146, 140, 157, 220, 22, 126,
            131, 132, 148, 184, 36, 101, 151, 170, 116, 219, 26, 118, 138, 164,
            245, 53, 137, 129, 47, 255, 125, 232, 78, 79, 150, 83, 122, 155,
            198, 201, 237, 120, 153, 154, 110, 111, 147, 46, 136, 152, 156, 192,
            196, 197, 200, 225, 290, 25, 76, 123, 149, 188, 191, 193, 194, 195,
            199, 204, 206, 180, 291, 112, 71, 181, 183, 256, 166, 247, 249, 252,
            288, 289, 24, 207, 34, 217, 221, 161, 177, 167, 23, 127, 241, 258,
            14, 65, 296, 261, 262, 254, 66, 61, 62, 64, 306, 309, 160, 174, 305,
            308, 259, 173, 15, 227, 223, 130, 162, 128, 293, 16, 292, 286, 275,
            279, 280, 278, 238, 239, 277, 281, 20, 54, 55, 56, 57, 58, 113, 114,
            115, 297, 133, 134, 135, 171, 274, 284, 260, 303, 304, 307, 310,
            276, 302, 299, 215, 282, 234, 285, 300, 301, 59, 60, 295, 233, 210,
            212, 211, 287, 236, 283, 294, 298, 172, 271, 272, 268, 168, 169,
            264, 270, 1, 11, 3, 7, 5, 6, 2, 10, 265, 269, 9, 267, 4, 8, 0, 73,
            75, 266
          ]
        ],
        "APSC_c": 0.9393942209324174
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            40, 50, 42, 17, 145, 224, 182, 119, 93, 12, 28, 226, 253, 240, 70,
            18, 80, 178, 185, 77, 43, 229, 95, 230, 175, 243, 98, 108, 218, 263,
            216, 29, 35, 139, 140, 22, 132, 36, 170, 26, 164, 137, 255, 78, 83,
            198, 120, 154, 147, 152, 196, 225, 76, 149, 194, 204, 291, 181, 247,
            288, 207, 221, 177, 23, 258, 296, 254, 62, 309, 305, 173, 223, 128,
            16, 279, 238, 281, 55, 58, 115, 134, 274, 303, 310, 215, 300, 59,
            210, 287, 283, 172, 268, 270, 3, 2, 269, 4, 73
          ],
          [38, 51, 107, 13, 124, 190, 141, 91, 144, 273],
          [
            39, 106, 203, 48, 186, 32, 214, 189, 72, 250, 246, 213, 202, 251,
            242, 27, 163, 69, 88, 81, 121, 104, 102, 52, 30, 85, 103, 165, 74,
            84, 87, 117, 222, 19, 209, 109, 21, 157, 126, 148, 101, 116, 118,
            53, 47, 232, 150, 155, 237, 110, 46, 192, 200, 290, 123, 191, 195,
            206, 112, 183, 166, 252, 289, 34, 161, 241, 65, 262, 61, 306, 174,
            259, 227, 162, 292, 275, 278, 277, 20, 56, 113, 297, 135, 284, 304,
            276, 299, 234, 301, 295, 233, 236, 298, 272, 169, 1, 7, 6, 265, 267,
            0, 266
          ],
          [
            49, 143, 45, 41, 82, 205, 37, 90, 31, 142, 235, 67, 92, 248, 187,
            68, 228, 99, 158, 89, 33, 105, 257, 208, 97, 96, 94, 100, 244, 176,
            44, 179, 159, 86, 63, 231, 146, 220, 131, 184, 151, 219, 138, 245,
            129, 125, 79, 122, 201, 153, 111, 136, 156, 197, 25, 188, 193, 199,
            180, 71, 256, 249, 24, 217, 167, 127, 14, 261, 66, 64, 160, 308, 15,
            130, 293, 286, 280, 239, 54, 57, 114, 133, 171, 260, 307, 302, 282,
            285, 60, 212, 211, 294, 271, 168, 264, 11, 5, 10, 9, 8, 75
          ]
        ],
        "APSC_c": 0.9775034970875002
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            40, 107, 190, 189, 93, 92, 242, 228, 178, 104, 208, 103, 74, 179,
            19, 231, 22, 132, 26, 137, 78, 201, 147, 200, 149, 180, 256, 24, 23,
            14, 64, 308, 162, 280, 54, 297, 135, 276, 300, 295, 287, 271, 270,
            10, 0
          ],
          [
            38, 42, 82, 37, 31, 12, 248, 27, 99, 185, 102, 95, 175, 87, 216,
            109, 140, 148, 116, 53, 83, 110, 196, 25, 199, 181, 288, 177, 65,
            62, 259, 128, 286, 281, 57, 134, 304, 282, 60, 298, 1, 6, 4
          ],
          [
            39, 17, 72, 235, 226, 70, 88, 33, 229, 96, 243, 84, 263, 209, 139,
            131, 170, 245, 232, 198, 111, 156, 123, 195, 71, 252, 34, 241, 61,
            305, 130, 275, 20, 114, 260, 299, 59, 283, 168, 3, 9
          ],
          [
            49, 45, 186, 214, 182, 142, 67, 187, 69, 89, 43, 97, 100, 176, 117,
            29, 157, 184, 219, 129, 122, 120, 46, 290, 188, 206, 166, 207, 161,
            261, 306, 173, 293, 278, 55, 115, 284, 302, 234, 211, 294, 11, 265,
            73
          ],
          [
            50, 13, 32, 224, 119, 213, 251, 68, 80, 77, 52, 85, 165, 218, 86,
            35, 126, 151, 164, 125, 155, 153, 152, 197, 191, 204, 183, 289, 167,
            296, 66, 174, 227, 292, 239, 58, 274, 310, 301, 233, 272, 264, 2, 8
          ],
          [
            51, 203, 124, 141, 144, 246, 202, 240, 18, 81, 105, 30, 94, 244,
            108, 159, 21, 220, 101, 138, 47, 79, 237, 192, 76, 194, 112, 247,
            217, 258, 254, 160, 223, 279, 277, 56, 133, 303, 215, 210, 172, 268,
            7, 269, 75
          ],
          [143, 41, 205, 90, 273],
          [
            106, 48, 145, 91, 250, 28, 253, 163, 158, 121, 257, 230, 98, 44,
            222, 63, 146, 36, 118, 255, 150, 154, 136, 225, 193, 291, 249, 221,
            127, 262, 309, 15, 16, 238, 113, 171, 307, 285, 212, 236, 169, 5,
            267, 266
          ]
        ],
        "APSC_c": 0.9897048875712467
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            40, 124, 31, 248, 80, 208, 98, 216, 157, 118, 155, 192, 204, 24,
            262, 259, 278, 134, 282, 287, 264, 8
          ],
          [
            38, 186, 144, 202, 99, 257, 165, 86, 126, 245, 201, 200, 206, 207,
            261, 173, 277, 133, 276, 236, 7, 73
          ],
          [
            39, 214, 142, 228, 81, 95, 84, 209, 131, 53, 111, 25, 288, 14, 15,
            239, 135, 301, 283, 5, 75
          ],
          [
            49, 205, 93, 240, 89, 97, 176, 63, 148, 47, 120, 225, 183, 177, 254,
            223, 56, 307, 211, 270, 0
          ],
          [
            50, 37, 235, 18, 33, 175, 19, 22, 26, 83, 196, 195, 252, 241, 227,
            238, 274, 285, 172, 11, 266
          ],
          [51, 145, 273],
          [
            143, 141, 12, 163, 77, 96, 218, 146, 138, 122, 152, 123, 256, 127,
            160, 275, 113, 302, 233
          ],
          [
            106, 91, 213, 27, 185, 230, 117, 21, 116, 255, 153, 76, 112, 217,
            306, 293, 55, 284, 59, 2
          ],
          [
            107, 182, 246, 187, 104, 103, 179, 139, 184, 129, 147, 188, 181, 23,
            66, 130, 20, 303, 295, 272, 1, 267
          ],
          [
            42, 82, 250, 242, 158, 52, 244, 222, 140, 219, 150, 156, 199, 289,
            296, 305, 279, 57, 310, 294, 269
          ],
          [
            45, 32, 72, 226, 178, 30, 87, 231, 36, 232, 46, 194, 249, 258, 174,
            286, 114, 234, 271, 169, 4
          ],
          [
            203, 190, 119, 251, 88, 229, 74, 29, 151, 125, 154, 290, 71, 221,
            61, 128, 281, 171, 299, 212, 168, 6
          ],
          [
            17, 253, 121, 85, 108, 109, 170, 79, 136, 149, 166, 167, 62, 292,
            54, 304, 60, 9
          ],
          [
            41, 189, 92, 69, 102, 243, 263, 220, 164, 198, 197, 180, 34, 64,
            162, 115, 215, 268, 265
          ],
          [
            13, 224, 28, 68, 105, 94, 44, 35, 101, 78, 110, 191, 291, 161, 309,
            16, 58, 300, 298, 10
          ],
          [
            48, 90, 67, 70, 43, 100, 159, 132, 137, 237, 193, 247, 65, 308, 280,
            297, 260, 210, 3
          ]
        ],
        "APSC_c": 0.9948621521180867
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            38, 49, 143, 42, 17, 186, 205, 141, 189, 144, 119, 250, 142, 93,
            246, 235, 12, 213, 28, 67, 202, 92, 226, 248, 251, 253, 187, 242,
            240, 27, 68, 70, 163, 228, 18, 69, 99, 80, 88, 158, 178, 81, 89,
            185, 121, 33, 77, 104, 105, 43, 102, 257, 52, 229, 208, 30, 95, 97,
            230, 85, 96, 103, 94, 175, 100, 165, 243, 244, 74, 98, 176, 84, 108,
            44, 87, 218, 179, 117, 263, 159, 222, 216, 19, 86, 29, 63, 209, 109,
            35, 231, 21, 139, 146, 140, 157, 220, 22, 126, 131, 132, 148, 184,
            36, 101, 151, 170, 116, 219, 26, 118, 138, 164, 245, 53, 137, 129,
            47, 255, 125, 232, 78, 79, 150, 83, 122, 155, 198, 201, 237, 120,
            153, 154, 110, 111, 147, 46, 136, 152, 156, 192, 196, 197, 200, 225,
            290, 25, 76, 123, 149, 188, 191, 193, 194, 195, 199, 204, 206, 180,
            291, 112, 71, 181, 183, 256, 166, 247, 249, 252, 288, 289, 24, 207,
            34, 217, 221, 161, 167, 241, 296, 262, 61, 306, 174, 259, 227, 162,
            16, 279, 238, 281, 55, 57, 114, 134, 274, 303, 307, 299, 282, 300,
            60, 210, 236, 298, 268, 264, 3, 6, 265, 267, 8, 75
          ],
          [
            40, 39, 50, 51, 106, 107, 45, 203, 41, 13, 48, 82, 124, 190, 32,
            145, 214, 37, 224, 90, 91, 182, 31, 72, 273, 177, 23, 127, 258, 14,
            65, 261, 254, 66, 62, 64, 309, 160, 305, 308, 173, 15, 223, 130,
            128, 293, 292, 286, 275, 280, 278, 239, 277, 20, 54, 56, 58, 113,
            115, 297, 133, 135, 171, 284, 260, 304, 310, 276, 302, 215, 234,
            285, 301, 59, 295, 233, 212, 211, 287, 283, 294, 172, 271, 272, 168,
            169, 270, 1, 11, 7, 5, 2, 10, 269, 9, 4, 0, 73, 266
          ]
        ],
        "APSC_c": 0.9484045973651793
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            38, 50, 107, 41, 82, 32, 141, 90, 31, 250, 142, 93, 246, 235, 12,
            213, 28, 67, 202, 92, 226, 248, 251, 253, 187, 242, 240, 27, 68, 70,
            163, 228, 18, 69, 99, 80, 88, 158, 178, 81, 89, 185, 121, 33, 77,
            104, 105, 43, 102, 257, 52, 229, 208, 30, 95, 97, 230, 85, 96, 103,
            94, 175, 100, 165, 243, 244, 74, 98, 176, 84, 108, 44, 87, 218, 179,
            117, 263, 159, 222, 216, 19, 86, 29, 63, 209, 109, 35, 231, 21, 139,
            146, 140, 157, 220, 22, 126, 131, 132, 148, 184, 36, 101, 151, 170,
            116, 219, 26, 118, 138, 164, 245, 53, 137, 129, 47, 255, 78, 83,
            237, 111, 136, 196, 290, 123, 194, 206, 71, 166, 288, 34, 167, 258,
            296, 66, 306, 305, 15, 162, 292, 278, 281, 55, 113, 297, 171, 260,
            276, 282, 300, 295, 210, 283, 271, 169, 3, 10, 267, 0
          ],
          [
            40, 39, 49, 51, 143, 106, 42, 45, 203, 17, 13, 48, 124, 186, 190,
            205, 145, 214, 37, 224, 189, 91, 182, 144, 72, 119, 273, 125, 232,
            79, 150, 122, 155, 198, 201, 120, 153, 154, 110, 147, 46, 152, 156,
            192, 197, 200, 225, 25, 76, 149, 188, 191, 193, 195, 199, 204, 180,
            291, 112, 181, 183, 256, 247, 249, 252, 289, 24, 207, 217, 221, 161,
            177, 23, 127, 241, 14, 65, 261, 262, 254, 61, 62, 64, 309, 160, 174,
            308, 259, 173, 227, 223, 130, 128, 293, 16, 286, 275, 279, 280, 238,
            239, 277, 20, 54, 56, 57, 58, 114, 115, 133, 134, 135, 274, 284,
            303, 304, 307, 310, 302, 299, 215, 234, 285, 301, 59, 60, 233, 212,
            211, 287, 236, 294, 298, 172, 272, 268, 168, 264, 270, 1, 11, 7, 5,
            6, 2, 265, 269, 9, 4, 8, 73, 75, 266
          ]
        ],
        "APSC_c": 0.9585202841514082
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [
            38, 51, 45, 41, 186, 145, 224, 144, 250, 142, 93, 246, 235, 12, 213,
            28, 67, 202, 92, 226, 248, 251, 253, 187, 242, 240, 27, 68, 70, 163,
            228, 18, 69, 99, 80, 88, 158, 178, 81, 89, 185, 121, 33, 77, 104,
            105, 43, 102, 257, 52, 229, 208, 30, 95, 97, 230, 85, 96, 103, 94,
            175, 100, 165, 243, 244, 74, 98, 176, 84, 108, 44, 87, 218, 179,
            117, 263, 159, 222, 216, 19, 86, 29, 63, 209, 109, 35, 21, 220, 148,
            170, 138, 129, 79, 155, 153, 46, 197, 76, 193, 206, 183, 252, 207,
            161, 258, 262, 62, 305, 227, 128, 286, 238, 55, 113, 135, 304, 302,
            282, 59, 211, 298, 270, 6, 9, 73
          ],
          [
            40, 39, 49, 50, 143, 106, 107, 42, 203, 17, 13, 48, 82, 124, 190,
            32, 205, 214, 141, 37, 189, 90, 91, 182, 31, 72, 119, 273, 231, 139,
            146, 140, 157, 22, 126, 131, 132, 184, 36, 101, 151, 116, 219, 26,
            118, 164, 245, 53, 137, 47, 255, 125, 232, 78, 150, 83, 122, 198,
            201, 237, 120, 154, 110, 111, 147, 136, 152, 156, 192, 196, 200,
            225, 290, 25, 123, 149, 188, 191, 194, 195, 199, 204, 180, 291, 112,
            71, 181, 256, 166, 247, 249, 288, 289, 24, 34, 217, 221, 177, 167,
            23, 127, 241, 14, 65, 296, 261, 254, 66, 61, 64, 306, 309, 160, 174,
            308, 259, 173, 15, 223, 130, 162, 293, 16, 292, 275, 279, 280, 278,
            239, 277, 281, 20, 54, 56, 57, 58, 114, 115, 297, 133, 134, 171,
            274, 284, 260, 303, 307, 310, 276, 299, 215, 234, 285, 300, 301, 60,
            295, 233, 210, 212, 287, 236, 283, 294, 172, 271, 272, 268, 168,
            169, 264, 1, 11, 3, 7, 5, 2, 10, 265, 269, 267, 4, 8, 0, 75, 266
          ]
        ],
        "APSC_c": 0.9661508017203582
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [
            50, 141, 67, 68, 105, 100, 159, 148, 47, 110, 188, 183, 167, 62,
            275, 56, 302, 210, 10
          ],
          [
            51, 190, 235, 69, 257, 244, 19, 22, 118, 155, 197, 180, 221, 64,
            293, 113, 282, 283, 0
          ],
          [
            143, 214, 246, 70, 43, 108, 35, 170, 79, 152, 191, 256, 23, 66, 162,
            115, 285, 264, 73
          ],
          [
            106, 224, 226, 178, 97, 176, 209, 132, 255, 111, 76, 112, 161, 160,
            238, 171, 300, 172, 267
          ],
          [40, 107, 48, 186, 205, 91, 144, 273],
          [
            38, 42, 17, 37, 182, 119, 93, 28, 248, 187, 27, 18, 88, 89, 33, 102,
            208, 230, 103, 165, 84, 218, 263, 86, 109, 139, 140, 220, 184, 151,
            26, 245, 129, 78, 122, 201, 153, 46, 192, 290, 123, 193, 204, 71,
            247, 288, 207, 177, 241, 296, 254, 309, 305, 173, 223, 292, 279,
            239, 54, 114, 133, 284, 304, 307, 215, 60, 211, 236, 271, 168, 270,
            7, 6, 269, 8
          ],
          [
            39, 203, 41, 124, 32, 189, 72, 142, 213, 92, 251, 242, 163, 99, 158,
            185, 77, 52, 30, 85, 94, 243, 98, 44, 179, 222, 29, 21, 157, 126,
            101, 219, 164, 137, 125, 150, 198, 120, 147, 156, 200, 25, 195, 199,
            291, 166, 252, 24, 217, 258, 65, 262, 306, 308, 15, 130, 16, 280,
            277, 20, 57, 297, 135, 260, 310, 234, 59, 212, 287, 298, 268, 1, 3,
            2, 9, 75
          ],
          [
            49, 45, 13, 82, 145, 90, 31, 250, 12, 202, 253, 240, 228, 80, 81,
            121, 104, 229, 95, 96, 175, 74, 87, 117, 216, 63, 231, 146, 131, 36,
            116, 138, 53, 232, 83, 237, 154, 136, 196, 225, 149, 194, 206, 181,
            249, 289, 34, 127, 14, 261, 61, 174, 259, 227, 128, 286, 278, 281,
            55, 58, 134, 274, 303, 276, 299, 301, 295, 233, 294, 272, 169, 11,
            5, 265, 4, 266
          ]
        ],
        "APSC_c": 0.9956190126730275
      }
    ]
  },
  {
    "filename": "apache_commons-cli.json",
    "name_to_id": {
      "org.apache.commons.cli.ApplicationTest#testAnt": 0,
      "org.apache.commons.cli.ApplicationTest#testGroovy": 1,
      "org.apache.commons.cli.ApplicationTest#testLs": 2,
      "org.apache.commons.cli.ApplicationTest#testMan": 3,
      "org.apache.commons.cli.ApplicationTest#testNLT": 4,
      "org.apache.commons.cli.ArgumentIsOptionTest#testOption": 5,
      "org.apache.commons.cli.ArgumentIsOptionTest#testOptionAndOptionWithArgument": 6,
      "org.apache.commons.cli.ArgumentIsOptionTest#testOptionWithArgument": 7,
      "org.apache.commons.cli.CommandLineTest#testBuilder": 8,
      "org.apache.commons.cli.CommandLineTest#testGetOptionProperties": 9,
      "org.apache.commons.cli.CommandLineTest#testGetOptionPropertiesWithOption": 10,
      "org.apache.commons.cli.CommandLineTest#testGetOptions": 11,
      "org.apache.commons.cli.CommandLineTest#testGetParsedOptionValue": 12,
      "org.apache.commons.cli.CommandLineTest#testGetParsedOptionValueWithChar": 13,
      "org.apache.commons.cli.CommandLineTest#testGetParsedOptionValueWithOption": 14,
      "org.apache.commons.cli.CommandLineTest#testNullhOption": 15,
      "org.apache.commons.cli.DefaultParserTest#testBuilder": 16,
      "org.apache.commons.cli.DefaultParserTest#testLongOptionQuoteHandlingWithStrip": 17,
      "org.apache.commons.cli.DefaultParserTest#testLongOptionQuoteHandlingWithoutStrip": 18,
      "org.apache.commons.cli.DefaultParserTest#testLongOptionWithEqualsQuoteHandling": 19,
      "org.apache.commons.cli.DefaultParserTest#testLongOptionWithEqualsQuoteHandlingWithStrip": 20,
      "org.apache.commons.cli.DefaultParserTest#testLongOptionWithEqualsQuoteHandlingWithoutStrip": 21,
      "org.apache.commons.cli.DefaultParserTest#testShortOptionConcatenatedQuoteHandling": 22,
      "org.apache.commons.cli.DefaultParserTest#testShortOptionQuoteHandlingWithStrip": 23,
      "org.apache.commons.cli.DefaultParserTest#testShortOptionQuoteHandlingWithoutStrip": 24,
      "org.apache.commons.cli.DisablePartialMatchingTest#testDisablePartialMatching": 25,
      "org.apache.commons.cli.DisablePartialMatchingTest#testRegularPartialMatching": 26,
      "org.apache.commons.cli.HelpFormatterTest#testAccessors": 27,
      "org.apache.commons.cli.HelpFormatterTest#testAutomaticUsage": 28,
      "org.apache.commons.cli.HelpFormatterTest#testDefaultArgName": 29,
      "org.apache.commons.cli.HelpFormatterTest#testFindWrapPos": 30,
      "org.apache.commons.cli.HelpFormatterTest#testHeaderStartingWithLineSeparator": 31,
      "org.apache.commons.cli.HelpFormatterTest#testHelpWithLongOptSeparator": 32,
      "org.apache.commons.cli.HelpFormatterTest#testIndentedHeaderAndFooter": 33,
      "org.apache.commons.cli.HelpFormatterTest#testOptionWithoutShortFormat": 34,
      "org.apache.commons.cli.HelpFormatterTest#testOptionWithoutShortFormat2": 35,
      "org.apache.commons.cli.HelpFormatterTest#testPrintHelpNewlineFooter": 36,
      "org.apache.commons.cli.HelpFormatterTest#testPrintHelpNewlineHeader": 37,
      "org.apache.commons.cli.HelpFormatterTest#testPrintHelpWithEmptySyntax": 38,
      "org.apache.commons.cli.HelpFormatterTest#testPrintOptionGroupUsage": 39,
      "org.apache.commons.cli.HelpFormatterTest#testPrintOptionWithEmptyArgNameUsage": 40,
      "org.apache.commons.cli.HelpFormatterTest#testPrintOptions": 41,
      "org.apache.commons.cli.HelpFormatterTest#testPrintRequiredOptionGroupUsage": 42,
      "org.apache.commons.cli.HelpFormatterTest#testPrintSortedUsage": 43,
      "org.apache.commons.cli.HelpFormatterTest#testPrintSortedUsageWithNullComparator": 44,
      "org.apache.commons.cli.HelpFormatterTest#testPrintUsage": 45,
      "org.apache.commons.cli.HelpFormatterTest#testRenderWrappedTextMultiLine": 46,
      "org.apache.commons.cli.HelpFormatterTest#testRenderWrappedTextMultiLinePadded": 47,
      "org.apache.commons.cli.HelpFormatterTest#testRenderWrappedTextSingleLine": 48,
      "org.apache.commons.cli.HelpFormatterTest#testRenderWrappedTextSingleLinePadded": 49,
      "org.apache.commons.cli.HelpFormatterTest#testRenderWrappedTextSingleLinePadded2": 50,
      "org.apache.commons.cli.HelpFormatterTest#testRenderWrappedTextWordCut": 51,
      "org.apache.commons.cli.HelpFormatterTest#testRtrim": 52,
      "org.apache.commons.cli.HelpFormatterTest#testUsageWithLongOptSeparator": 53,
      "org.apache.commons.cli.OptionBuilderTest#testBaseOptionCharOpt": 54,
      "org.apache.commons.cli.OptionBuilderTest#testBaseOptionStringOpt": 55,
      "org.apache.commons.cli.OptionBuilderTest#testBuilderIsResettedAlways": 56,
      "org.apache.commons.cli.OptionBuilderTest#testCompleteOption": 57,
      "org.apache.commons.cli.OptionBuilderTest#testCreateIncompleteOption": 58,
      "org.apache.commons.cli.OptionBuilderTest#testIllegalOptions": 59,
      "org.apache.commons.cli.OptionBuilderTest#testOptionArgNumbers": 60,
      "org.apache.commons.cli.OptionBuilderTest#testSpecialOptChars": 61,
      "org.apache.commons.cli.OptionBuilderTest#testTwoCompleteOptions": 62,
      "org.apache.commons.cli.OptionGroupTest#testGetNames": 63,
      "org.apache.commons.cli.OptionGroupTest#testNoOptionsExtraArgs": 64,
      "org.apache.commons.cli.OptionGroupTest#testSingleLongOption": 65,
      "org.apache.commons.cli.OptionGroupTest#testSingleOption": 66,
      "org.apache.commons.cli.OptionGroupTest#testSingleOptionFromGroup": 67,
      "org.apache.commons.cli.OptionGroupTest#testToString": 68,
      "org.apache.commons.cli.OptionGroupTest#testTwoLongOptionsFromGroup": 69,
      "org.apache.commons.cli.OptionGroupTest#testTwoOptionsFromDifferentGroup": 70,
      "org.apache.commons.cli.OptionGroupTest#testTwoOptionsFromGroup": 71,
      "org.apache.commons.cli.OptionGroupTest#testTwoOptionsFromGroupWithProperties": 72,
      "org.apache.commons.cli.OptionGroupTest#testTwoValidLongOptions": 73,
      "org.apache.commons.cli.OptionGroupTest#testTwoValidOptions": 74,
      "org.apache.commons.cli.OptionGroupTest#testValidLongOnlyOptions": 75,
      "org.apache.commons.cli.OptionTest#testBuilderInsufficientParams1": 76,
      "org.apache.commons.cli.OptionTest#testBuilderInsufficientParams2": 77,
      "org.apache.commons.cli.OptionTest#testBuilderInvalidOptionName1": 78,
      "org.apache.commons.cli.OptionTest#testBuilderInvalidOptionName2": 79,
      "org.apache.commons.cli.OptionTest#testBuilderInvalidOptionName3": 80,
      "org.apache.commons.cli.OptionTest#testBuilderInvalidOptionName4": 81,
      "org.apache.commons.cli.OptionTest#testBuilderMethods": 82,
      "org.apache.commons.cli.OptionTest#testClear": 83,
      "org.apache.commons.cli.OptionTest#testClone": 84,
      "org.apache.commons.cli.OptionTest#testGetValue": 85,
      "org.apache.commons.cli.OptionTest#testHasArgName": 86,
      "org.apache.commons.cli.OptionTest#testHasArgs": 87,
      "org.apache.commons.cli.OptionTest#testHashCode": 88,
      "org.apache.commons.cli.OptionTest#testSubclass": 89,
      "org.apache.commons.cli.OptionsTest#testDuplicateLong": 90,
      "org.apache.commons.cli.OptionsTest#testDuplicateSimple": 91,
      "org.apache.commons.cli.OptionsTest#testGetMatchingOpts": 92,
      "org.apache.commons.cli.OptionsTest#testGetOptionsGroups": 93,
      "org.apache.commons.cli.OptionsTest#testHelpOptions": 94,
      "org.apache.commons.cli.OptionsTest#testLong": 95,
      "org.apache.commons.cli.OptionsTest#testMissingOptionException": 96,
      "org.apache.commons.cli.OptionsTest#testMissingOptionsException": 97,
      "org.apache.commons.cli.OptionsTest#testSimple": 98,
      "org.apache.commons.cli.OptionsTest#testToString": 99,
      "org.apache.commons.cli.PatternOptionBuilderTest#testClassPattern": 100,
      "org.apache.commons.cli.PatternOptionBuilderTest#testEmptyPattern": 101,
      "org.apache.commons.cli.PatternOptionBuilderTest#testExistingFilePattern": 102,
      "org.apache.commons.cli.PatternOptionBuilderTest#testExistingFilePatternFileNotExist": 103,
      "org.apache.commons.cli.PatternOptionBuilderTest#testNumberPattern": 104,
      "org.apache.commons.cli.PatternOptionBuilderTest#testObjectPattern": 105,
      "org.apache.commons.cli.PatternOptionBuilderTest#testRequiredOption": 106,
      "org.apache.commons.cli.PatternOptionBuilderTest#testSimplePattern": 107,
      "org.apache.commons.cli.PatternOptionBuilderTest#testURLPattern": 108,
      "org.apache.commons.cli.PatternOptionBuilderTest#testUntypedPattern": 109,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueClass": 110,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueClass_notFound": 111,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueDate": 112,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueExistingFile": 113,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueExistingFile_nonExistingFile": 114,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueFile": 115,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueFiles": 116,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueInteger_failure": 117,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueNumber_Double": 118,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueNumber_Long": 119,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueNumber_noNumber": 120,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueObject_InstantiableClass": 121,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueObject_notInstantiableClass": 122,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueObject_unknownClass": 123,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueString": 124,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueURL": 125,
      "org.apache.commons.cli.TypeHandlerTest#testCreateValueURL_malformed": 126,
      "org.apache.commons.cli.UtilTest#testStripLeadingAndTrailingQuotes": 127,
      "org.apache.commons.cli.UtilTest#testStripLeadingHyphens": 128,
      "org.apache.commons.cli.ValueTest#testLongNoArg": 129,
      "org.apache.commons.cli.ValueTest#testLongNoArgWithOption": 130,
      "org.apache.commons.cli.ValueTest#testLongOptionalArgValue": 131,
      "org.apache.commons.cli.ValueTest#testLongOptionalArgValueWithOption": 132,
      "org.apache.commons.cli.ValueTest#testLongOptionalArgValues": 133,
      "org.apache.commons.cli.ValueTest#testLongOptionalArgValuesWithOption": 134,
      "org.apache.commons.cli.ValueTest#testLongOptionalNArgValues": 135,
      "org.apache.commons.cli.ValueTest#testLongOptionalNArgValuesWithOption": 136,
      "org.apache.commons.cli.ValueTest#testLongOptionalNoValue": 137,
      "org.apache.commons.cli.ValueTest#testLongOptionalNoValueWithOption": 138,
      "org.apache.commons.cli.ValueTest#testLongWithArg": 139,
      "org.apache.commons.cli.ValueTest#testLongWithArgWithOption": 140,
      "org.apache.commons.cli.ValueTest#testShortNoArg": 141,
      "org.apache.commons.cli.ValueTest#testShortNoArgWithOption": 142,
      "org.apache.commons.cli.ValueTest#testShortOptionalArgNoValue": 143,
      "org.apache.commons.cli.ValueTest#testShortOptionalArgNoValueWithOption": 144,
      "org.apache.commons.cli.ValueTest#testShortOptionalArgValue": 145,
      "org.apache.commons.cli.ValueTest#testShortOptionalArgValueWithOption": 146,
      "org.apache.commons.cli.ValueTest#testShortOptionalArgValues": 147,
      "org.apache.commons.cli.ValueTest#testShortOptionalArgValuesWithOption": 148,
      "org.apache.commons.cli.ValueTest#testShortOptionalNArgValues": 149,
      "org.apache.commons.cli.ValueTest#testShortOptionalNArgValuesWithOption": 150,
      "org.apache.commons.cli.ValueTest#testShortWithArg": 151,
      "org.apache.commons.cli.ValueTest#testShortWithArgWithOption": 152,
      "org.apache.commons.cli.ValuesTest#testCharSeparator": 153,
      "org.apache.commons.cli.ValuesTest#testComplexValues": 154,
      "org.apache.commons.cli.ValuesTest#testExtraArgs": 155,
      "org.apache.commons.cli.ValuesTest#testMultipleArgValues": 156,
      "org.apache.commons.cli.ValuesTest#testShortArgs": 157,
      "org.apache.commons.cli.ValuesTest#testShortArgsWithValue": 158,
      "org.apache.commons.cli.ValuesTest#testTwoArgValues": 159,
      "org.apache.commons.cli.bug.BugCLI133Test#testOrder": 160,
      "org.apache.commons.cli.bug.BugCLI13Test#testCLI13": 161,
      "org.apache.commons.cli.bug.BugCLI148Test#testWorkaround1": 162,
      "org.apache.commons.cli.bug.BugCLI148Test#testWorkaround2": 163,
      "org.apache.commons.cli.bug.BugCLI162Test#testInfiniteLoop": 164,
      "org.apache.commons.cli.bug.BugCLI162Test#testLongLineChunking": 165,
      "org.apache.commons.cli.bug.BugCLI162Test#testLongLineChunkingIndentIgnored": 166,
      "org.apache.commons.cli.bug.BugCLI162Test#testPrintHelpLongLines": 167,
      "org.apache.commons.cli.bug.BugCLI18Test#testCLI18": 168,
      "org.apache.commons.cli.bug.BugCLI252Test#testAmbiquousOptionName": 169,
      "org.apache.commons.cli.bug.BugCLI252Test#testExactOptionNameMatch": 170,
      "org.apache.commons.cli.bug.BugCLI265Test#shouldParseConcatenatedShortOptions": 171,
      "org.apache.commons.cli.bug.BugCLI265Test#shouldParseShortOptionWithValue": 172,
      "org.apache.commons.cli.bug.BugCLI265Test#shouldParseShortOptionWithoutValue": 173,
      "org.apache.commons.cli.bug.BugCLI266Test#testOptionComparatorDefaultOrder": 174,
      "org.apache.commons.cli.bug.BugCLI266Test#testOptionComparatorInsertedOrder": 175,
      "org.apache.commons.cli.bug.BugCLI71Test#testBasic": 176,
      "org.apache.commons.cli.bug.BugCLI71Test#testGetsDefaultIfOptional": 177,
      "org.apache.commons.cli.bug.BugCLI71Test#testLackOfError": 178,
      "org.apache.commons.cli.bug.BugCLI71Test#testMistakenArgument": 179,
      "org.apache.commons.cli.bug.BugsTest#test11456": 180,
      "org.apache.commons.cli.bug.BugsTest#test11457": 181,
      "org.apache.commons.cli.bug.BugsTest#test11458": 182,
      "org.apache.commons.cli.bug.BugsTest#test11680": 183,
      "org.apache.commons.cli.bug.BugsTest#test12210": 184,
      "org.apache.commons.cli.bug.BugsTest#test13425": 185,
      "org.apache.commons.cli.bug.BugsTest#test13666": 186,
      "org.apache.commons.cli.bug.BugsTest#test13935": 187,
      "org.apache.commons.cli.bug.BugsTest#test14786": 188,
      "org.apache.commons.cli.bug.BugsTest#test15046": 189,
      "org.apache.commons.cli.bug.BugsTest#test15648": 190,
      "org.apache.commons.cli.bug.BugsTest#test31148": 191
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            107, 158, 153, 154, 156, 157, 159, 150, 135, 149, 155, 108, 129,
            139, 151, 133, 141, 147, 136, 137, 143, 100, 104, 131, 145, 180,
            105, 134, 148, 138, 144, 130, 140, 142, 152, 132, 146, 103, 102, 0,
            4, 182, 1, 2, 10, 9, 161, 171, 162, 12, 35, 163, 109, 190, 173, 13,
            177, 6, 7, 25, 183, 187, 172, 176, 179, 14, 22, 189, 26, 184, 17,
            32, 18, 73, 167, 20, 72, 168, 185, 65, 74, 23, 70, 21, 181, 75, 67,
            24, 186, 188, 19, 66, 69, 15, 3, 71, 106, 34, 5, 166, 165, 191, 164,
            53, 178, 42, 39, 64, 36, 37, 170, 41, 97, 96, 29, 169, 28, 40, 43,
            45, 44, 174, 63, 175, 31, 94, 160, 33, 92, 57, 62, 93, 68, 82, 56,
            99, 59, 54, 60, 55, 61, 84, 58, 8, 16, 91, 85, 90, 50, 95, 98, 51,
            48, 49, 46, 47, 83, 88, 27, 89, 30, 11, 126, 86, 87, 78, 79, 125,
            114, 117, 76, 116, 113, 77, 80, 81, 111, 115, 120, 38, 110, 122,
            101, 118, 119, 123, 112, 121, 128, 52, 127, 124
          ]
        ],
        "APSC_c": 0.7736272108581329
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            107, 157, 150, 149, 108, 141, 136, 100, 145, 105, 130, 142, 132,
            103, 0, 182, 2, 9, 171, 162, 35, 109, 173, 177, 6, 7, 183, 172, 176,
            14, 26, 17, 18, 73, 20, 72, 185, 74, 70, 181, 24, 188, 66, 15, 106,
            5, 165, 164, 178, 42, 64, 37, 41, 96, 169, 40, 44, 63, 175, 94, 33,
            57, 62, 68, 82, 99, 59, 55, 58, 16, 91, 90, 95, 51, 49, 47, 88, 89,
            11, 86, 78, 125, 117, 76, 77, 81, 115, 38, 101, 119, 112, 128, 52
          ],
          [
            158, 153, 154, 156, 159, 135, 155, 129, 139, 151, 133, 147, 137,
            143, 104, 131, 180, 134, 148, 138, 144, 140, 152, 146, 102, 4, 1,
            10, 161, 12, 163, 190, 13, 25, 187, 179, 22, 189, 184, 32, 167, 168,
            65, 23, 21, 75, 67, 186, 19, 69, 3, 71, 34, 166, 191, 53, 39, 36,
            170, 97, 29, 28, 43, 45, 174, 31, 160, 92, 93, 56, 54, 60, 61, 84,
            8, 85, 50, 98, 48, 46, 83, 27, 30, 126, 87, 79, 114, 116, 113, 80,
            111, 120, 110, 122, 118, 123, 121, 127, 124
          ]
        ],
        "APSC_c": 0.8872475968386865
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            107, 151, 141, 143, 131, 180, 148, 140, 146, 4, 182, 9, 35, 13, 172,
            14, 18, 20, 168, 21, 24, 188, 3, 5, 191, 64, 37, 169, 45, 175, 160,
            93, 54, 61, 91, 95, 49, 27, 86, 87, 114, 80, 115, 122, 123, 52
          ],
          [
            158, 156, 150, 155, 139, 147, 137, 104, 134, 138, 130, 132, 0, 2,
            171, 12, 173, 6, 25, 179, 22, 184, 73, 72, 74, 23, 75, 186, 15, 166,
            53, 36, 97, 28, 44, 31, 92, 82, 59, 16, 85, 98, 46, 88, 30, 78, 117,
            113, 111, 110, 118, 121
          ],
          [
            153, 157, 135, 108, 145, 105, 103, 1, 161, 163, 190, 183, 176, 189,
            17, 167, 65, 70, 67, 19, 66, 71, 34, 164, 42, 41, 29, 40, 63, 94,
            57, 68, 99, 60, 84, 8, 50, 48, 83, 126, 79, 76, 77, 38, 119, 128,
            124
          ],
          [
            154, 159, 149, 129, 133, 136, 100, 144, 142, 152, 102, 10, 162, 109,
            177, 7, 187, 26, 32, 185, 181, 69, 106, 165, 178, 39, 170, 96, 43,
            174, 33, 62, 56, 55, 58, 90, 51, 47, 89, 11, 125, 116, 81, 120, 101,
            112, 127
          ]
        ],
        "APSC_c": 0.9433429373200561
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            107, 138, 130, 132, 182, 9, 13, 73, 72, 21, 188, 165, 39, 29, 174,
            93, 84, 90, 83, 78, 113, 38, 52
          ],
          [
            158, 135, 141, 131, 148, 140, 146, 1, 162, 190, 179, 32, 70, 186,
            166, 178, 36, 40, 92, 55, 98, 27, 125, 80, 122, 128
          ],
          [
            153, 129, 143, 105, 10, 173, 25, 189, 168, 19, 71, 191, 97, 44, 57,
            56, 8, 51, 89, 79, 77, 118, 127
          ],
          [
            154, 151, 147, 100, 2, 109, 176, 26, 65, 24, 66, 34, 42, 169, 33,
            68, 99, 58, 95, 88, 87, 116, 115, 119
          ],
          [
            156, 139, 137, 145, 134, 144, 152, 102, 35, 183, 17, 167, 181, 106,
            37, 45, 160, 54, 91, 46, 126, 117, 111, 123
          ],
          [
            157, 149, 133, 104, 4, 171, 163, 177, 187, 18, 20, 185, 69, 5, 164,
            170, 28, 175, 62, 60, 16, 50, 47, 86, 114, 110, 121
          ],
          [
            159, 155, 136, 180, 0, 12, 7, 14, 23, 75, 15, 64, 41, 43, 31, 82,
            61, 85, 48, 30, 76, 120, 112
          ],
          [
            150, 108, 142, 103, 161, 6, 172, 22, 184, 74, 67, 3, 53, 96, 63, 94,
            59, 49, 11, 81, 101, 124
          ]
        ],
        "APSC_c": 0.9714915772044899
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [107, 171, 13, 186, 170, 31, 61, 83, 80, 123],
          [158, 136, 152, 2, 183, 65, 71, 39, 63, 160, 51, 79, 122],
          [153, 131, 132, 9, 7, 73, 181, 36, 92, 48, 77, 52],
          [154, 105, 179, 167, 19, 191, 174, 58, 88, 125, 119],
          [156, 145, 140, 10, 25, 74, 66, 164, 28, 33, 8, 89, 116, 101],
          [157, 137, 144, 4, 173, 14, 106, 43, 62, 16, 90, 86, 81],
          [159, 143, 142, 182, 163, 26, 67, 53, 44, 56, 95, 87, 38],
          [150, 100, 6, 189, 24, 5, 64, 40, 60, 46, 117, 118],
          [135, 104, 35, 17, 185, 178, 37, 93, 50, 126, 120],
          [149, 141, 146, 161, 187, 21, 69, 42, 175, 59, 76, 128],
          [155, 180, 162, 172, 184, 15, 45, 82, 91, 11, 121],
          [108, 12, 32, 34, 29, 57, 84, 49, 113, 112],
          [129, 138, 103, 109, 72, 75, 165, 169, 55, 30, 115, 127],
          [139, 134, 102, 176, 20, 70, 3, 96, 99, 85, 27, 111],
          [151, 147, 130, 1, 190, 168, 166, 97, 68, 54, 47, 114, 124],
          [133, 148, 0, 177, 22, 18, 23, 188, 41, 94, 98, 78, 110]
        ],
        "APSC_c": 0.985414914012408
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            158, 153, 154, 150, 155, 129, 139, 147, 137, 104, 105, 103, 4, 2,
            161, 35, 173, 177, 6, 25, 172, 14, 17, 32, 72, 65, 23, 181, 188, 3,
            106, 191, 39, 37, 97, 169, 45, 63, 31, 160, 62, 82, 59, 61, 16, 91,
            95, 48, 47, 27, 11, 79, 117, 116, 80, 115, 38, 118, 112, 52
          ],
          [
            107, 156, 157, 159, 135, 149, 108, 151, 133, 141, 136, 143, 100,
            131, 145, 180, 134, 148, 138, 144, 130, 140, 142, 152, 132, 146,
            102, 0, 182, 1, 10, 9, 171, 162, 12, 163, 109, 190, 13, 7, 183, 187,
            176, 179, 22, 189, 26, 184, 18, 73, 167, 20, 168, 185, 74, 70, 21,
            75, 67, 24, 186, 19, 66, 69, 15, 71, 34, 5, 166, 165, 164, 53, 178,
            42, 64, 36, 170, 41, 96, 29, 28, 40, 43, 44, 174, 175, 94, 33, 92,
            57, 93, 68, 56, 99, 54, 60, 55, 84, 58, 8, 85, 90, 50, 98, 51, 49,
            46, 83, 88, 89, 30, 126, 86, 87, 78, 125, 114, 76, 113, 77, 81, 111,
            120, 110, 122, 101, 119, 123, 121, 128, 127, 124
          ]
        ],
        "APSC_c": 0.9246087740525613
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            158, 153, 157, 149, 129, 151, 147, 143, 104, 134, 138, 142, 103,
            182, 10, 12, 173, 177, 7, 172, 179, 189, 18, 20, 185, 181, 66, 3, 5,
            191, 64, 37, 29, 40, 63, 31, 33, 93, 54, 61, 16, 85, 98, 49, 27,
            126, 79, 76, 80, 120, 122, 123, 127
          ],
          [
            107, 154, 156, 159, 150, 135, 155, 108, 139, 133, 141, 136, 137,
            100, 131, 145, 180, 105, 148, 144, 130, 140, 152, 132, 146, 102, 0,
            4, 1, 2, 9, 161, 171, 162, 35, 163, 109, 190, 13, 6, 25, 183, 187,
            176, 14, 22, 26, 184, 17, 32, 73, 167, 72, 168, 65, 74, 23, 70, 21,
            75, 67, 24, 186, 188, 19, 69, 15, 71, 106, 34, 166, 165, 164, 53,
            178, 42, 39, 36, 170, 41, 97, 96, 169, 28, 43, 45, 44, 174, 175, 94,
            160, 92, 57, 62, 68, 82, 56, 99, 59, 60, 55, 84, 58, 8, 91, 90, 50,
            95, 51, 48, 46, 47, 83, 88, 89, 30, 11, 86, 87, 78, 125, 114, 117,
            116, 113, 77, 81, 111, 115, 38, 110, 101, 118, 119, 112, 121, 128,
            52, 124
          ]
        ],
        "APSC_c": 0.9438856219227302
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [
            158, 153, 150, 129, 133, 100, 142, 102, 10, 35, 177, 25, 22, 26, 20,
            185, 75, 19, 15, 191, 36, 29, 43, 175, 33, 68, 99, 60, 8, 95, 46,
            30, 78, 76, 81, 110, 119, 127
          ],
          [
            107, 154, 156, 157, 159, 135, 149, 155, 108, 139, 151, 141, 147,
            136, 137, 143, 104, 131, 145, 180, 105, 134, 148, 138, 144, 130,
            140, 152, 132, 146, 103, 0, 4, 182, 1, 2, 9, 161, 171, 162, 12, 163,
            109, 190, 173, 13, 6, 7, 183, 187, 172, 176, 179, 14, 189, 184, 17,
            32, 18, 73, 167, 72, 168, 65, 74, 23, 70, 21, 181, 67, 24, 186, 188,
            66, 69, 3, 71, 106, 34, 5, 166, 165, 164, 53, 178, 42, 39, 64, 37,
            170, 41, 97, 96, 169, 28, 40, 45, 44, 174, 63, 31, 94, 160, 92, 57,
            62, 93, 82, 56, 59, 54, 55, 61, 84, 58, 16, 91, 85, 90, 50, 98, 51,
            48, 49, 47, 83, 88, 27, 89, 11, 126, 86, 87, 79, 125, 114, 117, 116,
            113, 77, 80, 111, 115, 120, 38, 122, 101, 118, 123, 112, 121, 128,
            52, 124
          ]
        ],
        "APSC_c": 0.9544521558904266
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [156, 100, 176, 74, 3, 40, 91, 125, 112],
          [157, 141, 142, 2, 189, 5, 37, 55, 114],
          [159, 147, 138, 4, 25, 186, 41, 93, 27, 122],
          [150, 136, 144, 182, 6, 32, 165, 28, 56, 47, 111],
          [
            107, 143, 145, 105, 1, 161, 163, 190, 187, 26, 167, 23, 21, 24, 19,
            69, 34, 191, 36, 29, 44, 31, 92, 59, 85, 95, 49, 30, 87, 117, 77,
            38, 121, 127
          ],
          [
            158, 135, 108, 134, 148, 130, 132, 102, 171, 162, 109, 7, 172, 179,
            17, 18, 73, 185, 75, 188, 106, 178, 42, 97, 43, 174, 33, 62, 54, 84,
            16, 90, 51, 83, 11, 76, 80, 120, 118, 128, 124
          ],
          [
            153, 149, 129, 151, 137, 131, 180, 152, 103, 10, 12, 173, 177, 183,
            22, 184, 20, 168, 181, 15, 164, 39, 96, 45, 63, 94, 57, 82, 60, 58,
            50, 48, 88, 126, 79, 113, 115, 101, 123
          ],
          [
            154, 155, 139, 133, 104, 140, 146, 0, 9, 35, 13, 14, 72, 65, 70, 67,
            66, 71, 166, 53, 64, 170, 169, 175, 160, 68, 99, 61, 8, 98, 46, 89,
            86, 78, 116, 81, 110, 119, 52
          ]
        ],
        "APSC_c": 0.9889441214719279
      }
    ]
  },
  {
    "filename": "jonbo372_efflux.json",
    "name_to_id": {
      "com.biasedbit.efflux.packet.ByePacketTest#testDecode": 0,
      "com.biasedbit.efflux.packet.ByePacketTest#testDecode2": 1,
      "com.biasedbit.efflux.packet.ByePacketTest#testEncodeDecode": 2,
      "com.biasedbit.efflux.packet.ByePacketTest#testEncodeDecodeWithFixedBlockSize64": 3,
      "com.biasedbit.efflux.packet.ByePacketTest#testEncodeDecodeWithFixedBlockSize64AndCompound": 4,
      "com.biasedbit.efflux.packet.ControlPacketTest#testDecodeCompoundPacket": 5,
      "com.biasedbit.efflux.packet.DataPacketTest#testDecode": 6,
      "com.biasedbit.efflux.packet.DataPacketTest#testDecodeH263Packet": 7,
      "com.biasedbit.efflux.packet.DataPacketTest#testEncode": 8,
      "com.biasedbit.efflux.packet.DataPacketTest#testEncodeDecode": 9,
      "com.biasedbit.efflux.packet.DataPacketTest#testEncodeDecodeWithFixedBlockSize": 10,
      "com.biasedbit.efflux.packet.ReceiverReportPacketTest#testDecode": 11,
      "com.biasedbit.efflux.packet.SenderReportPacketTest#testDecode": 12,
      "com.biasedbit.efflux.packet.SenderReportPacketTest#testDecode2": 13,
      "com.biasedbit.efflux.packet.SenderReportPacketTest#testEncodeDecode": 14,
      "com.biasedbit.efflux.packet.SourceChunkItemsTest#testDecode": 15,
      "com.biasedbit.efflux.packet.SourceChunkItemsTest#testEncodeDecodeSimpleEmptyItem": 16,
      "com.biasedbit.efflux.packet.SourceChunkItemsTest#testEncodeDecodeSimpleItem": 17,
      "com.biasedbit.efflux.packet.SourceChunkItemsTest#testEncodeDecodeSimpleItemMaxLength": 18,
      "com.biasedbit.efflux.packet.SourceChunkItemsTest#testEncodeDecodeSimpleItemOverMaxLength": 19,
      "com.biasedbit.efflux.packet.SourceChunkItemsTest#testEncodeNull": 20,
      "com.biasedbit.efflux.packet.SourceChunkItemsTest#testEncoderDecodePrivItem": 21,
      "com.biasedbit.efflux.packet.SourceChunkTest#testEncodeDecode": 22,
      "com.biasedbit.efflux.packet.SourceDescriptionPacketTest#testDecode": 23,
      "com.biasedbit.efflux.packet.SourceDescriptionPacketTest#testDecode2": 24,
      "com.biasedbit.efflux.packet.SourceDescriptionPacketTest#testEncode": 25,
      "com.biasedbit.efflux.packet.SourceDescriptionPacketTest#testEncode2": 26,
      "com.biasedbit.efflux.packet.SourceDescriptionPacketTest#testEncodeAsPartOfCompound": 27,
      "com.biasedbit.efflux.participant.DefaultParticipantDatabaseTest#testAddReceiver": 28,
      "com.biasedbit.efflux.participant.DefaultParticipantDatabaseTest#testAssociationOfParticipantViaDataAddress": 29,
      "com.biasedbit.efflux.participant.DefaultParticipantDatabaseTest#testCleanup": 30,
      "com.biasedbit.efflux.participant.DefaultParticipantDatabaseTest#testFailAddReceiver": 31,
      "com.biasedbit.efflux.participant.DefaultParticipantDatabaseTest#testGetId": 32,
      "com.biasedbit.efflux.participant.DefaultParticipantDatabaseTest#testGetOrCreateParticipantFromDataPacket": 33,
      "com.biasedbit.efflux.participant.DefaultParticipantDatabaseTest#testGetOrCreateParticipantFromSdesChunk": 34,
      "com.biasedbit.efflux.participant.DefaultParticipantDatabaseTest#testNonAssociationOfParticipantViaDataAddress": 35,
      "com.biasedbit.efflux.participant.DefaultParticipantDatabaseTest#testRemoveReceiver": 36,
      "com.biasedbit.efflux.participant.DefaultParticipantDatabaseTest#testRemoveReceiver2": 37,
      "com.biasedbit.efflux.session.MultiParticipantSessionTest#testNewParticipantFromDataPacket": 38,
      "com.biasedbit.efflux.session.MultiParticipantSessionTest#testOutOfOrderDiscard": 39
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            39, 38, 25, 26, 14, 5, 27, 3, 4, 9, 2, 10, 22, 24, 23, 29, 35, 12,
            13, 34, 8, 33, 1, 11, 7, 0, 6, 31, 37, 36, 21, 28, 16, 17, 18, 15,
            19, 32, 20, 30
          ]
        ],
        "APSC_c": 0.7170122014379505
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [39, 26, 5, 3, 9, 10, 24, 35, 12, 8, 11, 7, 6, 21, 17, 18, 19, 20],
          [
            38, 25, 14, 27, 4, 2, 22, 23, 29, 13, 34, 33, 1, 0, 31, 37, 36, 28,
            16, 15, 32, 30
          ]
        ],
        "APSC_c": 0.848874712133187
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [39, 35, 13, 1, 6, 17, 32, 30],
          [38, 23, 12, 0, 21, 15],
          [25, 14, 27, 9, 10, 24, 34, 33, 11, 31, 36, 16, 20],
          [26, 5, 3, 4, 2, 22, 29, 8, 7, 37, 28, 18, 19]
        ],
        "APSC_c": 0.9375185348625689
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [39],
          [38],
          [25, 9, 35, 13, 7, 31, 17],
          [26, 10, 12, 37, 18, 32],
          [14, 29, 1, 21],
          [5, 22, 34, 33, 11, 36, 16],
          [27, 2, 24, 0, 28, 19, 20],
          [3, 4, 23, 8, 6, 15, 30]
        ],
        "APSC_c": 0.9666656261129787
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [39],
          [38],
          [25, 1, 30],
          [26, 0],
          [14, 32],
          [5, 28],
          [27, 11, 20],
          [3, 8, 16],
          [4, 12],
          [9, 13, 17],
          [2, 35, 6],
          [10, 7, 15],
          [22, 34, 31, 19],
          [24, 21],
          [23, 33, 37],
          [29, 36, 18]
        ],
        "APSC_c": 0.9767315641082762
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [38, 3, 9, 22, 29, 13, 1, 6, 28, 17, 20],
          [
            39, 25, 26, 14, 5, 27, 4, 2, 10, 24, 23, 35, 12, 34, 8, 33, 11, 7,
            0, 31, 37, 36, 21, 16, 18, 15, 19, 32, 30
          ]
        ],
        "APSC_c": 0.9057020686680297
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [38, 24, 13, 11, 31, 36, 28, 18, 30],
          [
            39, 25, 26, 14, 5, 27, 3, 4, 9, 2, 10, 22, 23, 29, 35, 12, 34, 8,
            33, 1, 7, 0, 6, 37, 21, 16, 17, 15, 19, 32, 20
          ]
        ],
        "APSC_c": 0.9341462895510909
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [38, 13, 7, 37, 16],
          [
            39, 25, 26, 14, 5, 27, 3, 4, 9, 2, 10, 22, 24, 23, 29, 35, 12, 34,
            8, 33, 1, 11, 0, 6, 31, 36, 21, 28, 17, 18, 15, 19, 32, 20, 30
          ]
        ],
        "APSC_c": 0.949839291212666
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [14, 21],
          [5, 1],
          [27, 35, 7, 30],
          [3, 29, 20],
          [39, 0, 28, 15],
          [38, 33, 6, 18, 19],
          [25, 4, 2, 22, 23, 12, 11, 37, 17, 32],
          [26, 9, 10, 24, 13, 34, 8, 31, 36, 16]
        ],
        "APSC_c": 0.9869484060372924
      }
    ]
  },
  {
    "filename": "yegor256_xembly.json",
    "name_to_id": {
      "org.xembly.AddDirectiveTest#addsNodesToCurrentNodes": 0,
      "org.xembly.AddIfDirectiveTest#addsDomNodesDirectly": 1,
      "org.xembly.AddIfDirectiveTest#addsNodesToCurrentNodes": 2,
      "org.xembly.ArgTest#escapesAndUnescaped": 3,
      "org.xembly.ArgTest#rejectsToEscapeInvalidXmlChars": 4,
      "org.xembly.ArgTest#rejectsToUnEscapeInvalidXmlChars": 5,
      "org.xembly.AttrDirectiveTest#addsAttributesToCurrentNodes": 6,
      "org.xembly.AttrDirectiveTest#addsCaseSensitiveAttributesDirectly": 7,
      "org.xembly.AttrDirectiveTest#addsDomAttributesDirectly": 8,
      "org.xembly.CommentDirectiveTest#addsComment": 9,
      "org.xembly.DirectivesTest#addsComments": 10,
      "org.xembly.DirectivesTest#addsElementsCaseSensitively": 11,
      "org.xembly.DirectivesTest#addsMapOfValues": 12,
      "org.xembly.DirectivesTest#appendsDirs": 13,
      "org.xembly.DirectivesTest#appendsExistingNode": 14,
      "org.xembly.DirectivesTest#convertsToString": 15,
      "org.xembly.DirectivesTest#copiesExistingNode": 16,
      "org.xembly.DirectivesTest#ingoresEmptyInput": 17,
      "org.xembly.DirectivesTest#makesXmlDocument": 18,
      "org.xembly.DirectivesTest#parsesIncomingGrammar": 19,
      "org.xembly.DirectivesTest#performsFullScaleModifications": 20,
      "org.xembly.DirectivesTest#prefixesItemsWithNamespaces": 21,
      "org.xembly.DirectivesTest#pushesAndPopsCursor": 22,
      "org.xembly.DirectivesTest#throwsOnBrokenEscapedXmlContent": 23,
      "org.xembly.DirectivesTest#throwsOnBrokenGrammar": 24,
      "org.xembly.DirectivesTest#throwsOnBrokenXmlContent": 25,
      "org.xembly.DomStackTest#addsAndRetrieves": 26,
      "org.xembly.DomStackTest#throwsExceptionOnEmpty": 27,
      "org.xembly.NsDirectiveTest#setsNsAttr": 28,
      "org.xembly.PiDirectiveTest#addsProcessingInstructionsDirectlyToDom": 29,
      "org.xembly.PiDirectiveTest#addsProcessingInstructionsToDom": 30,
      "org.xembly.PiDirectiveTest#addsProcessingInstructionsToDomRoot": 31,
      "org.xembly.PiDirectiveTest#prependsProcessingInstructionsToDomRoot": 32,
      "org.xembly.RemoveDirectiveTest#removesCurrentNodes": 33,
      "org.xembly.RemoveDirectiveTest#removesDomNodesDirectly": 34,
      "org.xembly.SetDirectiveTest#rejectsContentWithInvalidXmlCharacters": 35,
      "org.xembly.SetDirectiveTest#setsTextContentOfNodes": 36,
      "org.xembly.SetDirectiveTest#setsTextDirectlyIntoDomNodes": 37,
      "org.xembly.StrictDirectiveTest#checksNumberOfCurrentNodes": 38,
      "org.xembly.StrictDirectiveTest#failsWhenNumberOfCurrentNodesIsTooBig": 39,
      "org.xembly.StrictDirectiveTest#failsWhenNumberOfCurrentNodesIsTooSmall": 40,
      "org.xembly.StrictDirectiveTest#failsWhenNumberOfCurrentNodesIsZero": 41,
      "org.xembly.SyntaxExceptionTest#instantiatesException": 42,
      "org.xembly.UpDirectiveTest#jumpsToParentsWhenTheyExist": 43,
      "org.xembly.UpDirectiveTest#throwsWhenNoParents": 44,
      "org.xembly.XemblerTest#escapesBrokenText": 45,
      "org.xembly.XemblerTest#makesChangesToDomDocument": 46,
      "org.xembly.XemblerTest#makesChangesToDomDocumentFromBuilder": 47,
      "org.xembly.XemblerTest#modifiesClonedNode": 48,
      "org.xembly.XemblerTest#printsXmlDocument": 49,
      "org.xembly.XemblerTest#removesAttribute": 50,
      "org.xembly.XemblerTest#removesRootNode": 51,
      "org.xembly.XemblerTest#rendersXmlDeclaration": 52,
      "org.xembly.XemblerTest#replacesRootNode": 53,
      "org.xembly.XpathDirectiveTest#findsNodesByXpathDirectly": 54,
      "org.xembly.XpathDirectiveTest#findsNodesInEmptyDom": 55,
      "org.xembly.XpathDirectiveTest#findsNodesWithXpathExpression": 56,
      "org.xembly.XpathDirectiveTest#findsRootInClonedNode": 57,
      "org.xembly.XpathDirectiveTest#ignoresEmptySearches": 58,
      "org.xembly.XsetDirectiveTest#setsTextContentOfNodes": 59,
      "org.xembly.XsetDirectiveTest#setsTextDirectlyIntoDomNodes": 60,
      "org.xembly.prof.DirectivesProfTest#parsesLongProgram": 61,
      "org.xembly.prof.XemblerProfTest#modifiesDom": 62
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            47, 46, 16, 20, 62, 18, 14, 59, 6, 56, 22, 31, 33, 36, 38, 2, 30,
            50, 32, 58, 12, 57, 39, 41, 40, 44, 52, 10, 11, 51, 53, 21, 15, 43,
            9, 0, 3, 49, 48, 13, 35, 61, 19, 23, 1, 25, 54, 55, 28, 29, 5, 60,
            7, 8, 37, 17, 34, 24, 4, 45, 26, 27, 42
          ]
        ],
        "APSC_c": 0.8668234574743764
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            47, 20, 18, 14, 59, 6, 56, 22, 31, 33, 36, 38, 30, 32, 12, 39, 41,
            44, 10, 51, 21, 9, 3, 49, 13, 35, 61, 54, 55, 29, 5, 60, 8, 17, 34,
            45, 27, 42
          ],
          [
            46, 16, 62, 2, 50, 58, 57, 40, 52, 11, 53, 15, 43, 0, 48, 19, 23, 1,
            25, 28, 7, 37, 24, 4, 26
          ]
        ],
        "APSC_c": 0.9371839455368574
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            47, 14, 56, 33, 2, 32, 57, 40, 10, 21, 0, 13, 35, 23, 54, 55, 28,
            17, 24, 26
          ],
          [
            46, 18, 6, 31, 38, 50, 12, 41, 52, 51, 15, 9, 3, 48, 19, 25, 29, 8,
            34
          ],
          [16, 62, 61, 7, 4, 45],
          [20, 59, 22, 36, 30, 58, 39, 44, 11, 53, 43, 49, 1, 5, 60, 37, 27, 42]
        ],
        "APSC_c": 0.9686312113438721
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [47, 36, 12, 10, 0, 54, 5, 7, 27],
          [46, 31, 50, 40, 15, 9, 1, 37],
          [16, 22, 2, 39, 11, 3, 49, 55, 60, 4, 45],
          [20, 38, 57, 51, 48, 25, 8, 17, 42],
          [62],
          [18, 56, 32, 44, 21, 61, 24],
          [14, 6, 30, 41, 53, 13, 35, 19, 29, 34],
          [59, 33, 58, 52, 43, 23, 28, 26]
        ],
        "APSC_c": 0.9834120284763062
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [47, 11, 1],
          [46, 40, 35, 7],
          [16, 58, 3, 48, 24],
          [20, 53, 5, 60],
          [62],
          [18, 32, 15, 25, 17],
          [14, 30, 43, 45],
          [59, 10, 55, 29],
          [6, 44, 0, 27],
          [56, 51, 61],
          [22, 50, 21, 4, 26],
          [31, 12, 13, 19, 8],
          [33, 57, 23, 37],
          [36, 52, 54, 28],
          [38, 39, 9, 34],
          [2, 41, 49, 42]
        ],
        "APSC_c": 0.9894806556547965
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            46, 20, 18, 14, 59, 6, 22, 33, 2, 32, 57, 40, 10, 21, 0, 13, 35, 19,
            23, 25, 29, 7, 34, 27, 42
          ],
          [
            47, 16, 62, 56, 31, 36, 38, 30, 50, 58, 12, 39, 41, 44, 52, 11, 51,
            53, 15, 43, 9, 3, 49, 48, 61, 1, 54, 55, 28, 5, 60, 8, 37, 17, 24,
            4, 45, 26
          ]
        ],
        "APSC_c": 0.9572035893486887
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [46, 62, 19, 23, 54, 29, 8, 34, 27, 42],
          [
            47, 16, 20, 18, 14, 59, 6, 56, 22, 31, 33, 36, 38, 2, 30, 50, 32,
            58, 12, 57, 39, 41, 40, 44, 52, 10, 11, 51, 53, 21, 15, 43, 9, 0, 3,
            49, 48, 13, 35, 61, 1, 25, 55, 28, 5, 60, 7, 37, 17, 24, 4, 45, 26
          ]
        ],
        "APSC_c": 0.9721697760512804
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [46, 18, 14, 59, 56, 2, 57, 10, 15, 0, 19, 54, 29, 37, 27, 42],
          [
            47, 16, 20, 62, 6, 22, 31, 33, 36, 38, 30, 50, 32, 58, 12, 39, 41,
            40, 44, 52, 11, 51, 53, 21, 43, 9, 3, 49, 48, 13, 35, 61, 23, 1, 25,
            55, 28, 5, 60, 7, 8, 17, 34, 24, 4, 45, 26
          ]
        ],
        "APSC_c": 0.9749840811279347
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [62],
          [18, 12, 19, 17],
          [14, 50, 3, 49],
          [59, 10, 7],
          [47, 22, 36, 32, 41, 11, 15, 0, 23, 54, 55, 29, 37, 42],
          [46, 56, 38, 58, 40, 51, 43, 13, 35, 1, 5, 60, 24, 26],
          [16, 6, 33, 30, 39, 52, 21, 48, 25, 28, 34, 27],
          [20, 31, 2, 57, 44, 53, 9, 61, 8, 4, 45]
        ],
        "APSC_c": 0.9939007531081584
      }
    ]
  },
  {
    "filename": "smartrics_restfixture.json",
    "name_to_id": {
      "smartrics.rest.fitnesse.fixture.FitFormatterTest#delegatesCallToCheck": 0,
      "smartrics.rest.fitnesse.fixture.FitFormatterTest#delegatesCallToException": 1,
      "smartrics.rest.fitnesse.fixture.FitFormatterTest#fromRawIsSimplyABypassAsAllHandlingIsDoneByTheParse": 2,
      "smartrics.rest.fitnesse.fixture.FitFormatterTest#fullyRendersRight_noActualIfDisplayActualIsFalse": 3,
      "smartrics.rest.fitnesse.fixture.FitFormatterTest#fullyRendersRight_withActualIfDisplayActualIsTrue": 4,
      "smartrics.rest.fitnesse.fixture.FitFormatterTest#fullyRendersWrong_noActualIfDisplayActualIsFalse_errorsDisplayedIfAny": 5,
      "smartrics.rest.fitnesse.fixture.FitFormatterTest#fullyRendersWrong_noActualIfDisplayActualIsFalse_noErrorsDisplayedIfNone": 6,
      "smartrics.rest.fitnesse.fixture.FitFormatterTest#fullyRendersWrong_withActualIfDisplayActualIsTrue": 7,
      "smartrics.rest.fitnesse.fixture.FitFormatterTest#greyCellAreSpansWithAnAssignedClass": 8,
      "smartrics.rest.fitnesse.fixture.FitFormatterTest#rendersTextAsHtmlLink": 9,
      "smartrics.rest.fitnesse.fixture.PartsFactoryTest#buildsASlimFormatterForFITRunner": 10,
      "smartrics.rest.fitnesse.fixture.PartsFactoryTest#buildsASlimFormatterForSLIMRunner": 11,
      "smartrics.rest.fitnesse.fixture.PartsFactoryTest#buildsRestClientWithDefaultURIFactory": 12,
      "smartrics.rest.fitnesse.fixture.PartsFactoryTest#buildsRestClientWithEscapedSquareBracketsInUri": 13,
      "smartrics.rest.fitnesse.fixture.PartsFactoryTest#buildsRestClientWithNewURIFactory": 14,
      "smartrics.rest.fitnesse.fixture.PartsFactoryTest#buildsRestClientWithSquareBracketsInUri": 15,
      "smartrics.rest.fitnesse.fixture.PartsFactoryTest#buildsRestClientWithStandardUri": 16,
      "smartrics.rest.fitnesse.fixture.PartsFactoryTest#buildsRestClientWithoutSquareBracketsInUri": 17,
      "smartrics.rest.fitnesse.fixture.PartsFactoryTest#buildsRestRequest": 18,
      "smartrics.rest.fitnesse.fixture.PartsFactoryTest#cannotBuildACellFormatterForANullRunner": 19,
      "smartrics.rest.fitnesse.fixture.PartsFactoryTest#cantBuildACellFormatterForNonFitOrSlimRunner": 20,
      "smartrics.rest.fitnesse.fixture.RestFixtureConfigTest#mustStoreDataInNamedConfigWhoseNameIsNotPassedHenceUsingDefault_FitVersion": 21,
      "smartrics.rest.fitnesse.fixture.RestFixtureConfigTest#mustStoreDataInNamedConfigWhoseNameIsPassedAsFirstArgToTheFixture": 22,
      "smartrics.rest.fitnesse.fixture.RestFixtureFitTest#mustNotifyCallerThatBaseUrlAsFixtureArgIsMandatory": 23,
      "smartrics.rest.fitnesse.fixture.RestFixtureFitTest#mustSetBodyOnRequestWhenPosting": 24,
      "smartrics.rest.fitnesse.fixture.RestFixtureFitTest#mustSetConfigNameToDefaultWhenNotSpecifiedAsSecondOptionalParameter_FIT": 25,
      "smartrics.rest.fitnesse.fixture.RestFixtureFitTest#mustSetConfigNameToSpecifiedValueIfOptionalSecondParameterIsSpecified_FIT": 26,
      "smartrics.rest.fitnesse.fixture.RestFixtureSlimFitTest#mustLeaveCellsForSetXMethodsIgnored": 27,
      "smartrics.rest.fitnesse.fixture.RestFixtureSlimFitTest#mustSetConfigNameToDefaultWhenNotSpecifiedAsSecondOptionalParameter_SLIM": 28,
      "smartrics.rest.fitnesse.fixture.RestFixtureSlimFitTest#mustSetConfigNameToSpecifiedValueIfOptionalSecondParameterIsSpecified_SLIM": 29,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#addHeaderExplicitlyWithSubstitutions": 30,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#constructingWithOneArgShoudlBeTheSUTUri": 31,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#constructingWithOneArgShoudlStripAnyTagAndSetTheSUTUri": 32,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#constructingWithOneFailsIfArgIsNotAnUri": 33,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustAllowAddingHeaders": 34,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustAllowAddingMultipleHeaders": 35,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustAllowGlobalStorageOfValuesExtractedViaRegexFromHeader": 36,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustAllowGlobalStorageOfValuesExtractedViaXPathFromBody": 37,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustAllowMultilineHeadersWhenSettingHeaders": 38,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustAllowRegexesWhenLetIsInvokedOnHeaders": 39,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustAllowSetOfFileNameForFileUpload": 40,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustAllowSetOfMultipartFileNameForFileUpload": 41,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustAllowSetOfMultipartFileParameterNameForFileUpload": 42,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustAllowSettingHeaders": 43,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustAllowStorageOfValuesExtractedViaXPathsReturningStringValues": 44,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustCaptureErrorsOnExpectationsAndDisplayThemInTheSameCell": 45,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustEvalJavascriptStringsWithEval": 46,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecuteAllHttpVerbSupported": 47,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecutePOSTWithFileUploadWhenFileParamNameIsDefault": 48,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecuteVariableSubstitutionOnBodyForNextRequest": 49,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecuteVerbByOverridingBaseUriIfRowResourceIsAbsoluteUri": 50,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecuteVerbOnAUriWithExcpectationsSetOnBody_JSON": 51,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecuteVerbOnAUriWithExcpectationsSetOnBody_TEXT": 52,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecuteVerbOnAUriWithExcpectationsSetOnBody_TEXTWithHtml": 53,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecuteVerbOnAUriWithExcpectationsSetOnBody_XML": 54,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecuteVerbOnAUriWithExcpectationsSetOnEachResponsePart_ExpectationsMatched": 55,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecuteVerbOnAUriWithExcpectationsSetOnEachResponsePart_ExpectationsNotMatched": 56,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecuteVerbOnAUriWithExcpectationsSetOnHeaders": 57,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExecuteVerbOnAUriWithNoExcpectationsOnRestResponseParts": 58,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExpandSymbolSetWithLetWhenSettingHeaders": 59,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExpandSymbolWhenSettingHeaders": 60,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExpandSymbolsWhenSettingMultilineHeaders": 61,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustExpectOnlySupportedVerbOnFirstCell": 62,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustMatchRequestsWithNoBodyExpressedAsNoBodyString": 63,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustNotSetValueOnSymbolMapIfVariableNameStartsWith$": 64,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustNotifyClientIfExpectedBodyCellHasNotBeenSpecified": 65,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustNotifyClientIfExpectedHeadersCellHasNotBeenSpecified": 66,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustNotifyClientIfExpectedStatusCodeCellHasNotBeenSpecified": 67,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustNotifyClientIfHTTPVerbInFirstCellIsNotSupported": 68,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustNotifyExceptionsWhenEvalJavascriptStrings": 69,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustRenderSymbolValueWhenSettingHeaders": 70,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustReplaceVariablesInExpectedContentOfLetCell": 71,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustReportAsExceptionWhenAttemptingToSetMissingMultipartFileName": 72,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustReportAsExceptionWhenSettingMissingFileName": 73,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustReportAsRTEWhenSettingAMissingBody": 74,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustReportAsRTEWhenSettingAMissingHeader": 75,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustReportAsRTEWhenSettingMissingMultipartFileParameterName": 76,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustReportToTheUserIfLetCantFindTheHandlerToHandleTheDesiredExpression": 77,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustReportToTheUserIfLetCellsAreMissing": 78,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustSetConfigNameToDefaultWhenNotSpecifiedAsSecondOptionalParameter_SLIM": 79,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustSetConfigNameToSpecifiedValueIfOptionalSecondParameterIsSpecified_SLIM": 80,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustSetValiueOnSymbolMapAsJsonStringIfSourceIsJs": 81,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustSetValueOnSymbolMapAsPlainBodyIfSourceIsPlainBody": 82,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustSetValueOnSymbolMapAsXmlStringIfSourceIsBodyAsXml": 83,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustSplitQueryOnFirstQuestionMark": 84,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustUseDefaultHeadersIfDefinedOnNamedConfig": 85,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#mustUseValueOnSymbolMapEvenIfNotSetViaVariables": 86,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#setBaseUrlExplicitly": 87,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#setBodyShouldNotRenderEncodedSymbols": 88,
      "smartrics.rest.fitnesse.fixture.RestFixtureTest#setBodyShouldRenderResolvedSymbols": 89,
      "smartrics.rest.fitnesse.fixture.SlimFormatterTest#shouldDisplayFailOnCheckIfExpectedAndActualMatch_whenDisplayingActual": 90,
      "smartrics.rest.fitnesse.fixture.SlimFormatterTest#shouldDisplayFailOnCheckIfExpectedAndActualMatch_whenNotDisplayingActual": 91,
      "smartrics.rest.fitnesse.fixture.SlimFormatterTest#shouldDisplayGrayedActualOnCheckIfNoExpectedIsSpecified": 92,
      "smartrics.rest.fitnesse.fixture.SlimFormatterTest#shouldDisplayNothingOnCheckIfNoExpectedIsSpecifiedAndActualIsNullOrEmpty": 93,
      "smartrics.rest.fitnesse.fixture.SlimFormatterTest#shouldDisplayPassOnCheckIfExpectedAndActualMatch": 94,
      "smartrics.rest.fitnesse.fixture.SlimFormatterTest#shouldDisplayPassOnCheckIfExpectedAndActualMatch_whenDisplayingActual": 95,
      "smartrics.rest.fitnesse.fixture.SlimFormatterTest#shouldDisplayXmlDataInActual": 96,
      "smartrics.rest.fitnesse.fixture.SlimFormatterTest#shouldRenderExceptionsAsSlimErrorCellWithStackTracesInCode": 97,
      "smartrics.rest.fitnesse.fixture.SlimFormatterTest#shouldRenderLinksAsGreyed": 98,
      "smartrics.rest.fitnesse.fixture.SlimFormatterTest#shouldRenderLinksAsGreyedInAbsoluteFormat": 99,
      "smartrics.rest.fitnesse.fixture.support.BodyTypeAdapterFactoryTest#jsonContentTypeReturnsJSONBodyTypeAdapter": 100,
      "smartrics.rest.fitnesse.fixture.support.BodyTypeAdapterFactoryTest#nullContentTypeThrowsException": 101,
      "smartrics.rest.fitnesse.fixture.support.BodyTypeAdapterFactoryTest#textContentTypeReturnsXPathBodyTypeAdapter": 102,
      "smartrics.rest.fitnesse.fixture.support.BodyTypeAdapterFactoryTest#unknownContentTypeReturnsXPathBodyTypeAdapter": 103,
      "smartrics.rest.fitnesse.fixture.support.BodyTypeAdapterFactoryTest#xmlContentTypeReturnsXPathBodyTypeAdapter": 104,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustAddConfigDataToANamedConfig": 105,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustAddConfigDataToDefaultConfigIfConfigNameIsNull": 106,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustAddToDefaultNamedConfigWhenConfigNameIsNotAvailable": 107,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustClearDefaultConfig": 108,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustClearDefaultNamedConfigIfConfigNameIsNull": 109,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustClearNamedConfig": 110,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustContainAtLeastNameInStringRepresentation": 111,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustGetDataParsedAsBoolean": 112,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustGetDataParsedAsInteger": 113,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustGetDataParsedAsLong": 114,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustGetDataParsedAsMap": 115,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustInitializeNameOfConfigFromCtorInput": 116,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustInitializeNameToDefaultIfGetterArgIsNull": 117,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustReturnDefaultForRequestsOnExistentNamedConfigsWithNonExistentKey": 118,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustReturnNullForRequestsOnDefaultNamedConfigsWithNonExistentKey": 119,
      "smartrics.rest.fitnesse.fixture.support.ConfigTest#mustReturnNullForRequestsOnExistentNamedConfigsWithNonExistentKey": 120,
      "smartrics.rest.fitnesse.fixture.support.ContentTypeTest#shouldReturnCorrectTypeAndCharsetGivenApplicationTextWithCharset": 121,
      "smartrics.rest.fitnesse.fixture.support.ContentTypeTest#shouldReturnCorrectTypeGivenApplicationJson": 122,
      "smartrics.rest.fitnesse.fixture.support.ContentTypeTest#shouldReturnCorrectTypeGivenApplicationText": 123,
      "smartrics.rest.fitnesse.fixture.support.ContentTypeTest#shouldReturnCorrectTypeGivenApplicationXml": 124,
      "smartrics.rest.fitnesse.fixture.support.ContentTypeTest#shouldReturnDefaultGivenAnythingElse": 125,
      "smartrics.rest.fitnesse.fixture.support.ContentTypeTest#shouldReturnDefaultGivenEmptyHeaders": 126,
      "smartrics.rest.fitnesse.fixture.support.ContentTypeTest#shouldSetupInternalStateFromConfig": 127,
      "smartrics.rest.fitnesse.fixture.support.ContentTypeTest#shouldSetupTheContentTypeToAdaptersMapViaConfig": 128,
      "smartrics.rest.fitnesse.fixture.support.ContentTypeTest#shouldUseDefaultSystemCharsetIfCharsetNotParseableAndDefaultNotSpecifiedViaProperty": 129,
      "smartrics.rest.fitnesse.fixture.support.ContentTypeTest#shouldUseSpecifieDefaultCharsetProperty": 130,
      "smartrics.rest.fitnesse.fixture.support.FitCellTest#shouldBeAbleToOverrideTheContent": 131,
      "smartrics.rest.fitnesse.fixture.support.FitCellTest#testAddBodyAppendsContentToExisting": 132,
      "smartrics.rest.fitnesse.fixture.support.FitCellTest#testConstruction": 133,
      "smartrics.rest.fitnesse.fixture.support.FitCellTest#textAndBodyAreEquivalent": 134,
      "smartrics.rest.fitnesse.fixture.support.FitCellTest#wrappedObjectIsTheStringUsedForConstruction": 135,
      "smartrics.rest.fitnesse.fixture.support.HeadersTypeAdapterTest#actualHeadersMustBeASupersetOfExpectedHeaders": 136,
      "smartrics.rest.fitnesse.fixture.support.HeadersTypeAdapterTest#actualHeadersShouldntBeASupersetOfExpectedHeaders": 137,
      "smartrics.rest.fitnesse.fixture.support.HeadersTypeAdapterTest#shouldIdentifyContentObjectsWithNoBodyAsBeingEqual": 138,
      "smartrics.rest.fitnesse.fixture.support.HeadersTypeAdapterTest#shouldMatchHeadersWithRegex": 139,
      "smartrics.rest.fitnesse.fixture.support.HeadersTypeAdapterTest#shouldNotifyClientOfBadHeaderSyntax": 140,
      "smartrics.rest.fitnesse.fixture.support.HeadersTypeAdapterTest#shouldParseHeadersInHtmlFormatAsProperListOfHeaders": 141,
      "smartrics.rest.fitnesse.fixture.support.HeadersTypeAdapterTest#shouldParseHeadersInHtmlFormatWithMultipleColonsAsProperListOfHeaders": 142,
      "smartrics.rest.fitnesse.fixture.support.HeadersTypeAdapterTest#shouldParseHeadersInHtmlFormatWithQuestionMarksAndEqualsInString_ISSUE_129": 143,
      "smartrics.rest.fitnesse.fixture.support.HeadersTypeAdapterTest#shouldTransformACollectionOfHeadersIntoAHtmlString": 144,
      "smartrics.rest.fitnesse.fixture.support.HttpClientBuilderTest#mustNotSetCredentialsIfBothConfigValueAreNotAvailable": 145,
      "smartrics.rest.fitnesse.fixture.support.HttpClientBuilderTest#mustSetDefaultProxyPortIfNotSuppliedWithProxyHost": 146,
      "smartrics.rest.fitnesse.fixture.support.HttpClientBuilderTest#mustSetDefaultsForNotSuppliedConfigValues": 147,
      "smartrics.rest.fitnesse.fixture.support.HttpClientBuilderTest#mustSetValuesAsOfThoseSuppliedInConfig": 148,
      "smartrics.rest.fitnesse.fixture.support.JSONBodyTypeAdapterTest#returnsFalseWhenJsonbodyDoesntHaveAnArrayButExpressionDoesContainArray": 149,
      "smartrics.rest.fitnesse.fixture.support.JSONBodyTypeAdapterTest#shoudlParseNoJsonIntoAnEmptyList": 150,
      "smartrics.rest.fitnesse.fixture.support.JSONBodyTypeAdapterTest#shoudlParseStringWithXPathInHtmlIntoAProperList": 151,
      "smartrics.rest.fitnesse.fixture.support.JSONBodyTypeAdapterTest#shouldConvertJSONToXML": 152,
      "smartrics.rest.fitnesse.fixture.support.JSONBodyTypeAdapterTest#shouldCorrectlyEvaluateExpressionsWithComparisons": 153,
      "smartrics.rest.fitnesse.fixture.support.JSONBodyTypeAdapterTest#shouldIdentifyAsEqualsIfExpectedObjectIsAJavascriptExpressionInActual": 154,
      "smartrics.rest.fitnesse.fixture.support.JSONBodyTypeAdapterTest#shouldIdentifyContentObjectsWithNoBodyAsBeingEqual": 155,
      "smartrics.rest.fitnesse.fixture.support.JSONBodyTypeAdapterTest#shouldReturnItsStringRepresentationAsPrintableHTML": 156,
      "smartrics.rest.fitnesse.fixture.support.JSONBodyTypeAdapterTest#shouldReturnItsStringRepresentationAsPrintableHTMLEvenWhenEmpty": 157,
      "smartrics.rest.fitnesse.fixture.support.JSONBodyTypeAdapterTest#shouldStoreNotFoundMessageForEveryJSonExpressionNotFoundForEqualityCheck": 158,
      "smartrics.rest.fitnesse.fixture.support.JSONBodyTypeAdapterTest#shouldThrowExceptionIfExpectationsAreValidXPathExpression": 159,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#removeOptimisationIfExpressionLargerThanThreshold": 160,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#removeOptimisationIfResponseLargerThanThreshold": 161,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldEvalExpressionsForLargeContentJson": 162,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldHandleNullReturnedByJsEvaluation": 163,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldHandleNullReturnedByStringJsEvaluation": 164,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldNotProvideLastResponseBodyInJsContextIfResponseIsNull": 165,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldProvideLastResponseBodyAsJsonForContentThatLooksLikeJsonInJsContext": 166,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldProvideLastResponseBodyAsJsonForJsonContentTypeInJsContext": 167,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldProvideLastResponseBodyInJsContext": 168,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldProvideLastResponseHeadersInJsContext": 169,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldProvideLastResponseResourceInJsContext": 170,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldProvideLastResponseStatusCodeInJsContext": 171,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldProvideLastResponseStatusTextInJsContext": 172,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldProvideLastResponseTxIdInJsContext": 173,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldProvideSymbolMapInJsContext": 174,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldSetTheThresholdLimitTo0IfNegative": 175,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldSetTheThresholdLimitTo64KIfInvalid": 176,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldSetTheThresholdLimitToTheConfiguredValue": 177,
      "smartrics.rest.fitnesse.fixture.support.JavascriptWrapperTest#shouldTrapJavascriptErrorAndWrapThemInErrors": 178,
      "smartrics.rest.fitnesse.fixture.support.LetBodyHandlerTest#shouldExecXPaths": 179,
      "smartrics.rest.fitnesse.fixture.support.LetBodyHandlerTest#shouldHandleExpressionsReturningNull": 180,
      "smartrics.rest.fitnesse.fixture.support.LetBodyHandlerTest#shouldHandleJsBodyWithXPaths": 181,
      "smartrics.rest.fitnesse.fixture.support.LetBodyJsHandlerTest#shouldHandleExpressionsReturningNull": 182,
      "smartrics.rest.fitnesse.fixture.support.RestDataTypeAdapterTest#fromRawStringDelegatesToParse": 183,
      "smartrics.rest.fitnesse.fixture.support.RestDataTypeAdapterTest#fromRawStringMapsCheckedExceptionsOfParseIntoRuntimeException": 184,
      "smartrics.rest.fitnesse.fixture.support.RestDataTypeAdapterTest#mustAllowStoringOfErrors": 185,
      "smartrics.rest.fitnesse.fixture.support.RestDataTypeAdapterTest#mustAllowStoringOfTheInstanceOfTheCellContent": 186,
      "smartrics.rest.fitnesse.fixture.support.RestDataTypeAdapterTest#mustDisallowAddToTheErrorsList": 187,
      "smartrics.rest.fitnesse.fixture.support.RestDataTypeAdapterTest#mustDisallowOpsOnTheErrorsList": 188,
      "smartrics.rest.fitnesse.fixture.support.RestDataTypeAdapterTest#mustDisallowRemoveFromTheErrorsList": 189,
      "smartrics.rest.fitnesse.fixture.support.RestDataTypeAdapterTest#mustReturnStringRepresentationOfTheCellContent": 190,
      "smartrics.rest.fitnesse.fixture.support.SlimCellTest#shouldBeAbleToOverrideTheContent": 191,
      "smartrics.rest.fitnesse.fixture.support.SlimCellTest#testAddBodyAppendsContentToExisting": 192,
      "smartrics.rest.fitnesse.fixture.support.SlimCellTest#testConstruction": 193,
      "smartrics.rest.fitnesse.fixture.support.SlimCellTest#textAndBodyAreEquivalent": 194,
      "smartrics.rest.fitnesse.fixture.support.SlimCellTest#wrappedObjectIsTheStringUsedForConstruction": 195,
      "smartrics.rest.fitnesse.fixture.support.SlimVariablesTest#setSymbolsAreReturned": 196,
      "smartrics.rest.fitnesse.fixture.support.SlimVariablesTest#setToNullAssignsNull": 197,
      "smartrics.rest.fitnesse.fixture.support.SlimVariablesTest#setToNullRepresentationAssignsNull": 198,
      "smartrics.rest.fitnesse.fixture.support.SlimVariablesTest#symbolsCanBeSet": 199,
      "smartrics.rest.fitnesse.fixture.support.SlimVariablesTest#unsetSymbolsReturnNull": 200,
      "smartrics.rest.fitnesse.fixture.support.StatusCodeTypeAdapterTest#expectedShouldBeTreatedAsRegularExpression": 201,
      "smartrics.rest.fitnesse.fixture.support.StatusCodeTypeAdapterTest#shouldNotEqualiseIfExpectedOrActualAreNull": 202,
      "smartrics.rest.fitnesse.fixture.support.StatusCodeTypeAdapterTest#shouldParseStatusCodesAsTrimmedStrings": 203,
      "smartrics.rest.fitnesse.fixture.support.StatusCodeTypeAdapterTest#shouldRenderCellContentAsStrings": 204,
      "smartrics.rest.fitnesse.fixture.support.StatusCodeTypeAdapterTest#whenExpectedIsNotMatchedAnErrorShouldBeAdded": 205,
      "smartrics.rest.fitnesse.fixture.support.StringTypeAdapterTest#shouldConvertAnyString": 206,
      "smartrics.rest.fitnesse.fixture.support.StringTypeAdapterTest#shouldConvertEmptyString": 207,
      "smartrics.rest.fitnesse.fixture.support.StringTypeAdapterTest#shouldConvertNullString": 208,
      "smartrics.rest.fitnesse.fixture.support.StringTypeAdapterTest#shouldEqualsTwoEqualStrings": 209,
      "smartrics.rest.fitnesse.fixture.support.StringTypeAdapterTest#shouldEqualsTwoNullStrings": 210,
      "smartrics.rest.fitnesse.fixture.support.StringTypeAdapterTest#shouldParseAnyString": 211,
      "smartrics.rest.fitnesse.fixture.support.StringTypeAdapterTest#shouldParseEmptyString": 212,
      "smartrics.rest.fitnesse.fixture.support.StringTypeAdapterTest#shouldParseNullString": 213,
      "smartrics.rest.fitnesse.fixture.support.TextBodyTypeAdapterTest#shouldConvertTextToXmlUsingTextTag": 214,
      "smartrics.rest.fitnesse.fixture.support.TextBodyTypeAdapterTest#shouldEqualiseIfBothHaveCRLF": 215,
      "smartrics.rest.fitnesse.fixture.support.TextBodyTypeAdapterTest#shouldMatchRegexExpressions": 216,
      "smartrics.rest.fitnesse.fixture.support.TextBodyTypeAdapterTest#shouldNotEqualiseIfExpectedOrActualAreNull": 217,
      "smartrics.rest.fitnesse.fixture.support.TextBodyTypeAdapterTest#shouldNotEqualiseIfOneHasCRLF": 218,
      "smartrics.rest.fitnesse.fixture.support.TextBodyTypeAdapterTest#shouldParseTextAsTrimmedStrings": 219,
      "smartrics.rest.fitnesse.fixture.support.TextBodyTypeAdapterTest#shouldRenderCellContentAsStrings": 220,
      "smartrics.rest.fitnesse.fixture.support.TextBodyTypeAdapterTest#whenExpectedIsNotMatchedAnErrorShouldBeAdded": 221,
      "smartrics.rest.fitnesse.fixture.support.TextBodyTypeAdapterTest#whenExpectedIsNotMatchedAnErrorShouldBeAddedAlsoForPlainStringMatching": 222,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#basicChecksOnMakeCollapsableItemWhenHtml": 223,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#basicChecksOnMakeCollapsableItemWhenPlain": 224,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#codeCoversionUsesCodeHtmlTag": 225,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#dualityOfToAndFromHtml": 226,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#mustMatchWhenRegexIsValidAndThereIsAMatch": 227,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#mustNotMatchWhenRegexIsInvalidAndNotifyError": 228,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#mustNotMatchWhenRegexIsValidAndThereIsNotAMatch": 229,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldCheckIfAStringIsValidJson": 230,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldConvertAMapIntoAStringRepresentation": 231,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldConvertAMultilineStringIntoAMap": 232,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldConvertAMultilineStringIntoAMapIgnoresEmptyLines": 233,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldConvertAMultilineStringIntoAMapWhenEscapeSequenceIsNested": 234,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldConvertAStringIntoAMap": 235,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldConvertAStringIntoAMapAndCleanHtmlTagsFromValues": 236,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldConvertJsonToXml": 237,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldExtractTextFromSimpleTag": 238,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldExtractXPathsFromXmlDocumentAsBoolean": 239,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldExtractXPathsFromXmlDocumentAsNodeLists": 240,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldExtractXPathsFromXmlDocumentAsNodelistWithGenericNamespace": 241,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldExtractXPathsFromXmlDocumentAsNumber": 242,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldExtractXPathsFromXmlDocumentAsNumberWithDefaultNamespace": 243,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldExtractXPathsFromXmlDocumentAsNumberWithDefaultNamespace2": 244,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldExtractXPathsFromXmlDocumentAsNumberWithGenericNamespace": 245,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldExtractXPathsFromXmlDocumentAsStrings": 246,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldExtractXPathsFromXmlDocumentWithNestedGenericNamespace": 247,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldNotifyCallerWhenXPathIsWrong": 248,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldNotifyCallerWhenXmlCannotBeParsed": 249,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldNotifyCallerWhenXmlIsWrong": 250,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldReadAnInputStreamToAString": 251,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldThrowRTEWhenWrappingAStringIntoAnInputStreamWithUnknownEncoding": 252,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldThrowRTEWrappingInputStreamExceptionsWhenReadingInputStreamToAString": 253,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldThrowWhenReadingInputStreamToAStringWhenTryingToEncodeWithUnknownEncoding": 254,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldWrapAStringIntoAnInputStream": 255,
      "smartrics.rest.fitnesse.fixture.support.ToolsTest#shouldWrapTextInHtmlAnchor": 256,
      "smartrics.rest.fitnesse.fixture.support.UrlTest#mustAcceptWellFormedUrl": 257,
      "smartrics.rest.fitnesse.fixture.support.UrlTest#mustBuildUrlTailingPathToBaseUrl": 258,
      "smartrics.rest.fitnesse.fixture.support.UrlTest#mustExtractPartsIfUrlIsComplete": 259,
      "smartrics.rest.fitnesse.fixture.support.UrlTest#mustExtractPartsIfUrlIsCompleteWithNoPathTerminatingWithSlash": 260,
      "smartrics.rest.fitnesse.fixture.support.UrlTest#mustExtractPartsIfUrlIsCompleteWithNoPathTerminatingWithoutSlash": 261,
      "smartrics.rest.fitnesse.fixture.support.UrlTest#mustRejectEmptyStringUriRepresentations": 262,
      "smartrics.rest.fitnesse.fixture.support.UrlTest#mustRejectMalformedUrls": 263,
      "smartrics.rest.fitnesse.fixture.support.UrlTest#mustRejectNullPaths": 264,
      "smartrics.rest.fitnesse.fixture.support.UrlTest#mustRejectNullStringUriRepresentations": 265,
      "smartrics.rest.fitnesse.fixture.support.UrlTest#mustRejectUrlsWithNoHost": 266,
      "smartrics.rest.fitnesse.fixture.support.UrlTest#tailingSlashOnAUrlIsOptional": 267,
      "smartrics.rest.fitnesse.fixture.support.VariablesTest#nonExistentVariablesAreNotReplaced": 268,
      "smartrics.rest.fitnesse.fixture.support.VariablesTest#substitutingSymbolsContainingRegexSpecialCharsShouldWorkAsExpected_issue118": 269,
      "smartrics.rest.fitnesse.fixture.support.VariablesTest#variablesAreSubstitutedMultipleTimes": 270,
      "smartrics.rest.fitnesse.fixture.support.VariablesTest#variablesAreSubstitutedWithCurrentValueWhenHexLabelsAreIdentifiedWithinPercentSymbol": 271,
      "smartrics.rest.fitnesse.fixture.support.VariablesTest#variablesAreSubstitutedWithCurrentValueWhenLabelsAreIdentifiedWithinPercentSymbol": 272,
      "smartrics.rest.fitnesse.fixture.support.VariablesTest#variablesContainingNullAreSubWithEmptyValueSuppliedViaConfig": 273,
      "smartrics.rest.fitnesse.fixture.support.VariablesTest#variablesContainingNullAreSubWithStringNullByDefault": 274,
      "smartrics.rest.fitnesse.fixture.support.VariablesTest#variablesContainingNullAreSubWithValueSuppliedViaConfig": 275,
      "smartrics.rest.fitnesse.fixture.support.VariablesTest#variablesShoudBeStatic": 276,
      "smartrics.rest.fitnesse.fixture.support.XPathBodyTypeAdapterTest#shoudlParseNoXPathsIntoAnEmptyList": 277,
      "smartrics.rest.fitnesse.fixture.support.XPathBodyTypeAdapterTest#shoudlParseStringWithXPathInHtmlIntoAProperList": 278,
      "smartrics.rest.fitnesse.fixture.support.XPathBodyTypeAdapterTest#shouldFailEqualityCheckIfAnyExpressionIsInvalid": 279,
      "smartrics.rest.fitnesse.fixture.support.XPathBodyTypeAdapterTest#shouldIdentifyAsEqualsIfExpectedObjectIsAListOfXPathsAvailableInActual": 280,
      "smartrics.rest.fitnesse.fixture.support.XPathBodyTypeAdapterTest#shouldIdentifyContentObjectsWithNoBodyAsBeingEqual": 281,
      "smartrics.rest.fitnesse.fixture.support.XPathBodyTypeAdapterTest#shouldMatchXPathWithNamespaces": 282,
      "smartrics.rest.fitnesse.fixture.support.XPathBodyTypeAdapterTest#shouldReturnItsStringRepresentationAsPrintableHTML": 283,
      "smartrics.rest.fitnesse.fixture.support.XPathBodyTypeAdapterTest#shouldReturnItsStringRepresentationAsPrintableHTMLEvenWhenEmpty": 284,
      "smartrics.rest.fitnesse.fixture.support.XPathBodyTypeAdapterTest#shouldStoreNotFoundMessageForEveryExpressionNotFoundForEqualityCheck": 285,
      "smartrics.rest.fitnesse.fixture.support.http.DeleteMethodTest#buildsUriThatAllowSquareBracketsInQueryString": 286,
      "smartrics.rest.fitnesse.fixture.support.http.GetMethodTest#buildsUriThatAllowSquareBracketsInQueryString": 287,
      "smartrics.rest.fitnesse.fixture.support.http.PostMethodTest#buildsUriThatAllowSquareBracketsInQueryString": 288,
      "smartrics.rest.fitnesse.fixture.support.http.PutMethodTest#buildsUriThatAllowSquareBracketsInQueryString": 289
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            59, 81, 71, 64, 37, 44, 83, 39, 36, 82, 56, 49, 55, 62, 57, 47, 45,
            48, 86, 50, 51, 52, 53, 54, 63, 58, 84, 85, 65, 66, 27, 67, 25, 26,
            24, 30, 46, 69, 61, 88, 89, 77, 60, 70, 38, 40, 41, 42, 43, 34, 35,
            31, 32, 78, 79, 80, 75, 33, 72, 73, 74, 76, 68, 87, 181, 169, 166,
            178, 179, 162, 168, 170, 171, 172, 173, 167, 182, 154, 174, 158,
            149, 153, 23, 128, 159, 127, 163, 165, 12, 13, 14, 15, 16, 17, 180,
            129, 282, 130, 285, 280, 273, 275, 100, 90, 268, 274, 279, 28, 29,
            269, 270, 271, 272, 151, 155, 115, 150, 22, 152, 160, 161, 96, 148,
            175, 21, 145, 146, 147, 164, 95, 103, 176, 177, 91, 94, 237, 102,
            104, 156, 157, 10, 20, 276, 11, 243, 244, 245, 247, 7, 236, 19, 233,
            4, 5, 18, 232, 234, 241, 101, 235, 240, 286, 287, 288, 289, 196,
            200, 239, 242, 246, 197, 198, 199, 248, 6, 137, 3, 112, 259, 118,
            250, 99, 113, 114, 125, 136, 260, 92, 139, 261, 117, 249, 281, 111,
            97, 121, 278, 105, 106, 107, 108, 109, 110, 116, 119, 120, 122, 123,
            124, 205, 218, 221, 255, 9, 126, 222, 0, 98, 201, 215, 216, 251,
            267, 277, 93, 140, 141, 142, 143, 257, 264, 253, 258, 1, 231, 266,
            204, 209, 223, 224, 8, 263, 210, 219, 220, 254, 2, 134, 131, 132,
            144, 190, 191, 192, 194, 203, 206, 207, 211, 212, 217, 230, 252,
            283, 284, 226, 227, 229, 262, 265, 133, 135, 138, 184, 185, 186,
            188, 189, 193, 195, 202, 208, 213, 214, 228, 183, 187, 225, 238, 256
          ]
        ],
        "APSC_c": 0.7205779207548353
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            59, 71, 64, 44, 39, 36, 56, 55, 57, 47, 48, 51, 53, 63, 84, 65, 27,
            26, 30, 46, 61, 88, 89, 60, 70, 41, 42, 35, 32, 79, 80, 33, 72, 74,
            68, 169, 178, 162, 173, 182, 174, 149, 128, 159, 163, 12, 14, 16,
            180, 129, 282, 280, 28, 29, 269, 270, 271, 272, 151, 115, 152, 161,
            175, 21, 146, 147, 176, 91, 237, 244, 247, 236, 19, 4, 18, 232, 241,
            286, 288, 196, 200, 239, 246, 199, 6, 137, 112, 259, 250, 260, 139,
            117, 281, 111, 97, 105, 107, 109, 116, 120, 123, 205, 255, 126, 98,
            201, 251, 277, 140, 141, 143, 264, 258, 1, 231, 266, 204, 209, 223,
            224, 8, 263, 210, 220, 2, 134, 131, 132, 144, 190, 191, 192, 194,
            203, 206, 207, 211, 212, 230, 283, 226, 229, 133, 138, 184, 187,
            225, 238, 256
          ],
          [
            81, 37, 83, 82, 49, 62, 45, 86, 50, 52, 54, 58, 85, 66, 67, 25, 24,
            69, 77, 38, 40, 43, 34, 31, 78, 75, 73, 76, 87, 181, 166, 179, 168,
            170, 171, 172, 167, 154, 158, 153, 23, 127, 165, 13, 15, 17, 130,
            285, 273, 275, 100, 90, 268, 274, 279, 155, 150, 22, 160, 96, 148,
            145, 164, 95, 103, 177, 94, 102, 104, 156, 157, 10, 20, 276, 11,
            243, 245, 7, 233, 5, 234, 101, 235, 240, 287, 289, 242, 197, 198,
            248, 3, 118, 99, 113, 114, 125, 136, 92, 261, 249, 121, 278, 106,
            108, 110, 119, 122, 124, 218, 221, 9, 222, 0, 215, 216, 267, 93,
            142, 257, 253, 219, 254, 217, 252, 284, 227, 262, 265, 135, 185,
            186, 188, 189, 193, 195, 202, 208, 213, 214, 228, 183
          ]
        ],
        "APSC_c": 0.8600669547635824
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            59, 37, 39, 56, 57, 48, 51, 63, 66, 26, 61, 88, 77, 38, 41, 42, 35,
            32, 79, 80, 33, 72, 76, 169, 171, 172, 182, 149, 23, 165, 273, 275,
            100, 274, 279, 161, 147, 94, 157, 276, 243, 247, 101, 240, 196, 242,
            199, 3, 99, 260, 261, 249, 108, 116, 123, 221, 126, 215, 216, 93,
            253, 283, 226, 262, 135, 185, 188, 195, 208, 187, 225, 256
          ],
          [
            81, 55, 45, 50, 54, 65, 25, 69, 178, 162, 13, 15, 17, 130, 280, 160,
            21, 146, 176, 237, 7, 5, 241, 288, 246, 248, 136, 139, 281, 97, 119,
            124, 9, 0, 277, 140, 143, 1, 209, 8, 219, 254, 193, 213, 183
          ],
          [
            71, 44, 36, 49, 47, 52, 84, 27, 30, 46, 74, 87, 166, 170, 167, 174,
            153, 159, 163, 285, 268, 28, 269, 270, 272, 155, 150, 22, 96, 175,
            145, 103, 177, 102, 104, 10, 11, 245, 19, 4, 234, 235, 287, 200,
            239, 197, 6, 118, 113, 114, 125, 92, 117, 121, 105, 106, 109, 120,
            218, 255, 201, 251, 142, 264, 231, 204, 224, 263, 220, 134, 132,
            190, 192, 203, 206, 211, 217, 252, 229, 133, 184
          ],
          [
            64, 83, 82, 62, 86, 53, 58, 85, 67, 24, 89, 60, 70, 40, 43, 34, 31,
            78, 75, 73, 68, 181, 179, 168, 173, 154, 158, 128, 127, 12, 14, 16,
            180, 129, 282, 90, 29, 271, 151, 115, 152, 148, 164, 95, 91, 156,
            20, 244, 236, 233, 18, 232, 286, 289, 198, 137, 112, 259, 250, 111,
            278, 107, 110, 122, 205, 222, 98, 267, 141, 257, 258, 266, 223, 210,
            2, 131, 144, 191, 194, 207, 212, 230, 284, 227, 265, 138, 186, 189,
            202, 214, 228, 238
          ]
        ],
        "APSC_c": 0.9298800858770954
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            59, 82, 48, 54, 25, 38, 34, 78, 68, 162, 200, 246, 260, 111, 105,
            108, 119, 255, 277, 141, 204, 223, 131, 203, 212, 227, 138, 188,
            208, 225
          ],
          [
            81, 61, 89, 60, 43, 79, 74, 169, 182, 23, 159, 165, 164, 103, 91,
            243, 18, 235, 196, 239, 259, 113, 125, 261, 97, 222, 216, 142, 231,
            263, 2, 191, 211, 226, 135, 193, 228, 256
          ],
          [
            71, 49, 86, 52, 67, 69, 172, 149, 15, 129, 280, 96, 146, 156, 20, 7,
            233, 5, 289, 112, 250, 124, 0, 253
          ],
          [
            64, 55, 50, 63, 26, 42, 80, 73, 181, 171, 174, 12, 17, 90, 279, 148,
            176, 177, 102, 10, 245, 101, 240, 248, 117, 107, 110, 123, 126, 251,
            257, 258, 224, 132, 206, 252, 184
          ],
          [
            37, 56, 45, 53, 65, 30, 88, 70, 35, 72, 178, 173, 153, 16, 130, 273,
            275, 100, 268, 28, 270, 151, 150, 152, 145, 104, 11, 236, 19, 4,
            232, 287, 197, 6, 136, 281, 278, 120, 218, 98, 264, 209, 220, 134,
            192, 217, 283, 229, 185, 195, 213, 238
          ],
          [
            44, 62, 58, 66, 46, 168, 154, 127, 13, 282, 274, 269, 272, 115, 160,
            147, 157, 276, 244, 234, 286, 199, 3, 92, 106, 116, 9, 215, 93, 210,
            190, 207, 284, 262, 133, 189, 214, 187
          ],
          [
            83, 47, 85, 24, 41, 32, 75, 87, 179, 170, 158, 14, 180, 285, 29,
            271, 155, 22, 161, 237, 288, 198, 137, 118, 99, 249, 221, 201, 143,
            1, 219, 254
          ],
          [
            39, 36, 57, 51, 84, 27, 77, 40, 31, 33, 76, 166, 167, 128, 163, 175,
            21, 95, 94, 247, 241, 242, 114, 139, 121, 109, 122, 205, 267, 140,
            266, 8, 144, 194, 230, 265, 186, 202, 183
          ]
        ],
        "APSC_c": 0.9650771220883085
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            59, 85, 89, 79, 68, 172, 17, 151, 160, 157, 20, 233, 101, 240, 117,
            107, 124, 251, 266, 131, 217, 265, 189
          ],
          [
            81, 154, 180, 130, 90, 148, 156, 276, 7, 286, 114, 139, 108, 205,
            141, 219, 144, 230, 213
          ],
          [71, 25, 168, 14, 280, 287, 250, 231, 134, 203, 226, 228],
          [
            64, 26, 182, 129, 285, 176, 94, 4, 289, 221, 267, 258, 2, 192, 229,
            214
          ],
          [
            37, 27, 74, 170, 16, 273, 274, 269, 155, 161, 5, 196, 198, 259, 125,
            261, 105, 110, 255, 257, 224, 206, 138, 195, 256
          ],
          [44, 46, 149, 100, 175, 146, 245, 248, 120, 126, 93, 211, 184],
          [83, 77, 31, 76, 171, 128, 165, 6, 249, 142, 263, 194, 262, 188, 238],
          [
            39, 53, 24, 167, 28, 271, 150, 21, 164, 177, 237, 112, 99, 111, 109,
            218, 216, 1, 132, 283, 133, 193
          ],
          [
            36, 86, 54, 70, 32, 72, 173, 15, 268, 270, 115, 145, 11, 18, 241,
            137, 136, 97, 264, 220, 190, 284, 135, 202
          ],
          [
            82, 52, 30, 42, 80, 181, 158, 96, 103, 102, 243, 242, 123, 215, 143,
            8, 212, 186, 225
          ],
          [
            56, 48, 66, 88, 75, 179, 174, 275, 29, 272, 22, 147, 236, 234, 288,
            113, 92, 116, 201, 204, 254
          ],
          [49, 51, 67, 38, 43, 73, 162],
          [
            55, 50, 65, 60, 34, 33, 87, 178, 153, 152, 104, 244, 246, 122, 222,
            277, 253
          ],
          [
            62, 63, 40, 78, 166, 159, 12, 282, 95, 10, 247, 197, 3, 121, 119,
            98, 209, 191, 227, 208
          ],
          [
            57, 45, 58, 69, 23, 127, 13, 279, 91, 19, 232, 235, 200, 199, 118,
            260, 281, 106, 9, 140, 210, 252, 187
          ],
          [47, 84, 61, 41, 35, 169, 163, 239, 278, 0, 223, 207, 185, 183]
        ],
        "APSC_c": 0.9832883969836028
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            81, 39, 56, 62, 45, 51, 54, 84, 66, 67, 26, 69, 80, 33, 73, 68, 169,
            179, 168, 170, 172, 182, 149, 23, 163, 16, 180, 130, 285, 273, 100,
            28, 29, 269, 272, 115, 152, 96, 175, 21, 146, 103, 91, 102, 104,
            156, 157, 10, 276, 243, 247, 18, 232, 101, 235, 286, 288, 239, 197,
            248, 250, 117, 281, 97, 110, 119, 124, 218, 9, 0, 216, 277, 140,
            142, 253, 2, 134, 132, 192, 206, 212, 252, 229, 135, 185, 186, 188,
            189, 193, 195, 202, 208, 183
          ],
          [
            59, 71, 64, 37, 44, 83, 36, 82, 49, 55, 57, 47, 48, 86, 50, 52, 53,
            63, 58, 85, 65, 27, 25, 24, 30, 46, 61, 88, 89, 77, 60, 70, 38, 40,
            41, 42, 43, 34, 35, 31, 32, 78, 79, 75, 72, 74, 76, 87, 181, 166,
            178, 162, 171, 173, 167, 154, 174, 158, 153, 128, 159, 127, 165, 12,
            13, 14, 15, 17, 129, 282, 280, 275, 90, 268, 274, 279, 270, 271,
            151, 155, 150, 22, 160, 161, 148, 145, 147, 164, 95, 176, 177, 94,
            237, 20, 11, 244, 245, 7, 236, 19, 233, 4, 5, 234, 241, 240, 287,
            289, 196, 200, 242, 246, 198, 199, 6, 137, 3, 112, 259, 118, 99,
            113, 114, 125, 136, 260, 92, 139, 261, 249, 111, 121, 278, 105, 106,
            107, 108, 109, 116, 120, 122, 123, 205, 221, 255, 126, 222, 98, 201,
            215, 251, 267, 93, 141, 143, 257, 264, 258, 1, 231, 266, 204, 209,
            223, 224, 8, 263, 210, 219, 220, 254, 131, 144, 190, 191, 194, 203,
            207, 211, 217, 230, 283, 284, 226, 227, 262, 265, 133, 138, 184,
            213, 214, 228, 187, 225, 238, 256
          ]
        ],
        "APSC_c": 0.9067709305827949
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            81, 49, 47, 53, 58, 66, 67, 26, 69, 166, 168, 171, 167, 149, 165,
            273, 90, 28, 270, 155, 150, 160, 175, 145, 176, 94, 102, 104, 276,
            243, 7, 18, 234, 101, 235, 286, 196, 242, 6, 259, 99, 260, 261, 281,
            97, 122, 205, 126, 98, 277, 140, 257, 258, 1, 231, 266, 223, 210, 2,
            134, 131, 132, 144, 192, 207, 230, 229, 138, 185, 186, 188, 189,
            193, 208, 187, 225, 238, 256
          ],
          [
            59, 71, 64, 37, 44, 83, 39, 36, 82, 56, 55, 62, 57, 45, 48, 86, 50,
            51, 52, 54, 63, 84, 85, 65, 27, 25, 24, 30, 46, 61, 88, 89, 77, 60,
            70, 38, 40, 41, 42, 43, 34, 35, 31, 32, 78, 79, 80, 75, 33, 72, 73,
            74, 76, 68, 87, 181, 169, 178, 179, 162, 170, 172, 173, 182, 154,
            174, 158, 153, 23, 128, 159, 127, 163, 12, 13, 14, 15, 16, 17, 180,
            129, 282, 130, 285, 280, 275, 100, 268, 274, 279, 29, 269, 271, 272,
            151, 115, 22, 152, 161, 96, 148, 21, 146, 147, 164, 95, 103, 177,
            91, 237, 156, 157, 10, 20, 11, 244, 245, 247, 236, 19, 233, 4, 5,
            232, 241, 240, 287, 288, 289, 200, 239, 246, 197, 198, 199, 248,
            137, 3, 112, 118, 250, 113, 114, 125, 136, 92, 139, 117, 249, 111,
            121, 278, 105, 106, 107, 108, 109, 110, 116, 119, 120, 123, 124,
            218, 221, 255, 9, 222, 0, 201, 215, 216, 251, 267, 93, 141, 142,
            143, 264, 253, 204, 209, 224, 8, 263, 219, 220, 254, 190, 191, 194,
            203, 206, 211, 212, 217, 252, 283, 284, 226, 227, 262, 265, 133,
            135, 184, 195, 202, 213, 214, 228, 183
          ]
        ],
        "APSC_c": 0.9300696967724877
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [
            81, 45, 52, 85, 67, 24, 61, 88, 89, 41, 35, 33, 74, 169, 168, 172,
            174, 165, 150, 160, 146, 94, 102, 276, 243, 233, 234, 101, 235, 286,
            242, 137, 250, 105, 108, 119, 218, 9, 201, 93, 258, 1, 266, 224,
            254, 187, 225, 256
          ],
          [
            59, 71, 64, 37, 44, 83, 39, 36, 82, 56, 49, 55, 62, 57, 47, 48, 86,
            50, 51, 53, 54, 63, 58, 84, 65, 66, 27, 25, 26, 30, 46, 69, 77, 60,
            70, 38, 40, 42, 43, 34, 31, 32, 78, 79, 80, 75, 72, 73, 76, 68, 87,
            181, 166, 178, 179, 162, 170, 171, 173, 167, 182, 154, 158, 149,
            153, 23, 128, 159, 127, 163, 12, 13, 14, 15, 16, 17, 180, 129, 282,
            130, 285, 280, 273, 275, 100, 90, 268, 274, 279, 28, 29, 269, 270,
            271, 272, 151, 155, 115, 22, 152, 161, 96, 148, 175, 21, 145, 147,
            164, 95, 103, 176, 177, 91, 237, 104, 156, 157, 10, 20, 11, 244,
            245, 247, 7, 236, 19, 4, 5, 18, 232, 241, 240, 287, 288, 289, 196,
            200, 239, 246, 197, 198, 199, 248, 6, 3, 112, 259, 118, 99, 113,
            114, 125, 136, 260, 92, 139, 261, 117, 249, 281, 111, 97, 121, 278,
            106, 107, 109, 110, 116, 120, 122, 123, 124, 205, 221, 255, 126,
            222, 0, 98, 215, 216, 251, 267, 277, 140, 141, 142, 143, 257, 264,
            253, 231, 204, 209, 223, 8, 263, 210, 219, 220, 2, 134, 131, 132,
            144, 190, 191, 192, 194, 203, 206, 207, 211, 212, 217, 230, 252,
            283, 284, 226, 227, 229, 262, 265, 133, 135, 138, 184, 185, 186,
            188, 189, 193, 195, 202, 208, 213, 214, 228, 183, 238
          ]
        ],
        "APSC_c": 0.9439457627401623
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [37, 67, 70, 76, 168, 17, 146, 18, 288, 0, 220, 194, 227, 228],
          [44, 69, 128, 13, 22, 176, 10, 7, 289, 192, 284, 265, 213],
          [83, 88, 178, 153, 157, 245, 114, 117, 218, 251, 224, 206, 133, 214],
          [39, 53, 30, 34, 68, 179, 167, 199, 249, 266, 132, 230, 183],
          [
            59, 36, 49, 57, 45, 86, 54, 85, 25, 61, 60, 38, 42, 31, 79, 33, 72,
            181, 170, 173, 174, 23, 127, 165, 273, 275, 100, 274, 28, 29, 270,
            272, 155, 150, 152, 175, 145, 91, 156, 276, 243, 236, 232, 241, 196,
            246, 137, 112, 259, 99, 92, 281, 121, 106, 109, 119, 221, 9, 201,
            140, 143, 253, 185, 188, 193, 202, 187, 238
          ],
          [
            81, 50, 63, 66, 26, 77, 40, 35, 78, 73, 87, 169, 172, 154, 158, 12,
            14, 16, 180, 130, 280, 161, 164, 103, 177, 237, 233, 234, 235, 287,
            239, 6, 118, 113, 125, 260, 261, 111, 278, 108, 116, 123, 255, 215,
            267, 141, 257, 258, 204, 8, 219, 2, 131, 190, 203, 211, 212, 283,
            226, 262, 138, 184
          ],
          [
            71, 82, 62, 48, 52, 84, 27, 46, 162, 15, 129, 282, 90, 269, 271,
            151, 115, 160, 21, 147, 102, 104, 11, 247, 4, 101, 240, 242, 3, 250,
            105, 107, 110, 120, 124, 126, 98, 93, 1, 223, 210, 134, 144, 191,
            207, 217, 252, 229, 135, 186, 189, 195, 208, 225
          ],
          [
            64, 56, 55, 47, 51, 58, 65, 24, 89, 41, 43, 32, 80, 75, 74, 166,
            171, 182, 149, 159, 163, 285, 268, 279, 96, 148, 95, 94, 20, 244,
            19, 5, 286, 200, 197, 198, 248, 136, 139, 97, 122, 205, 222, 216,
            277, 142, 264, 231, 209, 263, 254, 256
          ]
        ],
        "APSC_c": 0.986219087448533
      }
    ]
  },
  {
    "filename": "opendatalab-de_geojson-jackson.json",
    "name_to_id": {
      "org.geojson.FeatureTest#itShouldHaveProperties": 0,
      "org.geojson.FeatureTest#itShouldSerializeFeature": 1,
      "org.geojson.LngLatAltTest#should_LngLatAlt_equals_with_additional_elements": 2,
      "org.geojson.LngLatAltTest#should_LngLatAlt_equals_with_additional_elements_and_null": 3,
      "org.geojson.LngLatAltTest#should_LngLatAlt_equals_with_alt": 4,
      "org.geojson.LngLatAltTest#should_LngLatAlt_equals_without_alt": 5,
      "org.geojson.LngLatAltTest#should_LngLatAlt_throw_if_additional_elements_set_with_Nan_alt": 6,
      "org.geojson.LngLatAltTest#should_LngLatAlt_throw_if_additional_elements_set_with_missing_alt": 7,
      "org.geojson.LngLatAltTest#should_LngLatAlt_throw_if_alt_not_specified_in_constructor": 8,
      "org.geojson.LngLatAltTest#should_LngLatAlt_throw_if_alt_set_to_Nan_with_additional_elements": 9,
      "org.geojson.LngLatAltTest#should_LngLatAlt_throw_if_any_additional_elements_constructed_to_Nan": 10,
      "org.geojson.LngLatAltTest#should_LngLatAlt_throw_if_any_additional_elements_constructed_to_Negative_Infinity": 11,
      "org.geojson.LngLatAltTest#should_LngLatAlt_throw_if_any_additional_elements_constructed_to_Positive_Infinity": 12,
      "org.geojson.LngLatAltTest#should_LngLatAlt_throw_if_any_additional_elements_set_to_Nan": 13,
      "org.geojson.LngLatAltTest#should_LngLatAlt_throw_if_any_additional_elements_set_to_Negative_Infinity": 14,
      "org.geojson.LngLatAltTest#should_LngLatAlt_throw_if_any_additional_elements_set_to_Positive_Infinity": 15,
      "org.geojson.LngLatAltTest#should_not_LngLatAlt_equals_with_additional_elements_and_different_size": 16,
      "org.geojson.LngLatAltTest#should_not_LngLatAlt_equals_with_additional_elements_in_different_order": 17,
      "org.geojson.LngLatAltTest#should_not_LngLatAlt_equals_with_alt": 18,
      "org.geojson.LngLatAltTest#should_not_LngLatAlt_equals_without_additional_elements": 19,
      "org.geojson.LngLatAltTest#should_not_LngLatAlt_equals_without_alt": 20,
      "org.geojson.ToStringTest#itShouldToStringCrs": 21,
      "org.geojson.ToStringTest#itShouldToStringFeature": 22,
      "org.geojson.ToStringTest#itShouldToStringFeatureCollection": 23,
      "org.geojson.ToStringTest#itShouldToStringLineString": 24,
      "org.geojson.ToStringTest#itShouldToStringMultiLineString": 25,
      "org.geojson.ToStringTest#itShouldToStringMultiPolygon": 26,
      "org.geojson.ToStringTest#itShouldToStringPoint": 27,
      "org.geojson.ToStringTest#itShouldToStringPointWithAdditionalElements": 28,
      "org.geojson.ToStringTest#itShouldToStringPointWithAdditionalElementsAndIgnoreNulls": 29,
      "org.geojson.ToStringTest#itShouldToStringPolygon": 30,
      "org.geojson.jackson.CrsTest#itShouldParseCrsWithLink": 31,
      "org.geojson.jackson.CrsTest#itShouldSerializeCrsWithLink": 32,
      "org.geojson.jackson.GeometryCollectionTest#itShouldDeserialize": 33,
      "org.geojson.jackson.GeometryCollectionTest#itShouldDeserializeSubtype": 34,
      "org.geojson.jackson.GeometryCollectionTest#itShouldSerialize": 35,
      "org.geojson.jackson.LineStringTest#itShouldDeserializeLineString": 36,
      "org.geojson.jackson.LineStringTest#itShouldSerializeMultiPoint": 37,
      "org.geojson.jackson.LngLatAltDeserializerTest#deserializeMongoLngLatAlt": 38,
      "org.geojson.jackson.LngLatAltSerializerTest#testSerialization": 39,
      "org.geojson.jackson.MultiLineStringTest#itShouldSerialize": 40,
      "org.geojson.jackson.MultiPointTest#itShouldDeserializeMultiPoint": 41,
      "org.geojson.jackson.MultiPointTest#itShouldSerializeMultiPoint": 42,
      "org.geojson.jackson.MultiPoligonTest#itShouldDeserialize": 43,
      "org.geojson.jackson.MultiPoligonTest#itShouldSerialize": 44,
      "org.geojson.jackson.PointTest#itShouldDeserializeAPoint": 45,
      "org.geojson.jackson.PointTest#itShouldDeserializeAPointWithAdditionalAttributes": 46,
      "org.geojson.jackson.PointTest#itShouldDeserializeAPointWithAltitude": 47,
      "org.geojson.jackson.PointTest#itShouldSerializeAPoint": 48,
      "org.geojson.jackson.PointTest#itShouldSerializeAPointWithAdditionalAttributes": 49,
      "org.geojson.jackson.PointTest#itShouldSerializeAPointWithAdditionalAttributesAndNull": 50,
      "org.geojson.jackson.PointTest#itShouldSerializeAPointWithAltitude": 51,
      "org.geojson.jackson.PolygonTest#itShouldDeserialize": 52,
      "org.geojson.jackson.PolygonTest#itShouldFailOnAddInteriorRingWithoutExteriorRing": 53,
      "org.geojson.jackson.PolygonTest#itShouldReplaceExteriorRing": 54,
      "org.geojson.jackson.PolygonTest#itShouldSerialize": 55,
      "org.geojson.jackson.PolygonTest#itShouldSerializeWithHole": 56,
      "org.geojson.jackson.PolygonTest#itShouldSetExteriorRing": 57
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            38, 46, 52, 47, 31, 34, 36, 33, 41, 45, 43, 49, 50, 19, 28, 29, 2,
            3, 16, 17, 44, 35, 56, 51, 26, 37, 9, 55, 40, 42, 24, 48, 8, 25, 30,
            39, 6, 54, 7, 27, 10, 11, 12, 13, 14, 15, 32, 57, 4, 5, 18, 20, 53,
            1, 0, 21, 22, 23
          ]
        ],
        "APSC_c": 0.6531590732087227
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            38, 47, 34, 33, 45, 49, 19, 28, 29, 3, 17, 35, 51, 26, 9, 55, 42,
            24, 8, 25, 30, 39, 4, 18, 53, 0, 21, 22, 23
          ],
          [
            46, 52, 31, 36, 41, 43, 50, 2, 16, 44, 56, 37, 40, 48, 6, 54, 7, 27,
            10, 11, 12, 13, 14, 15, 32, 57, 5, 20, 1
          ]
        ],
        "APSC_c": 0.8293145200545171
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [38, 33, 49, 16, 44, 26, 55, 24, 39],
          [46, 34, 45, 19, 28, 2, 3, 17, 56, 40, 48, 4, 18, 53, 0, 21, 22, 23],
          [52, 36, 41, 50, 51, 9, 42, 8, 30, 7, 10, 11, 13, 15, 57, 5, 20, 1],
          [47, 31, 43, 29, 35, 37, 25, 6, 54, 27, 12, 14, 32]
        ],
        "APSC_c": 0.9127725856697818
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [38, 56, 39],
          [46, 45, 37, 27, 5, 53],
          [52, 50, 26, 42, 10, 14, 18, 21],
          [47, 41, 55, 6, 11, 57, 1],
          [31, 29, 17, 51, 24, 25, 7, 12, 15, 20, 23],
          [34, 19, 28, 2, 3, 16, 44, 48],
          [36, 43, 9, 40, 54, 13, 4, 0, 22],
          [33, 49, 35, 8, 30, 32]
        ],
        "APSC_c": 0.9544864072235203
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [38],
          [46, 40],
          [52, 48],
          [47, 37],
          [31],
          [34, 53],
          [36, 42],
          [33, 24, 7, 10, 15, 20],
          [41, 25, 27, 5, 0, 23],
          [45, 9, 30, 14, 18, 22],
          [43, 55],
          [49, 51],
          [50, 26, 39],
          [19, 2, 16, 44, 8, 6, 12, 32],
          [28, 3, 17, 35, 54, 11, 57, 1],
          [29, 56, 13, 4, 21]
        ],
        "APSC_c": 0.981031566394081
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            46, 47, 34, 45, 50, 35, 26, 9, 55, 24, 48, 6, 54, 7, 27, 10, 11, 12,
            13, 14, 32
          ],
          [
            38, 52, 31, 36, 33, 41, 43, 49, 19, 28, 29, 2, 3, 16, 17, 44, 56,
            51, 37, 40, 42, 8, 25, 30, 39, 15, 57, 4, 5, 18, 20, 53, 1, 0, 21,
            22, 23
          ]
        ],
        "APSC_c": 0.8844051182827102
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            46, 31, 45, 19, 28, 2, 44, 26, 9, 55, 8, 25, 6, 54, 7, 27, 10, 11,
            12, 13, 32
          ],
          [
            38, 52, 47, 34, 36, 33, 41, 43, 49, 50, 29, 3, 16, 17, 35, 56, 51,
            37, 40, 42, 24, 48, 30, 39, 14, 15, 57, 4, 5, 18, 20, 53, 1, 0, 21,
            22, 23
          ]
        ],
        "APSC_c": 0.9133444071261683
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [46, 34, 49, 35, 40, 6, 54, 7, 27, 57, 4, 5, 18, 0, 21, 23],
          [
            38, 52, 47, 31, 36, 33, 41, 45, 43, 50, 19, 28, 29, 2, 3, 16, 17,
            44, 56, 51, 26, 37, 9, 55, 42, 24, 48, 8, 25, 30, 39, 10, 11, 12,
            13, 14, 15, 32, 20, 53, 1, 22
          ]
        ],
        "APSC_c": 0.9299269251362928
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [31],
          [34],
          [36, 24, 12, 5, 22],
          [33, 48],
          [38, 49, 56, 42, 6, 27, 15, 57, 18, 53, 0, 21, 23],
          [46, 45, 50, 51, 40, 54, 7, 11, 14, 4, 20, 1],
          [52, 43, 19, 29, 17, 35, 37, 8, 30, 10, 13, 32],
          [47, 41, 28, 2, 3, 16, 44, 26, 9, 55, 25, 39]
        ],
        "APSC_c": 0.9830086339077103
      }
    ]
  },
  {
    "filename": "skyscreamer_jsonassert.json",
    "name_to_id": {
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#failsWhenAppliedToNonArray": 0,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#failsWhenInnerArraySizeDoesNotMatch": 1,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#failsWhenInnerJSONObjectArrayElementDoesNotMatch": 2,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#failsWhenNotEveryElementOfJSONObjectArrayMatches": 3,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#failsWhenSecondElementOfJSONObjectArrayDoesNotMatch": 4,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#failsWhenThirdElementOfJSONObjectArrayDoesNotMatchInMultiplePlaces": 5,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#failsWhenTwoElementOfSimpleValueArrayDoNotMatch": 6,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#failsWhenTwoElementsOfJSONObjectArrayDoNotMatch": 7,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#jsonObjectMatchesSecondElementOfJSONObjectArray": 8,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#matchesElementPairsStartingFromElement0OfJSONObjectArrayWhenRangeTooLarge": 9,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#matchesElementPairsStartingFromElement1OfJSONObjectArrayWhenRangeTooLarge": 10,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#matchesEveryElementOfJSONObjectArray": 11,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#matchesEveryElementOfJSONObjectArrayWhenRangeTooLarge": 12,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#matchesFirstElementOfArrayOfJSONArrays": 13,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#matchesSecondElementOfJSONObjectArray": 14,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#matchesSizeOfFirstThreeInnerArrays": 15,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#matchesThirdElementOfSimpleValueArray": 16,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#simpleValueMatchesSecondElementOfJSONObjectArray": 17,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#verifyBackgroundAttributesOfEveryArrayElementAlternateBetweenWhiteAndGrey": 18,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#verifyEveryArrayElementWithCustomComparator": 19,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#verifyEveryElementOfArrayIsJSONArrayOfLength3": 20,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#verifyIdAttributeOfFirstArrayElementMatches": 21,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#verifyIdAttributeOfFirstArrayElementMatchesSimplifiedExpectedSyntax": 22,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#verifySecondElementOfArrayIsJSONArrayWhoseFirstElementIs9": 23,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#verifySecondElementOfArrayIsJSONArrayWhoseFirstElementIs9WithEvenMoreSimpliedExpectedString": 24,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#verifySecondElementOfArrayIsJSONArrayWhoseFirstElementIs9WithSimpliedExpectedString": 25,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#verifyTypeAttributeOfEveryArrayElementMatchesRow": 26,
      "org.skyscreamer.jsonassert.ArrayValueMatcherTest#verifyTypeAttributeOfSecondAndThirdElementMatchesRow": 27,
      "org.skyscreamer.jsonassert.DependencyTest#nop": 28,
      "org.skyscreamer.jsonassert.JSONArrayWithNullTest#testJSONArrayWithNullValue": 29,
      "org.skyscreamer.jsonassert.JSONArrayWithNullTest#testJSONArrayWithNullValueAndJsonObject": 30,
      "org.skyscreamer.jsonassert.JSONAssertTest#testArray": 31,
      "org.skyscreamer.jsonassert.JSONAssertTest#testArrayOfArrays": 32,
      "org.skyscreamer.jsonassert.JSONAssertTest#testArrayOfArraysStrict": 33,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsJSONArray2BooleanWithMessage": 34,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsJSONArray2JSONCompareWithMessage": 35,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsJSONObject2Boolean": 36,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsJSONObject2JSONCompare": 37,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsString": 38,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsString2Boolean": 39,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsString2JSONCompare": 40,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsString2JsonComparator": 41,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsStringJSONArrayBooleanWithMessage": 42,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsStringJSONArrayCompareModeWithMessage": 43,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsStringJSONObjectBoolean": 44,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertEqualsStringJSONObjectJSONCompare": 45,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsJSONArray": 46,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsJSONArray2BooleanWithMessage": 47,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsJSONArray2JSONCompareWithMessage": 48,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsJSONObject2Boolean": 49,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsString": 50,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsString2Boolean": 51,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsString2JSONCompare": 52,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsString2JsonComparator": 53,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsStringAndJSONObject": 54,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsStringJSONArrayBooleanWithMessage": 55,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsStringJSONArrayCompareModeWithMessage": 56,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsStringJSONObjectBoolean": 57,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsStringJSONObjectJSONCompare": 58,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsWhenDifferentLenient": 59,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsWhenDifferentStrict": 60,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsWhenEqualDiffObjectsLenient": 61,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsWhenEqualDiffObjectsStrict": 62,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsWhenEqualLenient": 63,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNotEqualsWhenEqualStrict": 64,
      "org.skyscreamer.jsonassert.JSONAssertTest#testAssertNtEqualsJSONObject2JSONCompare": 65,
      "org.skyscreamer.jsonassert.JSONAssertTest#testBooleanArray": 66,
      "org.skyscreamer.jsonassert.JSONAssertTest#testComplexArray": 67,
      "org.skyscreamer.jsonassert.JSONAssertTest#testComplexArrayNoUniqueID": 68,
      "org.skyscreamer.jsonassert.JSONAssertTest#testComplexMixedArray": 69,
      "org.skyscreamer.jsonassert.JSONAssertTest#testComplexMixedStrictArray": 70,
      "org.skyscreamer.jsonassert.JSONAssertTest#testEquivalentIntAndDouble": 71,
      "org.skyscreamer.jsonassert.JSONAssertTest#testEquivalentIntAndLong": 72,
      "org.skyscreamer.jsonassert.JSONAssertTest#testExpectedArrayButActualObject": 73,
      "org.skyscreamer.jsonassert.JSONAssertTest#testExpectedObjectButActualArray": 74,
      "org.skyscreamer.jsonassert.JSONAssertTest#testFieldMismatch": 75,
      "org.skyscreamer.jsonassert.JSONAssertTest#testIncorrectTypes": 76,
      "org.skyscreamer.jsonassert.JSONAssertTest#testLenientArrayRecursion": 77,
      "org.skyscreamer.jsonassert.JSONAssertTest#testNested": 78,
      "org.skyscreamer.jsonassert.JSONAssertTest#testNullEquality": 79,
      "org.skyscreamer.jsonassert.JSONAssertTest#testNullProperty": 80,
      "org.skyscreamer.jsonassert.JSONAssertTest#testNumber": 81,
      "org.skyscreamer.jsonassert.JSONAssertTest#testReversed": 82,
      "org.skyscreamer.jsonassert.JSONAssertTest#testSimple": 83,
      "org.skyscreamer.jsonassert.JSONAssertTest#testSimpleAndComplexArray": 84,
      "org.skyscreamer.jsonassert.JSONAssertTest#testSimpleAndComplexStrictArray": 85,
      "org.skyscreamer.jsonassert.JSONAssertTest#testSimpleArray": 86,
      "org.skyscreamer.jsonassert.JSONAssertTest#testSimpleMixedArray": 87,
      "org.skyscreamer.jsonassert.JSONAssertTest#testSimpleStrict": 88,
      "org.skyscreamer.jsonassert.JSONAssertTest#testString": 89,
      "org.skyscreamer.jsonassert.JSONAssertTest#testVeryNested": 90,
      "org.skyscreamer.jsonassert.JSONCompareModeTest#testWithExtensibility": 91,
      "org.skyscreamer.jsonassert.JSONCompareModeTest#testWithStrictOrdering": 92,
      "org.skyscreamer.jsonassert.JSONCompareModeTest#testWithoutExtensibility": 93,
      "org.skyscreamer.jsonassert.JSONCompareModeTest#testWithoutStrictOrdering": 94,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsArrayMissingExpectedElement": 95,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsArraysOfUnequalLength": 96,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsMismatchedFieldValues": 97,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsMismatchedTypes": 98,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsMissingField": 99,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsMissingJSONObjectWithUniqueKeyInUnorderedArray": 100,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsUnexpectedArrayWhenExpectingObject": 101,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsUnexpectedFieldInNonExtensibleMode": 102,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsUnexpectedNonNull": 103,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsUnexpectedNull": 104,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsUnexpectedObjectWhenExpectingArray": 105,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsUnmatchedJSONArrayWhereExpectedContainsJSONObjectWithUniqueKeyButActualContainsElementOfOtherType": 106,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsUnmatchedJSONArrayWhereOnlyExpectedContainsJSONObjectWithUniqueKey": 107,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsUnmatchedJSONObjectInUnorderedArray": 108,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsUnmatchesIntegerValueInUnorderedArrayContainingJSONObject": 109,
      "org.skyscreamer.jsonassert.JSONCompareTest#reportsWrongSimpleValueCountInUnorderedArray": 110,
      "org.skyscreamer.jsonassert.JSONCompareTest#succeedsWithEmptyArrays": 111,
      "org.skyscreamer.jsonassert.JSONCompareTest#succeedsWithJSONObjectsWithNonUniqueKeyInUnorderedArray": 112,
      "org.skyscreamer.jsonassert.JSONCompareTest#succeedsWithNestedJSONObjectsInUnorderedArray": 113,
      "org.skyscreamer.jsonassert.JSONCompareTest#succeedsWithSomeNestedJSONObjectsInUnorderedArray": 114,
      "org.skyscreamer.jsonassert.JSONCustomComparatorTest#whenDeepPathMatchesCallCustomMatcher": 115,
      "org.skyscreamer.jsonassert.JSONCustomComparatorTest#whenDeepWildcardPathMatchesCallCustomMatcher": 116,
      "org.skyscreamer.jsonassert.JSONCustomComparatorTest#whenPathMatchesInCustomizationThenCallCustomMatcher": 117,
      "org.skyscreamer.jsonassert.JSONCustomComparatorTest#whenRootDeepWildcardPathMatchesCallCustomMatcher": 118,
      "org.skyscreamer.jsonassert.JSONCustomComparatorTest#whenSimpleWildcardPathMatchesCallCustomMatcher": 119,
      "org.skyscreamer.jsonassert.RegularExpressionValueMatcherTest#constantRegexMatchesStringAttributeInsideArray": 120,
      "org.skyscreamer.jsonassert.RegularExpressionValueMatcherTest#constantRegexWithSimplePathMatchsStringAttribute": 121,
      "org.skyscreamer.jsonassert.RegularExpressionValueMatcherTest#constantRegexWithThreeLevelPathMatchsStringAttribute": 122,
      "org.skyscreamer.jsonassert.RegularExpressionValueMatcherTest#dynamicRegexMatchesStringAttributeInsideArray": 123,
      "org.skyscreamer.jsonassert.RegularExpressionValueMatcherTest#dynamicRegexMatchesStringAttributeInsideArrayWithNoArgConstructor": 124,
      "org.skyscreamer.jsonassert.RegularExpressionValueMatcherTest#dynamicRegexWithSimplePathMatchsStringAttribute": 125,
      "org.skyscreamer.jsonassert.RegularExpressionValueMatcherTest#dynamicRegexWithThreeLevelPathMatchsStringAttribute": 126,
      "org.skyscreamer.jsonassert.RegularExpressionValueMatcherTest#failsWhenConstantRegexDoesNotMatchStringAttributeInsideArray": 127,
      "org.skyscreamer.jsonassert.RegularExpressionValueMatcherTest#failsWhenConstantRegexInvalid": 128,
      "org.skyscreamer.jsonassert.RegularExpressionValueMatcherTest#failsWhenDynamicRegexDoesNotMatchStringAttributeInsideArray": 129,
      "org.skyscreamer.jsonassert.RegularExpressionValueMatcherTest#failsWhenDynamicRegexInvalid": 130,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#failsWhenActualArrayLongerThanExpectedLength": 131,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#failsWhenActualArrayLongerThanMaxOfExpectedRange": 132,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#failsWhenActualArrayTooShort": 133,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#failsWhenExpectedArraySizeNotANumber": 134,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#failsWhenExpectedArrayTooLong": 135,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#failsWhenExpectedArrayTooShort": 136,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#failsWhenExpectedMaximumTooSmall": 137,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#failsWhenExpectedMinimumTooSmall": 138,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#failsWhenExpectedNotAllSimpleTypes": 139,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#failsWhenFirstExpectedArrayElementNotANumber": 140,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#failsWhenSecondExpectedArrayElementNotANumber": 141,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#succeedsWhenActualArrayContainsBetween2And6Elements": 142,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#succeedsWhenActualArrayContainsExactly3Elements": 143,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#succeedsWhenExactSizeExpected": 144,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#succeedsWhenSizeIsMaximumOfExpectedRange": 145,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#succeedsWhenSizeIsMinimumOfExpectedRange": 146,
      "org.skyscreamer.jsonassert.comparator.ArraySizeComparatorTest#succeedsWhenSizeWithinExpectedRange": 147,
      "org.skyscreamer.jsonassert.comparator.CustomComparatorTest#testFullArrayComparison": 148,
      "org.skyscreamer.jsonassert.comparator.JSONCompareUtilTest#testGetCardinalityMap": 149
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            67, 127, 130, 1, 13, 41, 53, 32, 5, 3, 4, 7, 2, 6, 77, 86, 19, 124,
            46, 15, 20, 120, 123, 129, 107, 114, 8, 14, 44, 9, 11, 18, 26, 42,
            55, 108, 21, 22, 10, 12, 27, 68, 69, 43, 45, 56, 50, 57, 109, 148,
            87, 31, 34, 122, 126, 58, 112, 100, 25, 35, 16, 17, 23, 24, 118, 66,
            113, 115, 116, 119, 84, 39, 47, 121, 125, 106, 40, 48, 117, 131,
            132, 133, 52, 0, 51, 95, 54, 90, 36, 110, 33, 37, 78, 49, 75, 85,
            83, 65, 70, 102, 137, 76, 138, 80, 60, 99, 141, 62, 134, 139, 140,
            97, 98, 88, 103, 104, 135, 136, 29, 30, 59, 142, 143, 144, 145, 146,
            147, 38, 82, 64, 61, 63, 71, 72, 79, 101, 105, 73, 74, 81, 89, 96,
            111, 91, 92, 93, 94, 149, 128, 28
          ]
        ],
        "APSC_c": 0.8045062947961021
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            67, 1, 13, 32, 5, 4, 2, 86, 124, 15, 120, 107, 114, 14, 9, 18, 42,
            108, 22, 12, 68, 43, 56, 57, 148, 31, 122, 58, 100, 35, 17, 24, 66,
            115, 119, 39, 121, 106, 48, 117, 132, 52, 51, 54, 110, 37, 49, 85,
            65, 102, 138, 60, 141, 134, 140, 98, 103, 135, 29, 30, 142, 144,
            146, 38, 64, 63, 72, 101, 73, 81, 96, 91, 93, 128, 28
          ],
          [
            127, 130, 41, 53, 3, 7, 6, 77, 19, 46, 20, 123, 129, 8, 44, 11, 26,
            55, 21, 10, 27, 69, 45, 50, 109, 87, 34, 126, 112, 25, 16, 23, 118,
            113, 116, 84, 47, 125, 40, 131, 133, 0, 95, 90, 36, 33, 78, 75, 83,
            70, 137, 76, 80, 99, 62, 139, 97, 88, 104, 136, 59, 143, 145, 147,
            82, 61, 71, 79, 105, 74, 89, 111, 92, 94, 149
          ]
        ],
        "APSC_c": 0.9020662208092902
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            67, 32, 5, 6, 124, 120, 8, 18, 21, 27, 45, 109, 31, 58, 25, 23, 113,
            84, 125, 117, 133, 95, 110, 49, 70, 138, 141, 98, 135, 59, 145, 82,
            71, 101, 81, 91, 93, 149
          ],
          [
            127, 41, 4, 77, 19, 123, 114, 44, 26, 22, 68, 56, 148, 122, 100, 17,
            66, 119, 121, 48, 132, 51, 36, 78, 83, 137, 80, 62, 140, 103, 29,
            142, 38, 63, 79, 74, 92, 94, 28
          ],
          [
            130, 53, 7, 86, 15, 129, 14, 11, 55, 10, 69, 50, 87, 126, 35, 24,
            115, 39, 106, 131, 0, 90, 37, 85, 102, 60, 134, 97, 104, 30, 143,
            146, 64, 72, 73, 96
          ],
          [
            1, 13, 3, 2, 46, 20, 107, 9, 42, 108, 12, 43, 57, 34, 112, 16, 118,
            116, 47, 40, 52, 54, 33, 75, 65, 76, 99, 139, 88, 136, 144, 147, 61,
            105, 89, 111, 128
          ]
        ],
        "APSC_c": 0.9505868303782411
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            67, 86, 129, 11, 12, 50, 35, 115, 106, 0, 37, 70, 141, 103, 144, 63,
            81, 149
          ],
          [
            127, 2, 123, 8, 108, 43, 31, 100, 66, 121, 132, 90, 49, 138, 88, 30,
            146, 72, 89, 93
          ],
          [
            130, 6, 15, 14, 55, 27, 87, 126, 113, 39, 52, 33, 83, 60, 139, 59,
            38, 101, 91, 128
          ],
          [
            1, 4, 120, 18, 68, 109, 58, 24, 125, 133, 36, 85, 80, 140, 136, 82,
            105, 92, 28
          ],
          [
            13, 7, 20, 44, 21, 45, 34, 16, 116, 48, 95, 75, 76, 97, 142, 64, 73,
            94
          ],
          [
            41, 3, 124, 114, 26, 69, 148, 112, 23, 119, 40, 110, 102, 134, 104,
            143, 61, 111
          ],
          [
            53, 77, 19, 9, 22, 56, 122, 17, 84, 117, 51, 78, 137, 62, 135, 147,
            79, 96
          ],
          [
            32, 5, 46, 107, 42, 10, 57, 25, 118, 47, 131, 54, 65, 99, 98, 29,
            145, 71, 74
          ]
        ],
        "APSC_c": 0.9746225542970831
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [67, 11, 45, 16, 40, 70, 88, 146, 96],
          [127, 14, 108, 126, 106, 37, 60, 104, 72, 93],
          [130, 44, 22, 17, 48, 49, 140, 145, 81],
          [1, 129, 56, 122, 125, 110, 134, 144, 73],
          [13, 107, 10, 35, 119, 95, 138, 142, 89],
          [41, 15, 12, 58, 39, 33, 76, 59, 101],
          [53, 9, 27, 112, 116, 54, 62, 143, 105],
          [32, 124, 21, 100, 47, 51, 80, 135, 79, 28],
          [5, 114, 42, 109, 23, 117, 78, 141, 147, 111],
          [3, 20, 68, 34, 121, 36, 137, 136, 74],
          [4, 8, 69, 31, 24, 52, 102, 30, 63, 128],
          [7, 120, 57, 118, 131, 75, 139, 38, 94],
          [2, 123, 55, 148, 66, 132, 85, 103, 64, 149],
          [6, 46, 26, 87, 113, 133, 83, 97, 71, 92],
          [77, 19, 43, 25, 84, 90, 65, 98, 82, 91],
          [86, 18, 50, 115, 0, 99, 29, 61]
        ],
        "APSC_c": 0.9865309114717213
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            127, 1, 32, 3, 2, 86, 46, 120, 114, 14, 11, 42, 21, 10, 69, 45, 57,
            87, 122, 112, 35, 23, 66, 116, 39, 125, 48, 132, 0, 54, 33, 49, 83,
            102, 80, 99, 134, 140, 88, 135, 30, 142, 146, 82, 63, 79, 73, 89,
            111, 149
          ],
          [
            67, 130, 13, 41, 53, 5, 4, 7, 6, 77, 19, 124, 15, 20, 123, 129, 107,
            8, 44, 9, 18, 26, 55, 108, 22, 12, 27, 68, 43, 56, 50, 109, 148, 31,
            34, 126, 58, 100, 25, 16, 17, 24, 118, 113, 115, 119, 84, 47, 121,
            106, 40, 117, 131, 133, 52, 51, 95, 90, 36, 110, 37, 78, 75, 85, 65,
            70, 137, 76, 138, 60, 141, 62, 139, 97, 98, 103, 104, 136, 29, 59,
            143, 144, 145, 147, 38, 64, 61, 71, 72, 101, 105, 74, 81, 96, 91,
            92, 93, 94, 128, 28
          ]
        ],
        "APSC_c": 0.9345372712022396
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            127, 41, 5, 6, 19, 120, 14, 18, 108, 12, 43, 57, 34, 112, 16, 118,
            116, 121, 48, 132, 51, 36, 78, 85, 137, 80, 62, 97, 104, 30, 143,
            147, 61, 101, 81, 111
          ],
          [
            67, 130, 1, 13, 53, 32, 3, 4, 7, 2, 77, 86, 124, 46, 15, 20, 123,
            129, 107, 114, 8, 44, 9, 11, 26, 42, 55, 21, 22, 10, 27, 68, 69, 45,
            56, 50, 109, 148, 87, 31, 122, 126, 58, 100, 25, 35, 17, 23, 24, 66,
            113, 115, 119, 84, 39, 47, 125, 106, 40, 117, 131, 133, 52, 0, 95,
            54, 90, 110, 33, 37, 49, 75, 83, 65, 70, 102, 76, 138, 60, 99, 141,
            134, 139, 140, 98, 88, 103, 135, 136, 29, 59, 142, 144, 145, 146,
            38, 82, 64, 63, 71, 72, 79, 105, 73, 74, 89, 96, 91, 92, 93, 94,
            149, 128, 28
          ]
        ],
        "APSC_c": 0.9510621041978371
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [
            127, 53, 7, 19, 123, 14, 18, 22, 45, 109, 126, 35, 24, 119, 125,
            117, 52, 90, 37, 83, 76, 141, 98, 136, 145, 64, 101, 81, 91, 128
          ],
          [
            67, 130, 1, 13, 41, 32, 5, 3, 4, 2, 6, 77, 86, 124, 46, 15, 20, 120,
            129, 107, 114, 8, 44, 9, 11, 26, 42, 55, 108, 21, 10, 12, 27, 68,
            69, 43, 56, 50, 57, 148, 87, 31, 34, 122, 58, 112, 100, 25, 16, 17,
            23, 118, 66, 113, 115, 116, 84, 39, 47, 121, 106, 40, 48, 131, 132,
            133, 0, 51, 95, 54, 36, 110, 33, 78, 49, 75, 85, 65, 70, 102, 137,
            138, 80, 60, 99, 62, 134, 139, 140, 97, 88, 103, 104, 135, 29, 30,
            59, 142, 143, 144, 146, 147, 38, 82, 61, 63, 71, 72, 79, 105, 73,
            74, 89, 96, 111, 92, 93, 94, 149, 28
          ]
        ],
        "APSC_c": 0.9610161198727746
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [13, 114, 12, 100, 131, 70, 88, 71],
          [41, 123, 27, 35, 48, 49, 103, 101],
          [53, 14, 43, 24, 51, 99, 144, 89],
          [32, 20, 45, 118, 133, 80, 59, 96],
          [
            67, 7, 77, 19, 107, 44, 26, 10, 56, 148, 122, 25, 66, 119, 121, 117,
            52, 90, 33, 85, 76, 141, 98, 136, 146, 64, 79, 81, 92, 149
          ],
          [
            127, 3, 6, 124, 129, 9, 42, 21, 69, 109, 87, 58, 16, 115, 39, 40,
            95, 110, 75, 102, 62, 140, 135, 143, 147, 61, 74, 93, 128
          ],
          [
            130, 4, 86, 15, 8, 18, 108, 68, 57, 31, 126, 17, 113, 84, 125, 132,
            54, 37, 83, 137, 60, 139, 104, 30, 145, 82, 72, 105, 111
          ],
          [
            1, 5, 2, 46, 120, 11, 55, 22, 50, 34, 112, 23, 116, 47, 106, 0, 36,
            78, 65, 138, 134, 97, 29, 142, 38, 63, 73, 91, 94, 28
          ]
        ],
        "APSC_c": 0.9900833926964535
      }
    ]
  },
  {
    "filename": "thrau_jarchivelib.json",
    "name_to_id": {
      "org.rauschig.jarchivelib.Archiver7zTest#extract_properlyExtractsArchiveStream": 0,
      "org.rauschig.jarchivelib.ArchiverTarGzTest#getFilenameExtension_targz_returnsCorrectFilenameExtension": 1,
      "org.rauschig.jarchivelib.ArchiverTarTest#getFilenameExtension_tar_returnsCorrectFilenameExtension": 2,
      "org.rauschig.jarchivelib.FactoryTest#createArchiver_fromArchiveFile_returnsCorrectArchiver": 3,
      "org.rauschig.jarchivelib.FactoryTest#createArchiver_fromCompressedArchiveFile_returnsCorrectArchiver": 4,
      "org.rauschig.jarchivelib.FactoryTest#createArchiver_fromStringArchiveAndCompressionFormat_returnsCorrectArchiver": 5,
      "org.rauschig.jarchivelib.FactoryTest#createArchiver_fromStringArchiveFormat_returnsCorrectArchiver": 6,
      "org.rauschig.jarchivelib.FactoryTest#createArchiver_fromUnknownArchiveType_fails": 7,
      "org.rauschig.jarchivelib.FactoryTest#createArchiver_fromUnknownFileExtension_fails": 8,
      "org.rauschig.jarchivelib.FactoryTest#createArchiver_withUnknownArchiveAndCompressionType_fails": 9,
      "org.rauschig.jarchivelib.FactoryTest#createArchiver_withUnknownArchiveType_fails": 10,
      "org.rauschig.jarchivelib.FactoryTest#createArchiver_withUnknownCompressionType_fails": 11,
      "org.rauschig.jarchivelib.FactoryTest#createCompressor_fromFile_returnsCorrectCompressor": 12,
      "org.rauschig.jarchivelib.FactoryTest#createCompressor_fromStringCompressionFormat_returnsCorrectCompressor": 13,
      "org.rauschig.jarchivelib.FactoryTest#createCompressor_fromUnknownCompressionType_fails": 14,
      "org.rauschig.jarchivelib.FactoryTest#createCompressor_fromUnknownFileExtension_fails": 15,
      "org.rauschig.jarchivelib.FactoryTest#createCompressor_fromUnknownFileType_throwsException": 16,
      "org.rauschig.jarchivelib.FactoryTest#createCompressor_withUnknownCompressionType_fails": 17,
      "org.rauschig.jarchivelib.FileTypeTest#get_archive_returnsCorrectFileType": 18,
      "org.rauschig.jarchivelib.FileTypeTest#get_compressedArchive_returnsCorrectFileType": 19,
      "org.rauschig.jarchivelib.FileTypeTest#get_compressed_returnsCorrectFileType": 20,
      "org.rauschig.jarchivelib.FileTypeTest#get_unknownExtension_returnsUnknown": 21,
      "org.rauschig.jarchivelib.PosixFilePermissionsMapperTest#allPermissions": 22,
      "org.rauschig.jarchivelib.PosixFilePermissionsMapperTest#groupPermissions": 23,
      "org.rauschig.jarchivelib.PosixFilePermissionsMapperTest#noPermissions": 24,
      "org.rauschig.jarchivelib.PosixFilePermissionsMapperTest#othersPermissions": 25,
      "org.rauschig.jarchivelib.PosixFilePermissionsMapperTest#ownerPermissions": 26,
      "org.rauschig.jarchivelib.PosixFilePermissionsMapperTest#permissionCombinations": 27,
      "org.rauschig.jarchivelib.PosixFilePermissionsMapperTest#permissionsSameForAll": 28
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            4, 3, 7, 12, 14, 18, 20, 19, 5, 8, 15, 21, 16, 1, 6, 11, 13, 23, 25,
            26, 27, 28, 2, 22, 24, 9, 10, 17, 0
          ]
        ],
        "APSC_c": 0.7357494722026742
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [4, 7, 14, 20, 5, 8, 21, 1, 6, 11, 23, 26, 27, 24, 10, 17],
          [3, 12, 18, 19, 15, 16, 13, 25, 28, 2, 22, 9, 0]
        ],
        "APSC_c": 0.867301536855009
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [4, 18, 8, 21, 6, 26, 2, 9],
          [3, 5, 16, 27, 10],
          [7, 20, 15, 1, 13, 25, 22, 17],
          [12, 14, 19, 11, 23, 28, 24, 0]
        ],
        "APSC_c": 0.9323624889332819
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [4, 16],
          [3, 27],
          [7, 6, 24],
          [12, 21, 11, 2, 10],
          [14, 5, 13, 22, 17],
          [18, 8, 1, 23, 28, 0],
          [20, 15, 26, 9],
          [19, 25]
        ],
        "APSC_c": 0.9637352159996367
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [4],
          [3],
          [7],
          [12, 22],
          [14, 23],
          [18, 25],
          [20, 26],
          [19],
          [5, 24],
          [8, 27],
          [15, 0],
          [21, 28],
          [16],
          [1, 13, 9],
          [6, 10],
          [11, 2, 17]
        ],
        "APSC_c": 0.9825202606070236
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [3, 18, 5, 15, 1, 6, 25, 2, 24, 10],
          [
            4, 7, 12, 14, 20, 19, 8, 21, 16, 11, 13, 23, 26, 27, 28, 22, 9, 17,
            0
          ]
        ],
        "APSC_c": 0.9125275249143038
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [3, 19, 6, 26, 24, 10],
          [
            4, 7, 12, 14, 18, 20, 5, 8, 15, 21, 16, 1, 11, 13, 23, 25, 27, 28,
            2, 22, 9, 17, 0
          ]
        ],
        "APSC_c": 0.9362532065106354
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [3, 8, 1, 6, 27, 10],
          [
            4, 7, 12, 14, 18, 20, 19, 5, 15, 21, 16, 11, 13, 23, 25, 26, 28, 2,
            22, 24, 9, 17, 0
          ]
        ],
        "APSC_c": 0.9474434178565753
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [14, 23],
          [18, 25],
          [20, 26],
          [19],
          [4, 8, 1, 6, 27, 0],
          [3, 21, 11, 28, 9],
          [7, 15, 13, 2, 22, 10],
          [12, 5, 16, 24, 17]
        ],
        "APSC_c": 0.9871029034528161
      }
    ]
  },
  {
    "filename": "stateless4j_stateless4j.json",
    "name_to_id": {
      "com.github.oxo42.stateless4j.DynamicTransitionActionTests#GuardedDynamicTransitionActionsArePerformed": 0,
      "com.github.oxo42.stateless4j.DynamicTransitionActionTests#UnguardedDynamicTransitionActionsArePerformed": 1,
      "com.github.oxo42.stateless4j.DynamicTriggerTests#DestinationStateIsCalculatedBasedOnTriggerParameters": 2,
      "com.github.oxo42.stateless4j.DynamicTriggerTests#DestinationStateIsDynamic": 3,
      "com.github.oxo42.stateless4j.InitialStateEntryTest#initialStateActionsNotCalledByDefault": 4,
      "com.github.oxo42.stateless4j.InitialStateEntryTest#initialStateTransition": 5,
      "com.github.oxo42.stateless4j.InitialStateEntryTest#initialStateTransitionCanBeTriggeredBeforeAnyTrigger": 6,
      "com.github.oxo42.stateless4j.InitialStateEntryTest#initialStateTransitionCanBeTriggeredOnlyOnce": 7,
      "com.github.oxo42.stateless4j.InternalTransitionActionTests#ActionWithNegativeGuardIsNotPerformed": 8,
      "com.github.oxo42.stateless4j.InternalTransitionActionTests#ActionWithPositiveGuardIsPerformed": 9,
      "com.github.oxo42.stateless4j.InternalTransitionActionTests#ExitAndEntryAreNotPerformed": 10,
      "com.github.oxo42.stateless4j.InternalTransitionActionTests#MultipleInternalActionsWithDistinctTriggersAreAllowed": 11,
      "com.github.oxo42.stateless4j.InternalTransitionActionTests#MultipleInternalActionsWithSameTriggerNotAllowed": 12,
      "com.github.oxo42.stateless4j.InternalTransitionActionTests#UnguardedActionIsPerformed": 13,
      "com.github.oxo42.stateless4j.InternalTriggerBehaviourTests#ExposesCorrectUnderlyingTrigger": 14,
      "com.github.oxo42.stateless4j.InternalTriggerBehaviourTests#StateRemainsUnchanged": 15,
      "com.github.oxo42.stateless4j.InternalTriggerBehaviourTests#TransitionIsInternal": 16,
      "com.github.oxo42.stateless4j.InternalTriggerBehaviourTests#WhenGuardConditionFalse_IsGuardConditionMetIsFalse": 17,
      "com.github.oxo42.stateless4j.InternalTriggerBehaviourTests#WhenGuardConditionTrue_IsGuardConditionMetIsTrue": 18,
      "com.github.oxo42.stateless4j.NonEnumTests#CanUseReferenceTypeMarkers": 19,
      "com.github.oxo42.stateless4j.NonEnumTests#CanUseValueTypeMarkers": 20,
      "com.github.oxo42.stateless4j.StateMachineTests#AcceptedTriggersRespectGuards": 21,
      "com.github.oxo42.stateless4j.StateMachineTests#CanUseReferenceTypeMarkers": 22,
      "com.github.oxo42.stateless4j.StateMachineTests#CanUseValueTypeMarkers": 23,
      "com.github.oxo42.stateless4j.StateMachineTests#IfSelfTransitionPermitted_ActionsFire": 24,
      "com.github.oxo42.stateless4j.StateMachineTests#ImplicitReentryIsDisallowed": 25,
      "com.github.oxo42.stateless4j.StateMachineTests#InitialStateIsCurrent": 26,
      "com.github.oxo42.stateless4j.StateMachineTests#ParametersSuppliedToFireArePassedToEntryAction": 27,
      "com.github.oxo42.stateless4j.StateMachineTests#PermittedTriggersAreDistinctValues": 28,
      "com.github.oxo42.stateless4j.StateMachineTests#PermittedTriggersIncludeSuperstatePermittedTriggers": 29,
      "com.github.oxo42.stateless4j.StateMachineTests#SubstateIsIncludedInCurrentState": 30,
      "com.github.oxo42.stateless4j.StateMachineTests#TriggerParametersAreImmutableOnceSet": 31,
      "com.github.oxo42.stateless4j.StateMachineTests#WhenDiscriminatedByGuard_ChoosesPermittedTransition": 32,
      "com.github.oxo42.stateless4j.StateMachineTests#WhenInSubstate_TriggerIgnoredInSuperstate_RemainsInSubstate": 33,
      "com.github.oxo42.stateless4j.StateMachineTests#WhenTriggerIsIgnored_ActionsNotExecuted": 34,
      "com.github.oxo42.stateless4j.StateMachineTests#WhenUnhandledTriggerisFired_UnhandledTriggerActionIsCalled": 35,
      "com.github.oxo42.stateless4j.StateRepresentationTests#DoesNotIncludeSuperstate": 36,
      "com.github.oxo42.stateless4j.StateRepresentationTests#DoesNotIncludeUnrelatedState": 37,
      "com.github.oxo42.stateless4j.StateRepresentationTests#EntryActionsExecuteInOrder": 38,
      "com.github.oxo42.stateless4j.StateRepresentationTests#ExitActionsExecuteInOrder": 39,
      "com.github.oxo42.stateless4j.StateRepresentationTests#IncludesSubstate": 40,
      "com.github.oxo42.stateless4j.StateRepresentationTests#IncludesUnderlyingState": 41,
      "com.github.oxo42.stateless4j.StateRepresentationTests#IsIncludedInSuperstate": 42,
      "com.github.oxo42.stateless4j.StateRepresentationTests#IsIncludedInUnderlyingState": 43,
      "com.github.oxo42.stateless4j.StateRepresentationTests#IsNotIncludedInSubstate": 44,
      "com.github.oxo42.stateless4j.StateRepresentationTests#IsNotIncludedInUnrelatedState": 45,
      "com.github.oxo42.stateless4j.StateRepresentationTests#UponEntering_EnteringActionsExecuted": 46,
      "com.github.oxo42.stateless4j.StateRepresentationTests#UponEntering_LeavingActionsNotExecuted": 47,
      "com.github.oxo42.stateless4j.StateRepresentationTests#UponLeaving_EnteringActionsNotExecuted": 48,
      "com.github.oxo42.stateless4j.StateRepresentationTests#UponLeaving_LeavingActionsExecuted": 49,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenEnteringSubstate_SuperEntryActionsExecuted": 50,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenEnteringSubstate_SuperstateEntryActionsExecuteBeforeSubstate": 51,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenExitingSubstate_SubstateEntryActionsExecuteBeforeSuperstate": 52,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenLeavingSubstate_SuperExitActionsExecuted": 53,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenTransitionDoesNotExist_TriggerCannotBeFired": 54,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenTransitionExistsButGuardConditionNotMet_TriggerCanBeFired": 55,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenTransitionExistsInSupersate_TriggerCanBeFired": 56,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenTransitionExists_TriggerCanBeFired": 57,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenTransitioningFromSubToSuperstate_SubstateEntryActionsExecuted": 58,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenTransitioningFromSubToSuperstate_SubstateExitActionsExecuted": 59,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenTransitioningFromSuperToSubstate_SuperExitActionsNotExecuted": 60,
      "com.github.oxo42.stateless4j.StateRepresentationTests#WhenTransitioningToSuperFromSubstate_SuperEntryActionsNotExecuted": 61,
      "com.github.oxo42.stateless4j.TraceTests#traceDelegateCanBeDisabled": 62,
      "com.github.oxo42.stateless4j.TraceTests#transitionIsCaptured": 63,
      "com.github.oxo42.stateless4j.TraceTests#triggerIsCaptured": 64,
      "com.github.oxo42.stateless4j.TransitionActionTests#ActionWithCorrectGuardIsPerformed": 65,
      "com.github.oxo42.stateless4j.TransitionActionTests#ActionWithNegativeGuardIsNotPerformed": 66,
      "com.github.oxo42.stateless4j.TransitionActionTests#ActionWithPositiveGuardIsPerformed": 67,
      "com.github.oxo42.stateless4j.TransitionActionTests#ActionWithPositiveGuardIsPerformedOnReentry": 68,
      "com.github.oxo42.stateless4j.TransitionActionTests#ReentryActionIsPerformedBetweenExitAndEntry": 69,
      "com.github.oxo42.stateless4j.TransitionActionTests#TransitionActionIsPerformedBetweenExitAndEntry": 70,
      "com.github.oxo42.stateless4j.TransitionActionTests#UnguardedActionIsPerformed": 71,
      "com.github.oxo42.stateless4j.TransitionActionTests#UnguardedActionIsPerformedOnReentry": 72,
      "com.github.oxo42.stateless4j.TransitionTests#IdentityTransitionIsNotChange": 73,
      "com.github.oxo42.stateless4j.TransitionTests#TransitioningTransitionIsChange": 74,
      "com.github.oxo42.stateless4j.TransitioningTriggerBehaviourTests#TransitionIsExternal": 75,
      "com.github.oxo42.stateless4j.TransitioningTriggerBehaviourTests#TransitionsToDestinationState": 76,
      "com.github.oxo42.stateless4j.TriggerBehaviourTests#ExposesCorrectUnderlyingTrigger": 77,
      "com.github.oxo42.stateless4j.TriggerBehaviourTests#WhenGuardConditionFalse_IsGuardConditionMetIsFalse": 78,
      "com.github.oxo42.stateless4j.TriggerBehaviourTests#WhenGuardConditionTrue_IsGuardConditionMetIsTrue": 79,
      "com.github.oxo42.stateless4j.TriggerWithParametersTests#DescribesUnderlyingTrigger": 80,
      "com.github.oxo42.stateless4j.TriggerWithParametersTests#IncompatibleParametersAreNotValid": 81,
      "com.github.oxo42.stateless4j.TriggerWithParametersTests#ParametersArePolymorphic": 82,
      "com.github.oxo42.stateless4j.TriggerWithParametersTests#ParametersOfCorrectTypeAreAccepted": 83,
      "com.github.oxo42.stateless4j.TriggerWithParametersTests#TooFewParametersDetected": 84,
      "com.github.oxo42.stateless4j.TriggerWithParametersTests#TooManyParametersDetected": 85,
      "com.github.oxo42.stateless4j.graphviz.GraphGenerationTests#GeneratesDotFileForGraph": 86,
      "com.github.oxo42.stateless4j.graphviz.GraphGenerationTests#GeneratesDotFileForGraphWithLabels": 87
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            1, 6, 0, 4, 2, 70, 27, 69, 63, 62, 19, 20, 22, 23, 32, 24, 71, 3,
            65, 67, 72, 68, 7, 5, 10, 33, 34, 64, 11, 13, 28, 29, 66, 9, 8, 12,
            21, 35, 86, 87, 30, 31, 56, 50, 51, 58, 52, 53, 59, 54, 55, 60, 61,
            25, 38, 46, 39, 49, 47, 48, 84, 82, 83, 81, 26, 57, 85, 40, 73, 74,
            75, 76, 77, 78, 79, 14, 15, 16, 17, 18, 80, 36, 44, 42, 37, 41, 43,
            45
          ]
        ],
        "APSC_c": 0.8340719045137996
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            1, 4, 27, 63, 19, 22, 32, 71, 65, 68, 5, 33, 64, 13, 29, 9, 12, 35,
            87, 31, 50, 51, 52, 54, 60, 61, 38, 46, 49, 48, 82, 81, 57, 40, 73,
            75, 77, 79, 15, 18, 36, 44, 37, 43
          ],
          [
            6, 0, 2, 70, 69, 62, 20, 23, 24, 3, 67, 72, 7, 10, 34, 11, 28, 66,
            8, 21, 86, 30, 56, 58, 53, 59, 55, 25, 39, 47, 84, 83, 26, 85, 74,
            76, 78, 14, 16, 17, 80, 42, 41, 45
          ]
        ],
        "APSC_c": 0.9175838035972438
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            1, 27, 22, 71, 72, 10, 64, 66, 35, 31, 58, 54, 25, 82, 57, 73, 77,
            16, 36, 41
          ],
          [
            6, 2, 63, 20, 32, 67, 5, 11, 29, 12, 86, 56, 52, 55, 46, 47, 81, 40,
            76, 14, 18, 44, 37
          ],
          [
            0, 70, 62, 23, 3, 68, 33, 13, 9, 21, 30, 51, 59, 61, 49, 84, 26, 75,
            79, 15, 42, 45
          ],
          [
            4, 69, 19, 24, 65, 7, 34, 28, 8, 87, 50, 53, 60, 38, 39, 48, 83, 85,
            74, 78, 17, 80, 43
          ]
        ],
        "APSC_c": 0.9573143772336007
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [1, 23, 68, 28, 31, 53, 38, 48, 85, 77, 42],
          [6, 63, 71, 5, 9, 87, 59, 49, 26, 14, 44],
          [0, 62, 3, 33, 66, 30, 54, 47, 57, 78, 36],
          [4, 24, 7, 34, 12, 56, 61, 82, 76, 18, 45],
          [2, 19, 67, 64, 35, 58, 25, 40, 79, 80],
          [70, 22, 72, 13, 21, 50, 55, 84, 73, 15, 41],
          [27, 32, 10, 29, 86, 52, 46, 83, 74, 16, 37],
          [69, 20, 65, 11, 8, 51, 60, 39, 81, 75, 17, 43]
        ],
        "APSC_c": 0.9778162631814546
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [1, 34, 50, 54, 84, 16],
          [6, 71, 9, 59, 48, 77],
          [0, 67, 31, 81, 41],
          [4, 29, 51, 55, 85, 17],
          [2, 72, 12, 49, 78],
          [70, 5, 30, 75, 18],
          [27, 28, 53, 38, 82, 43],
          [69, 68, 86, 26, 45],
          [63, 65, 56, 60, 39, 76, 37],
          [62, 3, 8, 57, 80],
          [19, 10, 35, 83, 36],
          [20, 7, 66, 61, 40, 14],
          [22, 11, 87, 73, 15],
          [23, 64, 52, 46, 74, 44],
          [32, 13, 58, 25, 42],
          [24, 33, 21, 47, 79]
        ],
        "APSC_c": 0.9869987928466071
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            6, 4, 69, 62, 22, 24, 65, 68, 33, 64, 29, 9, 21, 87, 56, 51, 53, 55,
            25, 48, 82, 57, 73, 75, 78, 15, 80, 42, 45
          ],
          [
            1, 0, 2, 70, 27, 63, 19, 20, 23, 32, 71, 3, 67, 72, 7, 5, 10, 34,
            11, 13, 28, 66, 8, 12, 35, 86, 30, 31, 50, 58, 52, 59, 54, 60, 61,
            38, 46, 39, 49, 47, 84, 83, 81, 26, 85, 40, 74, 76, 77, 79, 14, 16,
            17, 18, 36, 44, 37, 41, 43
          ]
        ],
        "APSC_c": 0.9445615262968644
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            6, 4, 63, 22, 71, 72, 10, 11, 29, 12, 87, 51, 53, 60, 25, 82, 85,
            75, 78, 16, 44, 41
          ],
          [
            1, 0, 2, 70, 27, 69, 62, 19, 20, 23, 32, 24, 3, 65, 67, 68, 7, 5,
            33, 34, 64, 13, 28, 66, 9, 8, 21, 35, 86, 30, 31, 56, 50, 58, 52,
            59, 54, 55, 61, 38, 46, 39, 49, 47, 48, 84, 83, 81, 26, 57, 40, 73,
            74, 76, 77, 79, 14, 15, 17, 18, 80, 36, 42, 37, 43, 45
          ]
        ],
        "APSC_c": 0.9589261104710466
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [6, 2, 63, 23, 65, 10, 13, 8, 30, 55, 39, 84, 57, 75, 79, 17, 37],
          [
            1, 0, 4, 70, 27, 69, 62, 19, 20, 22, 32, 24, 71, 3, 67, 72, 68, 7,
            5, 33, 34, 64, 11, 28, 29, 66, 9, 12, 21, 35, 86, 87, 31, 56, 50,
            51, 58, 52, 53, 59, 54, 60, 61, 25, 38, 46, 49, 47, 48, 82, 83, 81,
            26, 85, 40, 73, 74, 76, 77, 78, 14, 15, 16, 18, 80, 36, 44, 42, 41,
            43, 45
          ]
        ],
        "APSC_c": 0.9667678376176883
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [2, 72, 86, 18],
          [70, 5, 58, 84, 42],
          [27, 13, 38, 73, 44],
          [69, 68, 50, 47, 80],
          [1, 19, 32, 67, 64, 9, 21, 87, 53, 55, 39, 82, 85, 77, 15, 45],
          [6, 63, 22, 71, 7, 33, 28, 8, 31, 54, 25, 83, 57, 76, 14, 36, 37],
          [
            0, 62, 23, 3, 10, 11, 66, 35, 56, 51, 52, 60, 46, 48, 26, 74, 78,
            17, 41
          ],
          [4, 20, 24, 65, 34, 29, 12, 30, 59, 61, 49, 81, 40, 75, 79, 16, 43]
        ],
        "APSC_c": 0.9910949963675324
      }
    ]
  },
  {
    "filename": "mpatric_mp3agic.json",
    "name_to_id": {
      "com.mpatric.mp3agic.BaseExceptionTest#generatesCorrectDetailedMessageForChainedBaseExceptions": 0,
      "com.mpatric.mp3agic.BaseExceptionTest#generatesCorrectDetailedMessageForChainedExceptionsWithOtherExceptionInMix": 1,
      "com.mpatric.mp3agic.BaseExceptionTest#generatesCorrectDetailedMessageForSingleException": 2,
      "com.mpatric.mp3agic.BufferToolsTest#ReturnsMinusOneWhenNoSingleTerminator": 3,
      "com.mpatric.mp3agic.BufferToolsTest#convertsBufferContainingHighAscii": 4,
      "com.mpatric.mp3agic.BufferToolsTest#findsDoubleTerminator": 5,
      "com.mpatric.mp3agic.BufferToolsTest#findsDoubleTerminatorWhenFirstElement": 6,
      "com.mpatric.mp3agic.BufferToolsTest#findsDoubleTerminatorWhenLastElement": 7,
      "com.mpatric.mp3agic.BufferToolsTest#findsFirstDoubleTerminator": 8,
      "com.mpatric.mp3agic.BufferToolsTest#findsFirstDoubleTerminatorAfterFromIndex": 9,
      "com.mpatric.mp3agic.BufferToolsTest#findsFirstDoubleTerminatorOnAnEvenByte": 10,
      "com.mpatric.mp3agic.BufferToolsTest#findsFirstSingleTerminator": 11,
      "com.mpatric.mp3agic.BufferToolsTest#findsFirstSingleTerminatorAfterFromIndex": 12,
      "com.mpatric.mp3agic.BufferToolsTest#findsNotFindDoubleTerminatorIfNotOnEvenByte": 13,
      "com.mpatric.mp3agic.BufferToolsTest#findsSingleTerminator": 14,
      "com.mpatric.mp3agic.BufferToolsTest#findsSingleTerminatorWhenFirstElement": 15,
      "com.mpatric.mp3agic.BufferToolsTest#findsSingleTerminatorWhenLastElement": 16,
      "com.mpatric.mp3agic.BufferToolsTest#returnsMinusOneWhenNoDoubleTerminator": 17,
      "com.mpatric.mp3agic.BufferToolsTest#shouldConvertNonAsciiCharactersToQuestionMarksInString": 18,
      "com.mpatric.mp3agic.BufferToolsTest#shouldConvertStringToBufferAndBack": 19,
      "com.mpatric.mp3agic.BufferToolsTest#shouldConvertSubstringToBufferAndBack": 20,
      "com.mpatric.mp3agic.BufferToolsTest#shouldConvertUnicodeStringToBufferAndBack": 21,
      "com.mpatric.mp3agic.BufferToolsTest#shouldConvertUnicodeSubstringToBufferAndBack": 22,
      "com.mpatric.mp3agic.BufferToolsTest#shouldCopyBuffersWithValidOffsetsAndLengths": 23,
      "com.mpatric.mp3agic.BufferToolsTest#shouldCopyStringToEndOfByteBuffer": 24,
      "com.mpatric.mp3agic.BufferToolsTest#shouldCopyStringToStartOfByteBuffer": 25,
      "com.mpatric.mp3agic.BufferToolsTest#shouldCopySubstringToMiddleOfByteBuffer": 26,
      "com.mpatric.mp3agic.BufferToolsTest#shouldCopySubstringToStartOfByteBuffer": 27,
      "com.mpatric.mp3agic.BufferToolsTest#shouldCopyUnicodeStringToEndOfByteBuffer": 28,
      "com.mpatric.mp3agic.BufferToolsTest#shouldCopyUnicodeStringToStartOfByteBuffer": 29,
      "com.mpatric.mp3agic.BufferToolsTest#shouldCopyUnicodeSubstringToStartOfByteBuffer": 30,
      "com.mpatric.mp3agic.BufferToolsTest#shouldDetermineSynchronisationSizesCorrectly": 31,
      "com.mpatric.mp3agic.BufferToolsTest#shouldDetermineUnsynchronisationSizesCorrectly": 32,
      "com.mpatric.mp3agic.BufferToolsTest#shouldExtractBitsCorrectly": 33,
      "com.mpatric.mp3agic.BufferToolsTest#shouldExtractStringFromEndOfBuffer": 34,
      "com.mpatric.mp3agic.BufferToolsTest#shouldExtractStringFromMiddleOfBuffer": 35,
      "com.mpatric.mp3agic.BufferToolsTest#shouldExtractStringFromStartOfBuffer": 36,
      "com.mpatric.mp3agic.BufferToolsTest#shouldExtractUnicodeStringFromMiddleOfBuffer": 37,
      "com.mpatric.mp3agic.BufferToolsTest#shouldPackAndUnpackIntegerBackToOriginalValue": 38,
      "com.mpatric.mp3agic.BufferToolsTest#shouldPackAndUnpackSynchsafeIntegerBackToOriginalValue": 39,
      "com.mpatric.mp3agic.BufferToolsTest#shouldPackIntegerCorrectly": 40,
      "com.mpatric.mp3agic.BufferToolsTest#shouldPackSynchsafeIntegersCorrectly": 41,
      "com.mpatric.mp3agic.BufferToolsTest#shouldPadRightWithNullCharacters": 42,
      "com.mpatric.mp3agic.BufferToolsTest#shouldRaiseExceptionWhenCopyingStringIntoByteBufferWithDestinationOffsetOutOfRange": 43,
      "com.mpatric.mp3agic.BufferToolsTest#shouldRaiseExceptionWhenCopyingStringIntoByteBufferWithLengthOutOfRange": 44,
      "com.mpatric.mp3agic.BufferToolsTest#shouldRaiseExceptionWhenCopyingStringIntoByteBufferWithOffsetOutOfRange": 45,
      "com.mpatric.mp3agic.BufferToolsTest#shouldReplaceTokensWithSpecifiedStrings": 46,
      "com.mpatric.mp3agic.BufferToolsTest#shouldReturnOriginalBufferIfNoUnynchronisationOrSynchronisationIsRequired": 47,
      "com.mpatric.mp3agic.BufferToolsTest#shouldReturnOriginalStringForSubstitutionWithEmptyString": 48,
      "com.mpatric.mp3agic.BufferToolsTest#shouldReturnOriginalStringIfTokenToSubstituteDoesNotExistInString": 49,
      "com.mpatric.mp3agic.BufferToolsTest#shouldRightPadStringsCorrectly": 50,
      "com.mpatric.mp3agic.BufferToolsTest#shouldRightPadUnicodeStringsCorrectly": 51,
      "com.mpatric.mp3agic.BufferToolsTest#shouldRightTrimStringsCorrectly": 52,
      "com.mpatric.mp3agic.BufferToolsTest#shouldRightTrimUnicodeStringsCorrectly": 53,
      "com.mpatric.mp3agic.BufferToolsTest#shouldSetBitsInBytesCorrectly": 54,
      "com.mpatric.mp3agic.BufferToolsTest#shouldSubstituteEmptyStringWhenDestinationStringIsNull": 55,
      "com.mpatric.mp3agic.BufferToolsTest#shouldThrowAnExceptionWhenConvertingStringToBytesWithLengthOutOfRange": 56,
      "com.mpatric.mp3agic.BufferToolsTest#shouldThrowAnExceptionWhenConvertingStringToBytesWithOffsetOutOfRange": 57,
      "com.mpatric.mp3agic.BufferToolsTest#shouldThrowExceptionForLengthExtendingBeyondEndOfArray": 58,
      "com.mpatric.mp3agic.BufferToolsTest#shouldThrowExceptionForOffsetAfterEndOfArray": 59,
      "com.mpatric.mp3agic.BufferToolsTest#shouldThrowExceptionForOffsetBeforeStartOfArray": 60,
      "com.mpatric.mp3agic.BufferToolsTest#shouldUnpackIntegerCorrectly": 61,
      "com.mpatric.mp3agic.BufferToolsTest#shouldUnpackSynchsafeIntegersCorrectly": 62,
      "com.mpatric.mp3agic.BufferToolsTest#shouldUnsynchroniseThenSynchroniseBufferFullOfFFsCorrectly": 63,
      "com.mpatric.mp3agic.BufferToolsTest#shouldUnsynchroniseThenSynchroniseBufferMinimalBufferCorrectly": 64,
      "com.mpatric.mp3agic.BufferToolsTest#shouldUnsynchroniseThenSynchroniseFF00BytesCorrectly": 65,
      "com.mpatric.mp3agic.BufferToolsTest#shouldUnsynchroniseThenSynchroniseFFExBytesCorrectly": 66,
      "com.mpatric.mp3agic.BufferToolsTest#throwsExceptionWhenCopyingBufferWithInvalidOffsetAndOrLength": 67,
      "com.mpatric.mp3agic.EncodedTextTest#UTF16ShouldDecodeBEWhenSpecifiedInBOM": 68,
      "com.mpatric.mp3agic.EncodedTextTest#shouldConstructFromStringOrBytes": 69,
      "com.mpatric.mp3agic.EncodedTextTest#shouldDetectUTF16BEEncodingFromBytesWithBOM": 70,
      "com.mpatric.mp3agic.EncodedTextTest#shouldDetectUTF16EncodingFromBytesWithBOM": 71,
      "com.mpatric.mp3agic.EncodedTextTest#shouldDetectUTF8EncodingFromBytesWithBOM": 72,
      "com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeISO8859_1Text": 73,
      "com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF16BEText": 74,
      "com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF16Text": 75,
      "com.mpatric.mp3agic.EncodedTextTest#shouldEncodeAndDecodeUTF8Text": 76,
      "com.mpatric.mp3agic.EncodedTextTest#shouldHandleBacktickCharacterInString": 77,
      "com.mpatric.mp3agic.EncodedTextTest#shouldInferISO8859_1EncodingFromBytesWithNoBOM": 78,
      "com.mpatric.mp3agic.EncodedTextTest#shouldReturnNullWhenDecodingInvalidString": 79,
      "com.mpatric.mp3agic.EncodedTextTest#shouldStillReturnBytesWhenDataIsEmpty": 80,
      "com.mpatric.mp3agic.EncodedTextTest#shouldStillReturnBytesWhenStringIsEmpty": 81,
      "com.mpatric.mp3agic.EncodedTextTest#shouldStillReturnBytesWhenUnicodeDataIsEmpty": 82,
      "com.mpatric.mp3agic.EncodedTextTest#shouldStillReturnBytesWhenUnicodeStringIsEmpty": 83,
      "com.mpatric.mp3agic.EncodedTextTest#shouldThrowAnExceptionWhenAttemptingToTranscodeToACharacterSetWithUnmappableCharacters": 84,
      "com.mpatric.mp3agic.EncodedTextTest#shouldThrowExceptionWhenEncodingWithInvalidCharacterSet": 85,
      "com.mpatric.mp3agic.EncodedTextTest#shouldThrowExceptionWhenTranscodingWithInvalidCharacterSet": 86,
      "com.mpatric.mp3agic.EncodedTextTest#shouldTranscodeFromOneEncodingToAnother": 87,
      "com.mpatric.mp3agic.EncodedTextTest#shouldUseAppropriateEncodingWhenConstructingFromStringOnly": 88,
      "com.mpatric.mp3agic.FileWrapperTest#shouldFailForMalformedFilename": 89,
      "com.mpatric.mp3agic.FileWrapperTest#shouldFailForNonExistentFile": 90,
      "com.mpatric.mp3agic.FileWrapperTest#shouldFailForNullFilename": 91,
      "com.mpatric.mp3agic.FileWrapperTest#shouldFailForNullFilenameFile": 92,
      "com.mpatric.mp3agic.FileWrapperTest#shouldFailForNullPath": 93,
      "com.mpatric.mp3agic.FileWrapperTest#shouldReadValidFile": 94,
      "com.mpatric.mp3agic.FileWrapperTest#shouldReadValidFilename": 95,
      "com.mpatric.mp3agic.FileWrapperTest#shouldReadValidPath": 96,
      "com.mpatric.mp3agic.ID3WrapperTest#clearCopyrightDoesNotThrowExceptionWhenV2TagDoesNotExist": 97,
      "com.mpatric.mp3agic.ID3WrapperTest#clearEncoderDoesNotThrowExceptionWhenV2TagDoesNotExist": 98,
      "com.mpatric.mp3agic.ID3WrapperTest#clearsCommentFrameOnV2Tag": 99,
      "com.mpatric.mp3agic.ID3WrapperTest#clearsCommentOnV1Tag": 100,
      "com.mpatric.mp3agic.ID3WrapperTest#clearsCopyrightFrameOnV2Tag": 101,
      "com.mpatric.mp3agic.ID3WrapperTest#clearsEncoderFrameOnV2Tag": 102,
      "com.mpatric.mp3agic.ID3WrapperTest#getAlbumArtistReturnsNullIfV2TagDoesNotExist": 103,
      "com.mpatric.mp3agic.ID3WrapperTest#getAlbumArtistReturnsV2TagsAlbumArtist": 104,
      "com.mpatric.mp3agic.ID3WrapperTest#getAlbumImageReturnsNullIfV2TagDoesNotExist": 105,
      "com.mpatric.mp3agic.ID3WrapperTest#getAlbumImageReturnsV2TagsAlbumImage": 106,
      "com.mpatric.mp3agic.ID3WrapperTest#getAlbumReturnsNullIfBothTagsDoNotExist": 107,
      "com.mpatric.mp3agic.ID3WrapperTest#getAlbumReturnsV1TagsAlbumIfV2TagDoesNotExist": 108,
      "com.mpatric.mp3agic.ID3WrapperTest#getAlbumReturnsV1TagsAlbumIfV2TagsAlbumDoesNotExist": 109,
      "com.mpatric.mp3agic.ID3WrapperTest#getAlbumReturnsV1TagsAlbumIfV2TagsAlbumIsEmpty": 110,
      "com.mpatric.mp3agic.ID3WrapperTest#getAlbumReturnsV2TagsAlbumBeforeV1TagsAlbum": 111,
      "com.mpatric.mp3agic.ID3WrapperTest#getArtistReturnsNullIfBothTagsDoNotExist": 112,
      "com.mpatric.mp3agic.ID3WrapperTest#getArtistReturnsV1TagsArtistIfV2TagDoesNotExist": 113,
      "com.mpatric.mp3agic.ID3WrapperTest#getArtistReturnsV1TagsArtistIfV2TagsArtistDoesNotExist": 114,
      "com.mpatric.mp3agic.ID3WrapperTest#getArtistReturnsV1TagsArtistIfV2TagsArtistIsEmpty": 115,
      "com.mpatric.mp3agic.ID3WrapperTest#getArtistReturnsV2TagsArtistBeforeV1TagsArtist": 116,
      "com.mpatric.mp3agic.ID3WrapperTest#getCommentReturnsNullIfBothTagsDoNotExist": 117,
      "com.mpatric.mp3agic.ID3WrapperTest#getCommentReturnsV1TagsCommentIfV2TagDoesNotExist": 118,
      "com.mpatric.mp3agic.ID3WrapperTest#getCommentReturnsV1TagsCommentIfV2TagsCommentDoesNotExist": 119,
      "com.mpatric.mp3agic.ID3WrapperTest#getCommentReturnsV1TagsCommentIfV2TagsCommentIsEmpty": 120,
      "com.mpatric.mp3agic.ID3WrapperTest#getCommentReturnsV2TagsCommentBeforeV1TagsComment": 121,
      "com.mpatric.mp3agic.ID3WrapperTest#getComposerReturnsNullIfV2TagDoesNotExist": 122,
      "com.mpatric.mp3agic.ID3WrapperTest#getComposerReturnsV2TagsComposer": 123,
      "com.mpatric.mp3agic.ID3WrapperTest#getCopyrightReturnsNullIfV2TagDoesNotExist": 124,
      "com.mpatric.mp3agic.ID3WrapperTest#getCopyrightReturnsV2TagsCopyright": 125,
      "com.mpatric.mp3agic.ID3WrapperTest#getEncoderReturnsNullIfV2TagDoesNotExist": 126,
      "com.mpatric.mp3agic.ID3WrapperTest#getEncoderReturnsV2TagsEncoder": 127,
      "com.mpatric.mp3agic.ID3WrapperTest#getGenreDescriptionReturnsNullIfBothTagsDoNotExist": 128,
      "com.mpatric.mp3agic.ID3WrapperTest#getGenreDescriptionReturnsV1TagsGenreDescriptionIfV2TagDoesNotExist": 129,
      "com.mpatric.mp3agic.ID3WrapperTest#getGenreDescriptionReturnsV2TagsGenreDescriptionBeforeV1TagsGenreDescription": 130,
      "com.mpatric.mp3agic.ID3WrapperTest#getGenreReturnsNegativeOneIfBothTagsDoNotExist": 131,
      "com.mpatric.mp3agic.ID3WrapperTest#getGenreReturnsV1TagsGenreIfV2TagDoesNotExist": 132,
      "com.mpatric.mp3agic.ID3WrapperTest#getGenreReturnsV1TagsGenreIfV2TagsGenreIsNegativeOne": 133,
      "com.mpatric.mp3agic.ID3WrapperTest#getGenreReturnsV2TagsGenreBeforeV1TagsGenre": 134,
      "com.mpatric.mp3agic.ID3WrapperTest#getLyricsReturnsNullIfV2TagDoesNotExist": 135,
      "com.mpatric.mp3agic.ID3WrapperTest#getLyricsReturnsV2TagsLyrics": 136,
      "com.mpatric.mp3agic.ID3WrapperTest#getOriginalArtistReturnsNullIfV2TagDoesNotExist": 137,
      "com.mpatric.mp3agic.ID3WrapperTest#getOriginalArtistReturnsV2TagsOriginalArtist": 138,
      "com.mpatric.mp3agic.ID3WrapperTest#getTitleReturnsNullIfBothTagsDoNotExist": 139,
      "com.mpatric.mp3agic.ID3WrapperTest#getTitleReturnsV1TagsTitleIfV2TagDoesNotExist": 140,
      "com.mpatric.mp3agic.ID3WrapperTest#getTitleReturnsV1TagsTitleIfV2TagsTitleDoesNotExist": 141,
      "com.mpatric.mp3agic.ID3WrapperTest#getTitleReturnsV1TagsTitleIfV2TagsTitleIsEmpty": 142,
      "com.mpatric.mp3agic.ID3WrapperTest#getTitleReturnsV2TagsTitleBeforeV1TagsTitle": 143,
      "com.mpatric.mp3agic.ID3WrapperTest#getTrackReturnsNullIfBothTagsDoNotExist": 144,
      "com.mpatric.mp3agic.ID3WrapperTest#getTrackReturnsV1TagsTrackIfV2TagDoesNotExist": 145,
      "com.mpatric.mp3agic.ID3WrapperTest#getTrackReturnsV1TagsTrackIfV2TagsTrackDoesNotExist": 146,
      "com.mpatric.mp3agic.ID3WrapperTest#getTrackReturnsV1TagsTrackIfV2TagsTrackIsEmpty": 147,
      "com.mpatric.mp3agic.ID3WrapperTest#getTrackReturnsV2TagsTrackBeforeV1TagsTrack": 148,
      "com.mpatric.mp3agic.ID3WrapperTest#getUrlReturnsNullIfV2TagDoesNotExist": 149,
      "com.mpatric.mp3agic.ID3WrapperTest#getUrlReturnsV2TagsUrl": 150,
      "com.mpatric.mp3agic.ID3WrapperTest#getYearReturnsNullIfBothTagsDoNotExist": 151,
      "com.mpatric.mp3agic.ID3WrapperTest#getYearReturnsV1TagsYearIfV2TagDoesNotExist": 152,
      "com.mpatric.mp3agic.ID3WrapperTest#getYearReturnsV1TagsYearIfV2TagsYearDoesNotExist": 153,
      "com.mpatric.mp3agic.ID3WrapperTest#getYearReturnsV1TagsYearIfV2TagsYearIsEmpty": 154,
      "com.mpatric.mp3agic.ID3WrapperTest#getYearReturnsV2TagsYearBeforeV1TagsYear": 155,
      "com.mpatric.mp3agic.ID3WrapperTest#returnsNullV1Tag": 156,
      "com.mpatric.mp3agic.ID3WrapperTest#returnsNullV2Tag": 157,
      "com.mpatric.mp3agic.ID3WrapperTest#returnsV1Tag": 158,
      "com.mpatric.mp3agic.ID3WrapperTest#returnsV2Tag": 159,
      "com.mpatric.mp3agic.ID3WrapperTest#setAlbumArtistDoesNotThrowExceptionWhenV2TagDoesNotExist": 160,
      "com.mpatric.mp3agic.ID3WrapperTest#setAlbumDoesNotThrowExceptionWhenBothTagsDoNotExist": 161,
      "com.mpatric.mp3agic.ID3WrapperTest#setAlbumImageDoesNotThrowExceptionWhenV2TagDoesNotExist": 162,
      "com.mpatric.mp3agic.ID3WrapperTest#setArtistDoesNotThrowExceptionWhenBothTagsDoNotExist": 163,
      "com.mpatric.mp3agic.ID3WrapperTest#setCommentDoesNotThrowExceptionWhenBothTagsDoNotExist": 164,
      "com.mpatric.mp3agic.ID3WrapperTest#setComposerDoesNotThrowExceptionWhenV2TagDoesNotExist": 165,
      "com.mpatric.mp3agic.ID3WrapperTest#setCopyrightDoesNotThrowExceptionWhenV2TagDoesNotExist": 166,
      "com.mpatric.mp3agic.ID3WrapperTest#setEncoderDoesNotThrowExceptionWhenV2TagDoesNotExist": 167,
      "com.mpatric.mp3agic.ID3WrapperTest#setGenreDoesNotThrowExceptionWhenBothTagsDoNotExist": 168,
      "com.mpatric.mp3agic.ID3WrapperTest#setLyricsDoesNotThrowExceptionWhenV2TagDoesNotExist": 169,
      "com.mpatric.mp3agic.ID3WrapperTest#setOriginalArtistDoesNotThrowExceptionWhenV2TagDoesNotExist": 170,
      "com.mpatric.mp3agic.ID3WrapperTest#setTitleDoesNotThrowExceptionWhenBothTagsDoNotExist": 171,
      "com.mpatric.mp3agic.ID3WrapperTest#setTrackDoesNotThrowExceptionWhenBothTagsDoNotExist": 172,
      "com.mpatric.mp3agic.ID3WrapperTest#setUrlDoesNotThrowExceptionWhenV2TagDoesNotExist": 173,
      "com.mpatric.mp3agic.ID3WrapperTest#setYearDoesNotThrowExceptionWhenBothTagsDoNotExist": 174,
      "com.mpatric.mp3agic.ID3WrapperTest#setsAlbumArtistOnV2Tag": 175,
      "com.mpatric.mp3agic.ID3WrapperTest#setsAlbumImageOnV2Tag": 176,
      "com.mpatric.mp3agic.ID3WrapperTest#setsAlbumOnBothV1AndV2Tags": 177,
      "com.mpatric.mp3agic.ID3WrapperTest#setsAlbumOnV1TagOnly": 178,
      "com.mpatric.mp3agic.ID3WrapperTest#setsAlbumOnV2TagOnly": 179,
      "com.mpatric.mp3agic.ID3WrapperTest#setsArtistOnBothV1AndV2Tags": 180,
      "com.mpatric.mp3agic.ID3WrapperTest#setsArtistOnV1TagOnly": 181,
      "com.mpatric.mp3agic.ID3WrapperTest#setsArtistOnV2TagOnly": 182,
      "com.mpatric.mp3agic.ID3WrapperTest#setsCommentOnBothV1AndV2Tags": 183,
      "com.mpatric.mp3agic.ID3WrapperTest#setsCommentOnV1TagOnly": 184,
      "com.mpatric.mp3agic.ID3WrapperTest#setsCommentOnV2TagOnly": 185,
      "com.mpatric.mp3agic.ID3WrapperTest#setsComposerOnV2Tag": 186,
      "com.mpatric.mp3agic.ID3WrapperTest#setsCopyrightOnV2Tag": 187,
      "com.mpatric.mp3agic.ID3WrapperTest#setsEncoderOnV2Tag": 188,
      "com.mpatric.mp3agic.ID3WrapperTest#setsGenreOnBothV1AndV2Tags": 189,
      "com.mpatric.mp3agic.ID3WrapperTest#setsGenreOnV1TagOnly": 190,
      "com.mpatric.mp3agic.ID3WrapperTest#setsGenreOnV2TagOnly": 191,
      "com.mpatric.mp3agic.ID3WrapperTest#setsLyricsOnV2Tag": 192,
      "com.mpatric.mp3agic.ID3WrapperTest#setsOriginalArtistOnV2Tag": 193,
      "com.mpatric.mp3agic.ID3WrapperTest#setsTitleOnBothV1AndV2Tags": 194,
      "com.mpatric.mp3agic.ID3WrapperTest#setsTitleOnV1TagOnly": 195,
      "com.mpatric.mp3agic.ID3WrapperTest#setsTitleOnV2TagOnly": 196,
      "com.mpatric.mp3agic.ID3WrapperTest#setsTrackOnBothV1AndV2Tags": 197,
      "com.mpatric.mp3agic.ID3WrapperTest#setsTrackOnV1TagOnly": 198,
      "com.mpatric.mp3agic.ID3WrapperTest#setsTrackOnV2TagOnly": 199,
      "com.mpatric.mp3agic.ID3WrapperTest#setsUrlOnV2Tag": 200,
      "com.mpatric.mp3agic.ID3WrapperTest#setsYearOnBothV1AndV2Tags": 201,
      "com.mpatric.mp3agic.ID3WrapperTest#setsYearOnV1TagOnly": 202,
      "com.mpatric.mp3agic.ID3WrapperTest#setsYearOnV2TagOnly": 203,
      "com.mpatric.mp3agic.ID3v1GenresTest#ignoresCase": 204,
      "com.mpatric.mp3agic.ID3v1GenresTest#returnsCorrectGenreIdForFirstExistentGenre": 205,
      "com.mpatric.mp3agic.ID3v1GenresTest#returnsCorrectGenreIdForLastExistentGenre": 206,
      "com.mpatric.mp3agic.ID3v1GenresTest#returnsCorrectGenreIdForPolka": 207,
      "com.mpatric.mp3agic.ID3v1GenresTest#returnsMinusOneForNonExistentGenre": 208,
      "com.mpatric.mp3agic.ID3v1TagTest#shouldConvertTagToBytesAndBackToEquivalentTag": 209,
      "com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid10Tag": 210,
      "com.mpatric.mp3agic.ID3v1TagTest#shouldExtractMaximumLengthFieldsFromValid11Tag": 211,
      "com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithNullspace": 212,
      "com.mpatric.mp3agic.ID3v1TagTest#shouldExtractTrimmedFieldsFromValid11TagWithWhitespace": 213,
      "com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBuffer": 214,
      "com.mpatric.mp3agic.ID3v1TagTest#shouldGenerateValidTagBufferWithHighGenreAndTrackNumber": 215,
      "com.mpatric.mp3agic.ID3v1TagTest#shouldReadTagFieldsFromMp3": 216,
      "com.mpatric.mp3agic.ID3v1TagTest#shouldReturnEmptyTrackIfNotSetOn11Tag": 217,
      "com.mpatric.mp3agic.ID3v1TagTest#shouldThrowExceptionForTagBufferTooLong": 218,
      "com.mpatric.mp3agic.ID3v1TagTest#shouldThrowExceptionForTagBufferTooShort": 219,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveAlbumArtist": 220,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveBPM": 221,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveCompilation": 222,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveDate": 223,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveGrouping": 224,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveItunesComment": 225,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveKey": 226,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrieveLyrics": 227,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePartOfSet": 228,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldStoreAndRetrievePublisher": 229,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldUnpackAndPackOffCompressionBit": 230,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldUnpackAndPackOffUnsynchronizationBit": 231,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldUnpackAndPackOnCompressionBit": 232,
      "com.mpatric.mp3agic.ID3v22TagTest#shouldUnpackAndPackOnUnsynchronizationBit": 233,
      "com.mpatric.mp3agic.ID3v24TagTest#shouldSetGenreDescription": 234,
      "com.mpatric.mp3agic.ID3v24TagTest#shouldStoreAndRetrieveRecordingTime": 235,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#equalIfIdIsNullOnBoth": 236,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#equalObjectsHaveSameHashCode": 237,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#equalsItself": 238,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsEndOffset": 239,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsEndTime": 240,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsId": 241,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsStartOffset": 242,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsStartTime": 243,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#getsAndSetsSubframes": 244,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#hashCodeIsConsistent": 245,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfEndOffsetNotEqual": 246,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfEndTimeNotEqual": 247,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfIdIsNullOnOne": 248,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfIdNotEqual": 249,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfOneHasSubframes": 250,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfStartOffsetNotEqual": 251,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfStartTimeNotEqual": 252,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualIfUnsynchronizationNotEqual": 253,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualToDifferentClass": 254,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#notEqualToNull": 255,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual": 256,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject": 257,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#toStringOnFullFrameData": 258,
      "com.mpatric.mp3agic.ID3v2ChapterFrameDataTest#toStringOnMostlyEmptyFrameData": 259,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#equalIfIdIsNullOnBoth": 260,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#equalObjectsHaveSameHashCode": 261,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#equalsItself": 262,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#getsAndSetsChildren": 263,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#getsAndSetsId": 264,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#getsAndSetsIsOrdered": 265,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#getsAndSetsIsRoot": 266,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#getsAndSetsSubframes": 267,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#hashCodeIsConsistent": 268,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfChildrenNotEqual": 269,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfChildrenNullOnOne": 270,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfIdIsNullOnOne": 271,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfIdNotEqual": 272,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfIsOrderedNotEqual": 273,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfIsRootNotEqual": 274,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfOneDoeNotHaveChildren": 275,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfOneHasSubframes": 276,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualIfUnsynchronizationNotEqual": 277,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualToDifferentClass": 278,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#notEqualToNull": 279,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual": 280,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject": 281,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#toStringOnFullFrameData": 282,
      "com.mpatric.mp3agic.ID3v2ChapterTOCFrameDataTest#toStringOnMostlyEmptyFrameData": 283,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#constructorThrowsErrorWhenEncodingsDoNotMatch": 284,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsEmptyFrameDataToBytesAndBack": 285,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoCommentToBytesAndBack": 286,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionAndCommentIsUnicodeToBytesAndBack": 287,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoDescriptionToBytesAndBack": 288,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#convertsFrameDataWithNoLanguageToBytesAndBack": 289,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#equalIfCommentIsNullOnBoth": 290,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#equalIfDescriptionIsNullOnBoth": 291,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#equalIfLanguageIsNullOnBoth": 292,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#equalObjectsHaveSameHashCode": 293,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#equalsItself": 294,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#getsAndSetsComment": 295,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#getsAndSetsDescription": 296,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#getsAndSetsLanguage": 297,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#hashCodeIsConsistent": 298,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfCommentIsNullOnOne": 299,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfCommentNotEqual": 300,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfDescriptionIsNullOnOne": 301,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfDescriptionNotEqual": 302,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfLanguageIsNullOnOne": 303,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfLanguageNotEqual": 304,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualIfUnsynchronizationNotEqual": 305,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualToDifferentClass": 306,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#notEqualToNull": 307,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual": 308,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject": 309,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithBlankDescriptionAndLanguageToBytesAndBackToEquivalentObject": 310,
      "com.mpatric.mp3agic.ID3v2CommentFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject": 311,
      "com.mpatric.mp3agic.ID3v2FrameSetTest#shouldCorrectlyImplementHashCodeAndEquals": 312,
      "com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyImplementHashCodeAndEquals": 313,
      "com.mpatric.mp3agic.ID3v2FrameTest#shouldCorrectlyUnpackHeader": 314,
      "com.mpatric.mp3agic.ID3v2FrameTest#shouldPackAndUnpackHeaderToGiveEquivalentObject": 315,
      "com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32CFrame": 316,
      "com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32TFrame": 317,
      "com.mpatric.mp3agic.ID3v2FrameTest#shouldReadValid32WFrame": 318,
      "com.mpatric.mp3agic.ID3v2FrameTest#shouldStoreAndRetrieveData": 319,
      "com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValid32ObseleteTFrame": 320,
      "com.mpatric.mp3agic.ID3v2ObseleteFrameTest#shouldReadValidLong32ObseleteTFrame": 321,
      "com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual": 322,
      "com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameData": 323,
      "com.mpatric.mp3agic.ID3v2ObseletePictureFrameDataTest#shouldReadFrameDataWithUnicodeDescription": 324,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#equalIfDescriptionIsNullOnBoth": 325,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#equalIfImageDataIsNullOnBoth": 326,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#equalIfMimeTypeIsNullOnBoth": 327,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#equalObjectsHaveSameHashCode": 328,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#equalsItself": 329,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#getsAndSetsDescription": 330,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#getsAndSetsImageData": 331,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#getsAndSetsMimeType": 332,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#getsAndSetsPictureType": 333,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#hashCodeIsConsistent": 334,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#notEqualIfDescriptionIsNullOnOne": 335,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#notEqualIfDescriptionNotEqual": 336,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#notEqualIfImageDataNotEqual": 337,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#notEqualIfImageDataNullOnOne": 338,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#notEqualIfMimeTypeIsNullOnOne": 339,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#notEqualIfMimeTypeNotEqual": 340,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#notEqualIfPictureTypeNotEqual": 341,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#notEqualIfUnsynchronizationNotEqual": 342,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#notEqualToDifferentClass": 343,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#notEqualToNull": 344,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual": 345,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject": 346,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject": 347,
      "com.mpatric.mp3agic.ID3v2PictureFrameDataTest#shouldUnsynchroniseAndSynchroniseDataWhenPackingAndUnpacking": 348,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#ID3v2PopmFrameDataIsNotEqualNull": 349,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#ID3v2PopmFrameDataIsNotEqualOtherType": 350,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#ID3v2PopmFrameDataIsNotEqualOtherWithDifferentAddress": 351,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#ID3v2PopmFrameDataIsNotEqualOtherWithDifferentRating": 352,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#ID3v2PopmFrameDataIsNotEqualOtherWithNullAddress": 353,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canGetLength": 354,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canPackFrameData": 355,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetAddress": 356,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#canSetAndGetRating": 357,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#hashCodeOfTwoDifferentObjectsAreDifferent": 358,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#sameObjectsAreEquals": 359,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn1StarRating": 360,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn2StarRating": 361,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn3StarRating": 362,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn4StarRating": 363,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturn5StarRating": 364,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturnAddress": 365,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#shouldReturnMinus1ForInvalidRating": 366,
      "com.mpatric.mp3agic.ID3v2PopmFrameDataTest#twoEquivalentObjectsAreEquals": 367,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldCalculateCorrectDataLengthsFromHeaderBlock": 368,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldConvert23TagToBytesAndBackToEquivalentTag": 369,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithFooterToBytesAndBackToEquivalentTag": 370,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldConvert24TagWithPaddingToBytesAndBackToEquivalentTag": 371,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCAndChapterFramesFromMp3": 372,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldExtractChapterTOCFramesFromMp3": 373,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldExtractGenreDescriptionFromCombinedGenreStringsCorrectly": 374,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldExtractGenreNumberFromCombinedGenreStringsCorrectly": 375,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldGetCommentAndItunesComment": 376,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldIgnoreInvalidWmpRatingOnWrite": 377,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldInitialiseFromHeaderBlockWithValidHeaders": 378,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldNotUsePaddingOnA24TagIfItHasAFooter": 379,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadBPM": 380,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadCombinedGenreInTag": 381,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPM": 382,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadFloatingPointBPMWithCommaDelimiter": 383,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3With32Tag": 384,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadFramesFromMp3WithObselete32Tag": 385,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadId3v2WithFooter": 386,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With24tag": 387,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tag": 388,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3With32tagResavedByMp3tagWithUTF16Encoding": 389,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsFromMp3WithObselete32tag": 390,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadTagFieldsWithUnicodeDataFromMp3": 391,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldReadWmpRating": 392,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldRemoveAlbumImageFrame": 393,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldSetCombinedGenreOnTag": 394,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldSetTagFieldsWithUnicodeDataAndSpecifiedEncodingCorrectly": 395,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldSortId3TagsAlphabetically": 396,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldThrowExceptionForNonSupportedVersionInId3v2HeaderBlock": 397,
      "com.mpatric.mp3agic.ID3v2TagTest#shouldWriteWmpRating": 398,
      "com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23Tag": 399,
      "com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn23TagWithUnknownGenre": 400,
      "com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24Tag": 401,
      "com.mpatric.mp3agic.ID3v2TagTest#testSetGenreDescriptionOn24TagWithUnknownGenre": 402,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#equalIfTextIsNullOnBoth": 403,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#equalObjectsHaveSameHashCode": 404,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#equalsItself": 405,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#getsAndSetsDescription": 406,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#hashCodeIsConsistent": 407,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#notEqualIfTextIsNullOnOne": 408,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#notEqualIfTextNotEqual": 409,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#notEqualIfUnsynchronizationNotEqual": 410,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#notEqualToDifferentClass": 411,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#notEqualToNull": 412,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual": 413,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject": 414,
      "com.mpatric.mp3agic.ID3v2TextFrameDataTest#shouldConvertFrameDataWithUnicodeToBytesAndBackToEquivalentObject": 415,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#equalIfDescriptionIsNullOnBoth": 416,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#equalIfUrlIsNullOnBoth": 417,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#equalObjectsHaveSameHashCode": 418,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#equalsItself": 419,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#getsAndSetsDescription": 420,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#getsAndSetsUrl": 421,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#hashCodeIsConsistent": 422,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#notEqualIfDescriptionIsNullOnOne": 423,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#notEqualIfDescriptionNotEqual": 424,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#notEqualIfIdUrlNullOnOne": 425,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#notEqualIfUnsynchronizationNotEqual": 426,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#notEqualIfUrlNotEqual": 427,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#notEqualToDifferentClass": 428,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#notEqualToNull": 429,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConsiderTwoEquivalentObjectsEqual": 430,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataToBytesAndBackToEquivalentObject": 431,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithNoDescriptionToBytesAndBackToEquivalentObject": 432,
      "com.mpatric.mp3agic.ID3v2UrlFrameDataTest#shouldConvertFrameDataWithUnicodeDescriptionToBytesAndBackToEquivalentObject": 433,
      "com.mpatric.mp3agic.ID3v2WWWFrameDataTest#getsAndSetsId": 434,
      "com.mpatric.mp3agic.InvalidDataExceptionTest#constructorWithMessage": 435,
      "com.mpatric.mp3agic.InvalidDataExceptionTest#constructorWithMessageAndCause": 436,
      "com.mpatric.mp3agic.InvalidDataExceptionTest#defaultConstructor": 437,
      "com.mpatric.mp3agic.Mp3FileTest#shouldFindProbableStartOfMpegFramesWithPrescan": 438,
      "com.mpatric.mp3agic.Mp3FileTest#shouldFindProbableStartOfMpegFramesWithPrescanForFileConstructor": 439,
      "com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrame": 440,
      "com.mpatric.mp3agic.Mp3FileTest#shouldIgnoreIncompleteMpegFrameForFileConstructor": 441,
      "com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFile": 442,
      "com.mpatric.mp3agic.Mp3FileTest#shouldInitialiseProperlyWhenNotScanningFileForFileConstructor": 443,
      "com.mpatric.mp3agic.Mp3FileTest#shouldLoadAndCheckMp3ContainingUnicodeFields": 444,
      "com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithCustomTag": 445,
      "com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithFakeStartAndEndFrames": 446,
      "com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithId3Tags": 447,
      "com.mpatric.mp3agic.Mp3FileTest#shouldLoadMp3WithNoTags": 448,
      "com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTag": 449,
      "com.mpatric.mp3agic.Mp3FileTest#shouldRemoveCustomTagForFileConstructor": 450,
      "com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTags": 451,
      "com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1AndId3v2AndCustomTagsForFileConstructor": 452,
      "com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1Tag": 453,
      "com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v1TagForFileConstructor": 454,
      "com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2Tag": 455,
      "com.mpatric.mp3agic.Mp3FileTest#shouldRemoveId3v2TagForFileConstructor": 456,
      "com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WhichIsEquivalentToOriginal": 457,
      "com.mpatric.mp3agic.Mp3FileTest#shouldSaveLoadedMp3WithUnicodeFieldsWhichIsEquivalentToOriginal": 458,
      "com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3": 459,
      "com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionForFileThatIsNotAnMp3ForFileConstructor": 460,
      "com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFile": 461,
      "com.mpatric.mp3agic.Mp3FileTest#shouldThrowExceptionIfSavingMp3WithSameNameAsSourceFileForFileConstructor": 462,
      "com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidFields": 463,
      "com.mpatric.mp3agic.MpegFrameTest#shouldExtractValidMpegVersion1Header": 464,
      "com.mpatric.mp3agic.MpegFrameTest#shouldProcessValidMpegVersion2Header": 465,
      "com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForFreeBitrate": 466,
      "com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidBitrate": 467,
      "com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidFrameSync": 468,
      "com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidMpegLayer": 469,
      "com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidMpegVersion": 470,
      "com.mpatric.mp3agic.MpegFrameTest#shouldThrowExceptionForInvalidSampleRate": 471,
      "com.mpatric.mp3agic.MpegFrameTest#testBitwiseLeftShiftOperationsOnLong": 472,
      "com.mpatric.mp3agic.MpegFrameTest#testBitwiseRightShiftOperationsOnLong": 473,
      "com.mpatric.mp3agic.MpegFrameTest#testShiftingByteIntoBiggerNumber": 474,
      "com.mpatric.mp3agic.MutableIntegerTest#equalIfValueEqual": 475,
      "com.mpatric.mp3agic.MutableIntegerTest#equalObjectsHaveSameHashCode": 476,
      "com.mpatric.mp3agic.MutableIntegerTest#equalsItself": 477,
      "com.mpatric.mp3agic.MutableIntegerTest#hashCodeIsConsistent": 478,
      "com.mpatric.mp3agic.MutableIntegerTest#incrementsValue": 479,
      "com.mpatric.mp3agic.MutableIntegerTest#initializesValue": 480,
      "com.mpatric.mp3agic.MutableIntegerTest#notEqualIfValueNotEqual": 481,
      "com.mpatric.mp3agic.MutableIntegerTest#notEqualToDifferentClass": 482,
      "com.mpatric.mp3agic.MutableIntegerTest#notEqualToNull": 483,
      "com.mpatric.mp3agic.MutableIntegerTest#setsValue": 484,
      "com.mpatric.mp3agic.NotSupportedExceptionTest#constructorWithMessage": 485,
      "com.mpatric.mp3agic.NotSupportedExceptionTest#constructorWithMessageAndCause": 486,
      "com.mpatric.mp3agic.NotSupportedExceptionTest#defaultConstructor": 487,
      "com.mpatric.mp3agic.TestHelper#shouldConvertBytesToHexAndBack": 488,
      "com.mpatric.mp3agic.UnsupportedTagExceptionTest#constructorWithMessage": 489,
      "com.mpatric.mp3agic.UnsupportedTagExceptionTest#constructorWithMessageAndCause": 490,
      "com.mpatric.mp3agic.UnsupportedTagExceptionTest#defaultConstructor": 491,
      "com.mpatric.mp3agic.VersionTest#returnsUrl": 492,
      "com.mpatric.mp3agic.VersionTest#returnsVersion": 493,
      "com.mpatric.mp3agic.VersionTest#returnsVersionAndUrlAsString": 494
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            457, 458, 450, 449, 370, 454, 371, 453, 381, 369, 456, 455, 452,
            451, 445, 446, 447, 444, 441, 379, 440, 462, 461, 387, 402, 401,
            225, 399, 227, 443, 442, 389, 398, 388, 221, 226, 390, 400, 220,
            223, 224, 228, 229, 377, 222, 394, 448, 235, 234, 395, 281, 257,
            376, 372, 393, 347, 391, 311, 346, 348, 309, 382, 383, 380, 433,
            287, 286, 289, 373, 310, 432, 431, 288, 392, 385, 285, 384, 415,
            256, 396, 280, 386, 250, 276, 209, 465, 324, 464, 75, 414, 74, 323,
            460, 315, 73, 76, 459, 68, 339, 292, 303, 304, 308, 322, 290, 291,
            302, 326, 327, 341, 345, 301, 340, 300, 337, 338, 417, 425, 427,
            430, 336, 378, 424, 409, 413, 82, 299, 368, 314, 335, 293, 298, 328,
            334, 423, 295, 296, 330, 406, 408, 420, 305, 69, 212, 213, 471, 214,
            215, 418, 422, 306, 342, 319, 307, 316, 317, 318, 404, 407, 426, 80,
            216, 343, 410, 83, 211, 87, 344, 428, 88, 411, 466, 467, 81, 210,
            429, 65, 66, 412, 312, 63, 294, 320, 321, 329, 79, 419, 84, 284,
            405, 217, 72, 236, 469, 77, 70, 260, 252, 71, 86, 325, 438, 439, 78,
            251, 470, 274, 64, 248, 249, 351, 352, 353, 367, 273, 271, 272, 416,
            468, 247, 246, 0, 269, 270, 275, 356, 357, 360, 361, 362, 363, 364,
            365, 366, 397, 403, 1, 47, 261, 268, 253, 52, 258, 277, 350, 358,
            53, 254, 349, 278, 282, 46, 232, 233, 237, 245, 255, 5, 7, 8, 9, 10,
            39, 259, 279, 11, 12, 14, 16, 55, 230, 231, 2, 38, 94, 96, 283, 375,
            6, 13, 15, 313, 355, 374, 17, 95, 3, 354, 359, 31, 32, 238, 475,
            481, 18, 99, 218, 219, 244, 262, 267, 19, 20, 61, 62, 105, 106, 463,
            42, 50, 51, 101, 102, 177, 180, 183, 189, 194, 197, 201, 482, 494,
            41, 100, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120,
            128, 129, 131, 132, 133, 139, 140, 141, 142, 144, 145, 146, 147,
            151, 152, 153, 154, 178, 179, 181, 182, 184, 185, 190, 191, 195,
            196, 198, 199, 202, 203, 204, 206, 207, 208, 24, 25, 26, 27, 43, 54,
            161, 163, 164, 168, 171, 172, 174, 205, 239, 240, 241, 242, 243,
            263, 264, 265, 266, 297, 331, 332, 333, 421, 434, 483, 21, 22, 40,
            85, 103, 104, 111, 116, 121, 122, 123, 124, 125, 126, 127, 130, 134,
            135, 136, 137, 138, 143, 148, 149, 150, 155, 175, 176, 186, 187,
            188, 192, 193, 200, 476, 478, 4, 23, 28, 29, 30, 34, 35, 36, 58, 59,
            60, 90, 97, 98, 160, 162, 165, 166, 167, 169, 170, 173, 477, 479,
            484, 492, 493, 67, 156, 157, 158, 159, 37, 44, 45, 48, 49, 56, 57,
            435, 436, 437, 480, 485, 486, 487, 489, 490, 491, 92, 93, 33, 89,
            91, 472, 473, 474, 488
          ]
        ],
        "APSC_c": 0.7531865582673827
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            457, 450, 370, 371, 381, 456, 452, 445, 447, 441, 440, 461, 401,
            399, 443, 398, 221, 390, 220, 224, 229, 222, 448, 234, 281, 376,
            393, 311, 348, 382, 380, 287, 289, 310, 432, 392, 285, 415, 256,
            280, 250, 276, 324, 75, 74, 460, 76, 68, 339, 303, 308, 290, 302,
            327, 345, 340, 337, 425, 430, 378, 413, 82, 368, 293, 328, 423, 296,
            406, 420, 69, 471, 418, 306, 319, 307, 317, 404, 80, 343, 83, 87,
            428, 411, 467, 210, 65, 412, 63, 294, 320, 321, 329, 79, 419, 84,
            284, 405, 217, 72, 236, 469, 77, 70, 260, 252, 71, 86, 325, 438,
            439, 78, 251, 470, 274, 64, 248, 249, 351, 352, 353, 367, 273, 271,
            272, 416, 247, 246, 269, 275, 357, 361, 363, 365, 397, 1, 261, 253,
            258, 350, 53, 349, 282, 233, 255, 7, 8, 39, 279, 12, 14, 55, 231,
            94, 283, 6, 13, 313, 26, 54, 163, 164, 172, 205, 240, 241, 263, 265,
            297, 332, 333, 434, 21, 85, 103, 111, 121, 123, 125, 127, 135, 136,
            143, 149, 155, 176, 188, 193, 476, 4, 28, 30, 35, 58, 60, 97, 160,
            165, 167, 170, 477, 484, 67, 156, 158, 37, 45, 49, 57, 436, 480,
            486, 489, 491, 93, 89, 472, 474, 488
          ],
          [
            458, 449, 454, 453, 369, 455, 451, 446, 444, 379, 462, 387, 402,
            225, 227, 442, 389, 388, 226, 400, 223, 228, 377, 394, 235, 395,
            257, 372, 347, 391, 346, 309, 383, 433, 286, 373, 431, 288, 385,
            384, 396, 386, 209, 465, 464, 414, 323, 315, 73, 459, 292, 304, 322,
            291, 326, 341, 301, 300, 338, 417, 427, 336, 424, 409, 299, 314,
            335, 298, 334, 295, 330, 408, 305, 212, 213, 214, 215, 422, 342,
            316, 318, 407, 426, 216, 410, 211, 344, 88, 466, 81, 429, 66, 312,
            468, 0, 270, 356, 360, 362, 364, 366, 403, 47, 268, 52, 277, 358,
            254, 278, 46, 232, 237, 245, 5, 9, 10, 259, 11, 16, 230, 2, 38, 96,
            375, 15, 355, 374, 17, 95, 3, 354, 359, 31, 32, 238, 475, 481, 18,
            99, 218, 219, 244, 262, 267, 19, 20, 61, 62, 105, 106, 463, 42, 50,
            51, 101, 102, 177, 180, 183, 189, 194, 197, 201, 482, 494, 41, 100,
            107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 128,
            129, 131, 132, 133, 139, 140, 141, 142, 144, 145, 146, 147, 151,
            152, 153, 154, 178, 179, 181, 182, 184, 185, 190, 191, 195, 196,
            198, 199, 202, 203, 204, 206, 207, 208, 24, 25, 27, 43, 161, 168,
            171, 174, 239, 242, 243, 264, 266, 331, 421, 483, 22, 40, 104, 116,
            122, 124, 126, 130, 134, 137, 138, 148, 150, 175, 186, 187, 192,
            200, 478, 23, 29, 34, 36, 59, 90, 98, 162, 166, 169, 173, 479, 492,
            493, 157, 159, 44, 48, 56, 435, 437, 485, 487, 490, 92, 33, 91, 473
          ]
        ],
        "APSC_c": 0.8781354904950752
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            457, 371, 369, 451, 444, 462, 225, 443, 390, 224, 222, 234, 376,
            391, 380, 289, 431, 392, 256, 250, 465, 414, 315, 459, 322, 326,
            301, 337, 430, 409, 299, 293, 423, 406, 69, 214, 422, 307, 404, 426,
            410, 344, 466, 65, 63, 320, 79, 405, 236, 70, 71, 438, 470, 249,
            353, 271, 468, 269, 356, 361, 364, 397, 261, 52, 258, 358, 349, 46,
            237, 255, 7, 9, 259, 14, 230, 94, 375, 355, 17, 3, 354, 31, 238,
            481, 99, 219, 262, 20, 105, 42, 51, 177, 189, 201, 41, 108, 112,
            115, 120, 131, 139, 142, 146, 152, 178, 182, 190, 199, 203, 208, 26,
            43, 163, 168, 174, 240, 242, 264, 297, 333, 483, 22, 103, 116, 124,
            127, 135, 138, 148, 175, 187, 192, 200, 4, 30, 36, 60, 98, 165, 169,
            173, 484, 67, 158, 44, 49, 435, 480, 487, 491, 33, 472, 474
          ],
          [
            458, 453, 455, 446, 379, 461, 399, 442, 221, 223, 377, 235, 281,
            372, 346, 309, 433, 373, 385, 396, 209, 324, 74, 73, 68, 303, 290,
            327, 340, 417, 336, 413, 368, 298, 295, 408, 212, 215, 342, 317,
            216, 87, 411, 210, 412, 321, 419, 284, 72, 77, 252, 325, 439, 64,
            351, 367, 272, 247, 0, 275, 360, 363, 366, 1, 268, 277, 53, 278,
            232, 245, 5, 10, 279, 12, 16, 231, 96, 6, 15, 374, 95, 359, 32, 475,
            18, 218, 244, 267, 61, 463, 101, 180, 194, 482, 107, 110, 114, 118,
            128, 132, 140, 144, 147, 153, 179, 184, 191, 196, 204, 206, 24, 27,
            161, 171, 205, 241, 263, 266, 332, 421, 21, 85, 111, 122, 125, 130,
            136, 149, 155, 186, 188, 476, 23, 29, 35, 59, 97, 162, 167, 477,
            493, 157, 37, 48, 57, 437, 486, 490, 93, 91, 488
          ],
          [
            450, 370, 381, 452, 447, 440, 402, 227, 398, 226, 220, 229, 448,
            257, 347, 311, 382, 287, 310, 288, 384, 386, 464, 460, 292, 308,
            291, 341, 300, 425, 378, 314, 328, 296, 420, 471, 319, 318, 80, 83,
            428, 467, 66, 312, 19, 62, 106, 50, 102, 183, 197, 494, 100, 109,
            113, 117, 119, 129, 133, 141, 145, 151, 154, 181, 185, 195, 198,
            202, 207, 25, 54, 164, 172, 239, 243, 265, 331, 434, 40, 104, 121,
            123, 126, 134, 137, 143, 150, 176, 193, 478, 28, 34, 58, 90, 160,
            166, 170, 479, 492, 156, 159, 45, 56, 436, 485, 489, 92, 89, 473
          ],
          [
            449, 454, 456, 445, 441, 387, 401, 389, 388, 400, 228, 394, 395,
            393, 348, 383, 286, 432, 285, 415, 280, 276, 75, 323, 76, 339, 304,
            302, 345, 338, 427, 424, 82, 335, 334, 330, 305, 213, 418, 306, 316,
            407, 343, 211, 88, 81, 429, 294, 329, 84, 217, 469, 260, 86, 78,
            251, 274, 248, 352, 273, 416, 246, 270, 357, 362, 365, 403, 47, 253,
            350, 254, 282, 233, 8, 39, 11, 55, 2, 38, 283, 13, 313
          ]
        ],
        "APSC_c": 0.9402042895391247
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            457, 446, 461, 221, 220, 222, 376, 383, 285, 280, 465, 460, 326,
            338, 409, 293, 408, 215, 316, 343, 411, 412, 84, 469, 438, 273, 0,
            360, 403, 52, 53, 233, 231, 17, 359, 99, 19, 463, 189, 41, 110, 118,
            132, 142, 152, 181, 195, 204, 24, 161, 174, 243, 331, 104, 124, 135,
            143, 176, 476, 30, 59, 162, 173, 67, 37, 57, 487, 89
          ],
          [
            458, 447, 225, 398, 228, 395, 311, 382, 392, 276, 74, 292, 290, 345,
            378, 423, 69, 306, 404, 410, 466, 312, 486, 33
          ],
          [
            450, 456, 440, 227, 390, 377, 257, 346, 380, 385, 209, 414, 76, 322,
            301, 427, 299, 334, 305, 418, 317, 87, 66, 294, 217, 260, 78, 248,
            367, 468, 362, 1, 258, 278, 5, 39, 14, 94, 13, 3, 32, 219, 61, 101,
            194, 107, 114, 128, 140, 147, 179, 191, 202, 25, 163, 205, 263, 332,
            21, 111, 125, 136, 187, 478, 34, 60, 165, 477, 157, 48, 437, 92, 474
          ],
          [
            449, 455, 441, 399, 226, 223, 235, 347, 348, 289, 288, 256, 324, 73,
            304, 327, 417, 413, 298, 330, 213, 319, 407, 83, 467, 320, 284, 71,
            470, 352, 247, 356, 365, 268, 254, 237, 10, 12, 2, 375, 354, 238,
            262, 62, 50, 180, 482, 112, 119, 141, 151, 182, 203, 26, 164, 242,
            266, 333, 22, 121, 126, 137, 150, 188, 23, 35, 97, 167, 492, 158,
            49, 480, 490, 472
          ],
          [
            370, 381, 444, 402, 442, 229, 281, 393, 287, 310, 384, 464, 68, 308,
            341, 425, 82, 328, 420, 422, 318, 211, 81, 63, 419, 77, 325, 274,
            351, 272, 270, 363, 47, 350, 46, 245, 8, 16, 96, 15, 95, 475, 244,
            105, 51, 183, 494, 108, 115, 131, 144, 178, 184, 196, 207, 54, 171,
            240, 264, 421, 40, 122, 127, 148, 186, 200, 29, 90, 166, 479, 156,
            45, 436, 491, 473
          ],
          [
            454, 451, 462, 443, 394, 372, 433, 432, 386, 315, 339, 302, 337,
            424, 335, 296, 471, 80, 428, 429, 79, 236, 86, 64, 353, 246, 357,
            366, 253, 349, 255, 9, 11, 38, 6, 355, 31, 18, 267, 106, 102, 197,
            100, 113, 120, 133, 145, 153, 185, 198, 206, 27, 172, 241, 297, 483,
            85, 116, 130, 138, 155, 192, 4, 36, 98, 169, 484, 159, 56, 485, 93,
            488
          ],
          [
            371, 369, 445, 387, 389, 400, 448, 309, 373, 396, 75, 459, 340, 430,
            368, 406, 214, 307, 426, 344, 210, 329, 72, 252, 251, 249, 271, 269,
            361, 397, 277, 282, 7, 259, 230, 313
          ],
          [
            453, 452, 379, 401, 388, 224, 234, 391, 286, 431, 415, 250, 323,
            303, 291, 300, 336, 314, 295, 212, 342, 216, 88, 65, 321, 405, 70,
            439, 416, 275, 364, 261, 358, 232, 279, 55, 283, 374, 481, 218, 20,
            42, 177, 201, 109, 117, 129, 139, 146, 154, 190, 199, 208, 43, 168,
            239, 265, 434, 103, 123, 134, 149, 175, 193, 28, 58, 160, 170, 493,
            44, 435, 489, 91
          ]
        ],
        "APSC_c": 0.9705386231642739
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            457, 389, 448, 280, 76, 345, 368, 319, 344, 321, 71, 367, 356, 253,
            237, 55, 17, 99, 51, 100, 120, 151, 202, 163, 242, 21, 134, 192, 36,
            173, 44, 490
          ],
          [
            458, 398, 234, 373, 74, 326, 430, 295, 306, 211, 294, 260, 352, 275,
            268, 255, 16, 355, 481, 463, 107, 129, 147, 199, 161, 297, 111, 138,
            200, 97, 477, 436, 472
          ],
          [
            450, 461, 229, 393, 385, 460, 299, 305, 404, 467, 72, 439, 1, 349,
            279, 375, 219, 177, 114, 144, 190, 27, 243, 40, 135, 187, 35, 167,
            45, 491
          ],
          [
            449, 387, 390, 391, 285, 465, 73, 341, 424, 406, 316, 428, 320, 252,
            353, 357, 350, 8, 283, 475, 61, 201, 118, 145, 185, 24, 239, 483,
            116, 155, 4, 160, 156, 480, 473
          ],
          [
            370, 441, 400, 395, 310, 250, 339, 337, 328, 471, 412, 70, 351, 246,
            366, 278, 11, 6, 3, 244, 180, 108, 131, 191, 25, 264, 121, 143, 23,
            162, 157, 485, 488
          ],
          [
            454, 443, 348, 431, 276, 459, 314, 69, 80, 210, 236, 78, 273, 361,
            52, 245, 12, 13, 359, 62, 194, 119, 152, 196, 164, 421, 122, 148,
            28, 165, 158, 486
          ],
          [
            371, 379, 442, 347, 380, 464, 303, 300, 335, 212, 407, 411, 84, 86,
            0, 397, 282, 14, 313
          ],
          [
            453, 402, 221, 235, 433, 256, 68, 301, 413, 330, 307, 87, 329, 251,
            271, 362, 258, 5, 2, 374, 105, 197, 115, 146, 195, 26, 263, 85, 126,
            176, 58, 479, 49, 93
          ],
          [
            381, 444, 224, 372, 392, 323, 327, 409, 408, 317, 81, 217, 274, 272,
            360, 358, 9, 231, 18, 42, 494, 117, 142, 182, 168, 331, 130, 186,
            34, 166, 159, 487
          ],
          [
            369, 447, 222, 346, 289, 396, 308, 417, 298, 213, 318, 429, 469,
            249, 269, 403, 53, 10, 38, 95, 262, 101, 109, 132, 179, 206, 171,
            332, 123, 149, 476, 59, 484, 56, 33
          ],
          [
            456, 225, 388, 281, 383, 324, 292, 340, 82, 420, 426, 466, 284, 248,
            416, 363, 277, 7, 230, 218, 50, 41, 128, 153, 203, 172, 333, 104,
            137, 193, 60, 492, 57, 89
          ],
          [455, 440, 377, 309, 288, 386, 302, 378, 214, 216, 312],
          [
            452, 462, 228, 311, 286, 415, 414, 322, 427, 334, 215, 83, 63, 77,
            325, 247, 364, 46, 39, 94, 31, 267, 183, 110, 133, 154, 204, 43,
            240, 434, 124, 150, 478, 98, 493, 437, 474
          ],
          [
            451, 401, 223, 376, 432, 75, 290, 425, 423, 418, 343, 65, 405, 470,
            270, 47, 232, 96, 32, 20, 189, 112, 139, 178, 198, 54, 241, 22, 127,
            188, 90, 67, 435, 91
          ],
          [
            445, 227, 226, 394, 287, 384, 304, 338, 293, 422, 410, 66, 419, 438,
            365, 254, 259, 15, 354, 19, 102, 113, 140, 181, 207, 174, 265, 125,
            175, 29, 169, 37, 489
          ],
          [
            446, 399, 220, 257, 382, 209, 315, 291, 336, 296, 342, 88, 79, 64,
            468, 261, 233, 238, 106, 482, 141, 184, 208, 205, 266, 103, 136, 30,
            170, 48, 92
          ]
        ],
        "APSC_c": 0.985025234844103
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            458, 370, 371, 369, 452, 445, 444, 462, 402, 399, 442, 388, 390,
            224, 377, 448, 257, 372, 311, 309, 383, 286, 310, 431, 392, 415,
            396, 276, 324, 414, 460, 68, 292, 308, 291, 327, 301, 300, 425, 336,
            424, 82, 314, 298, 334, 296, 408, 69, 214, 418, 306, 307, 318, 426,
            343, 211, 344, 466, 210, 66, 312, 259, 12, 55, 231, 283, 6, 313,
            157, 37, 48, 57, 437, 486, 490, 93, 91, 474
          ],
          [
            457, 450, 449, 454, 453, 381, 456, 455, 451, 446, 447, 441, 379,
            440, 461, 387, 401, 225, 227, 443, 389, 398, 221, 226, 400, 220,
            223, 228, 229, 222, 394, 235, 234, 395, 281, 376, 393, 347, 391,
            346, 348, 382, 380, 433, 287, 289, 373, 432, 288, 385, 285, 384,
            256, 280, 386, 250, 209, 465, 464, 75, 74, 323, 315, 73, 76, 459,
            339, 303, 304, 322, 290, 302, 326, 341, 345, 340, 337, 338, 417,
            427, 430, 378, 409, 413, 299, 368, 335, 293, 328, 423, 295, 330,
            406, 420, 305, 212, 213, 471, 215, 422, 342, 319, 316, 317, 404,
            407, 80, 216, 410, 83, 87, 428, 88, 411, 467, 81, 429, 65, 412, 63,
            294, 320, 321, 329, 79, 419, 84, 284, 405, 217, 72, 236, 469, 77,
            70, 260, 252, 71, 86, 325, 438, 439, 78, 251, 470, 274, 64, 248,
            249, 351, 352, 353, 367, 273, 271, 272, 416, 468, 247, 246, 0, 269,
            270, 275, 356, 357, 360, 361, 362, 363, 364, 365, 366, 397, 403, 1,
            47, 261, 268, 253, 52, 258, 277, 350, 358, 53, 254, 349, 278, 282,
            46, 232, 233, 237, 245, 255, 5, 7, 8, 9, 10, 39, 279, 11, 14, 16,
            230, 2, 38, 94, 96, 375, 13, 15, 355, 374, 17, 95, 3, 354, 359, 31,
            32, 238, 475, 481, 18, 99, 218, 219, 244, 262, 267, 19, 20, 61, 62,
            105, 106, 463, 42, 50, 51, 101, 102, 177, 180, 183, 189, 194, 197,
            201, 482, 494, 41, 100, 107, 108, 109, 110, 112, 113, 114, 115, 117,
            118, 119, 120, 128, 129, 131, 132, 133, 139, 140, 141, 142, 144,
            145, 146, 147, 151, 152, 153, 154, 178, 179, 181, 182, 184, 185,
            190, 191, 195, 196, 198, 199, 202, 203, 204, 206, 207, 208, 24, 25,
            26, 27, 43, 54, 161, 163, 164, 168, 171, 172, 174, 205, 239, 240,
            241, 242, 243, 263, 264, 265, 266, 297, 331, 332, 333, 421, 434,
            483, 21, 22, 40, 85, 103, 104, 111, 116, 121, 122, 123, 124, 125,
            126, 127, 130, 134, 135, 136, 137, 138, 143, 148, 149, 150, 155,
            175, 176, 186, 187, 188, 192, 193, 200, 476, 478, 4, 23, 28, 29, 30,
            34, 35, 36, 58, 59, 60, 90, 97, 98, 160, 162, 165, 166, 167, 169,
            170, 173, 477, 479, 484, 492, 493, 67, 156, 158, 159, 44, 45, 49,
            56, 435, 436, 480, 485, 487, 489, 491, 92, 33, 89, 472, 473, 488
          ]
        ],
        "APSC_c": 0.9198903707229684
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            458, 371, 369, 452, 447, 462, 225, 443, 390, 228, 394, 234, 372,
            311, 383, 289, 432, 285, 415, 280, 276, 75, 460, 292, 308, 302, 345,
            338, 430, 424, 299, 293, 295, 408, 212, 214, 422, 307, 318, 216, 87,
            411, 429, 312, 355, 374, 17, 95, 3, 354, 359, 31, 32, 238, 475, 481,
            18, 99, 218, 219, 244, 262, 267, 19, 20, 106, 51, 177, 197, 494,
            107, 112, 117, 120, 132, 141, 147, 154, 182, 196, 204, 208, 26, 163,
            171, 239, 243, 266, 332, 21, 104, 121, 125, 135, 138, 149, 176, 193,
            23, 30, 58, 97, 165, 170, 484, 156, 37, 49, 436, 486, 491, 89, 474
          ],
          [
            457, 450, 449, 370, 454, 453, 381, 456, 455, 451, 445, 446, 444,
            441, 379, 440, 461, 387, 402, 401, 399, 227, 442, 389, 398, 388,
            221, 226, 400, 220, 223, 224, 229, 377, 222, 448, 235, 395, 281,
            257, 376, 393, 347, 391, 346, 348, 309, 382, 380, 433, 287, 286,
            373, 310, 431, 288, 392, 385, 384, 256, 396, 386, 250, 209, 465,
            324, 464, 414, 74, 323, 315, 73, 76, 459, 68, 339, 303, 304, 322,
            290, 291, 326, 327, 341, 301, 340, 300, 337, 417, 425, 427, 336,
            378, 409, 413, 82, 368, 314, 335, 298, 328, 334, 423, 296, 330, 406,
            420, 305, 69, 213, 471, 215, 418, 306, 342, 319, 316, 317, 404, 407,
            426, 80, 343, 410, 83, 211, 344, 428, 88, 466, 467, 81, 210, 65, 66,
            412, 63, 294, 320, 321, 329, 79, 419, 84, 284, 405, 217, 72, 236,
            469, 77, 70, 260, 252, 71, 86, 325, 438, 439, 78, 251, 470, 274, 64,
            248, 249, 351, 352, 353, 367, 273, 271, 272, 416, 468, 247, 246, 0,
            269, 270, 275, 356, 357, 360, 361, 362, 363, 364, 365, 366, 397,
            403, 1, 47, 261, 268, 253, 52, 258, 277, 350, 358, 53, 254, 349,
            278, 282, 46, 232, 233, 237, 245, 255, 5, 7, 8, 9, 10, 39, 259, 279,
            11, 12, 14, 16, 55, 230, 231, 2, 38, 94, 96, 283, 375, 6, 13, 15,
            313, 61, 62, 105, 463, 42, 50, 101, 102, 180, 183, 189, 194, 201,
            482, 41, 100, 108, 109, 110, 113, 114, 115, 118, 119, 128, 129, 131,
            133, 139, 140, 142, 144, 145, 146, 151, 152, 153, 178, 179, 181,
            184, 185, 190, 191, 195, 198, 199, 202, 203, 206, 207, 24, 25, 27,
            43, 54, 161, 164, 168, 172, 174, 205, 240, 241, 242, 263, 264, 265,
            297, 331, 333, 421, 434, 483, 22, 40, 85, 103, 111, 116, 122, 123,
            124, 126, 127, 130, 134, 136, 137, 143, 148, 150, 155, 175, 186,
            187, 188, 192, 200, 476, 478, 4, 28, 29, 34, 35, 36, 59, 60, 90, 98,
            160, 162, 166, 167, 169, 173, 477, 479, 492, 493, 67, 157, 158, 159,
            44, 45, 48, 56, 57, 435, 437, 480, 485, 487, 489, 490, 92, 93, 33,
            91, 472, 473, 488
          ]
        ],
        "APSC_c": 0.9388060753044771
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [
            458, 453, 451, 444, 387, 227, 389, 390, 377, 234, 393, 309, 433,
            310, 392, 396, 465, 74, 315, 68, 304, 302, 301, 417, 336, 413, 314,
            334, 406, 212, 214, 342, 404, 343, 344, 467, 412, 63, 294, 320, 321,
            329, 79, 419, 84, 72, 70, 325, 251, 248, 353, 468, 356, 363, 397,
            253, 358, 282, 237, 8, 11, 230, 6, 355, 374, 17, 95, 3, 354, 359,
            31, 32, 238, 475, 481, 18, 99, 218, 219, 244, 262, 267, 19, 20, 61,
            105, 50, 177, 201, 107, 113, 119, 133, 142, 151, 179, 185, 198, 206,
            26, 164, 240, 263, 331, 40, 116, 126, 135, 143, 176, 200, 28, 36,
            97, 166, 477, 156, 44, 57, 485, 491, 91
          ],
          [
            457, 450, 449, 370, 454, 371, 381, 369, 456, 455, 452, 445, 446,
            447, 441, 379, 440, 462, 461, 402, 401, 225, 399, 443, 442, 398,
            388, 221, 226, 400, 220, 223, 224, 228, 229, 222, 394, 448, 235,
            395, 281, 257, 376, 372, 347, 391, 311, 346, 348, 382, 383, 380,
            287, 286, 289, 373, 432, 431, 288, 385, 285, 384, 415, 256, 280,
            386, 250, 276, 209, 324, 464, 75, 414, 323, 460, 73, 76, 459, 339,
            292, 303, 308, 322, 290, 291, 326, 327, 341, 345, 340, 300, 337,
            338, 425, 427, 430, 378, 424, 409, 82, 299, 368, 335, 293, 298, 328,
            423, 295, 296, 330, 408, 420, 305, 69, 213, 471, 215, 418, 422, 306,
            319, 307, 316, 317, 318, 407, 426, 80, 216, 410, 83, 211, 87, 428,
            88, 411, 466, 81, 210, 429, 65, 66, 312, 284, 405, 217, 236, 469,
            77, 260, 252, 71, 86, 438, 439, 78, 470, 274, 64, 249, 351, 352,
            367, 273, 271, 272, 416, 247, 246, 0, 269, 270, 275, 357, 360, 361,
            362, 364, 365, 366, 403, 1, 47, 261, 268, 52, 258, 277, 350, 53,
            254, 349, 278, 46, 232, 233, 245, 255, 5, 7, 9, 10, 39, 259, 279,
            12, 14, 16, 55, 231, 2, 38, 94, 96, 283, 375, 13, 15, 313, 62, 106,
            463, 42, 51, 101, 102, 180, 183, 189, 194, 197, 482, 494, 41, 100,
            108, 109, 110, 112, 114, 115, 117, 118, 120, 128, 129, 131, 132,
            139, 140, 141, 144, 145, 146, 147, 152, 153, 154, 178, 181, 182,
            184, 190, 191, 195, 196, 199, 202, 203, 204, 207, 208, 24, 25, 27,
            43, 54, 161, 163, 168, 171, 172, 174, 205, 239, 241, 242, 243, 264,
            265, 266, 297, 332, 333, 421, 434, 483, 21, 22, 85, 103, 104, 111,
            121, 122, 123, 124, 125, 127, 130, 134, 136, 137, 138, 148, 149,
            150, 155, 175, 186, 187, 188, 192, 193, 476, 478, 4, 23, 29, 30, 34,
            35, 58, 59, 60, 90, 98, 160, 162, 165, 167, 169, 170, 173, 479, 484,
            492, 493, 67, 157, 158, 159, 37, 45, 48, 49, 56, 435, 436, 437, 480,
            486, 487, 489, 490, 92, 93, 33, 89, 472, 473, 474, 488
          ]
        ],
        "APSC_c": 0.9507619197853908
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [
            370, 441, 229, 348, 385, 304, 409, 213, 426, 66, 284, 274, 247, 366,
            282, 230, 18, 106, 197, 114, 142, 190, 54, 263, 116, 149, 28, 173,
            45, 93
          ],
          [
            454, 442, 433, 250, 308, 378, 316, 81, 405, 251, 468, 52, 233, 238,
            105, 183, 109, 131, 195, 43, 242, 40, 135, 192, 60, 157, 487
          ],
          [
            371, 379, 221, 281, 289, 386, 338, 423, 342, 65, 217, 470, 362, 53,
            9, 96, 354, 262, 50, 482, 132, 181, 208, 174, 331, 138, 476, 90,
            158, 489
          ],
          [
            453, 402, 224, 309, 285, 74, 326, 413, 420, 80, 320, 325, 246, 397,
            46, 259, 13, 359, 20, 177, 110, 133, 153, 204, 168, 332, 125, 187,
            36, 492, 57, 472
          ],
          [
            457, 456, 446, 462, 401, 389, 226, 223, 394, 395, 393, 382, 286,
            431, 392, 280, 465, 414, 73, 68, 292, 322, 341, 300, 427, 424, 335,
            334, 330, 69, 418, 306, 318, 410, 87, 467, 312, 120, 139, 144, 147,
            154, 184, 191, 199, 206, 25, 161, 172, 240, 243, 266, 333, 483, 85,
            111, 123, 127, 136, 150, 176, 200, 23, 30, 59, 160, 166, 169, 477,
            67, 159, 48, 435, 480, 490, 33, 473
          ],
          [
            458, 455, 445, 440, 225, 443, 220, 222, 234, 376, 311, 383, 432,
            415, 396, 464, 315, 76, 339, 290, 327, 340, 425, 299, 293, 295, 408,
            471, 307, 407, 83, 428, 411, 429, 294, 79, 236, 70, 71, 439, 249,
            353, 271, 269, 356, 361, 364, 47, 253, 277, 254, 232, 7, 39, 12, 55,
            38, 283, 15, 355, 17, 3, 31, 475, 99, 244, 19, 61, 42, 51, 102, 189,
            201, 41, 107, 112, 115, 119, 129, 141, 146, 152, 179, 185, 196, 202,
            207, 26, 163, 171, 239, 264, 297, 434, 22, 104, 122, 126, 134, 143,
            155, 186, 193, 4, 34, 58, 98, 165, 167, 479, 493, 37, 49, 436, 485,
            491, 89, 474
          ],
          [
            450, 381, 451, 444, 461, 227, 398, 400, 228, 448, 372, 346, 380,
            310, 288, 256, 276, 75, 460, 303, 302, 301, 337, 430, 82, 314, 328,
            406, 212, 215, 319, 404, 343, 211, 88, 210, 63, 329, 84, 469, 260,
            86, 78, 64, 352, 273, 416, 270, 357, 363, 403, 261, 258, 358, 278,
            245, 255, 8, 11, 16, 2, 94, 6, 313
          ],
          [
            449, 369, 452, 447, 387, 399, 388, 390, 377, 235, 257, 347, 391,
            287, 373, 384, 209, 324, 323, 459, 291, 345, 417, 336, 368, 298,
            296, 305, 214, 422, 317, 216, 344, 466, 412, 321, 419, 72, 77, 252,
            438, 248, 351, 367, 272, 0, 275, 360, 365, 1, 268, 350, 349, 237, 5,
            10, 279, 14, 231, 375, 374, 95, 32, 481, 218, 219, 267, 62, 463,
            101, 180, 194, 494, 100, 108, 113, 117, 118, 128, 140, 145, 151,
            178, 182, 198, 203, 24, 27, 164, 205, 241, 265, 421, 21, 103, 121,
            124, 130, 137, 148, 175, 188, 478, 29, 35, 97, 162, 170, 484, 156,
            44, 56, 437, 486, 92, 91, 488
          ]
        ],
        "APSC_c": 0.9880446610462136
      }
    ]
  },
  {
    "filename": "dius_java-faker.json",
    "name_to_id": {
      "com.github.javafaker.AddressTest#testCity": 0,
      "com.github.javafaker.AddressTest#testCityName": 1,
      "com.github.javafaker.AddressTest#testCityWithLocaleFranceAndSeed": 2,
      "com.github.javafaker.AddressTest#testCountry": 3,
      "com.github.javafaker.AddressTest#testCountryCode": 4,
      "com.github.javafaker.AddressTest#testCountyByZipCode": 5,
      "com.github.javafaker.AddressTest#testFullAddress": 6,
      "com.github.javafaker.AddressTest#testHungarianZipCodeByState": 7,
      "com.github.javafaker.AddressTest#testLatitude": 8,
      "com.github.javafaker.AddressTest#testLongitude": 9,
      "com.github.javafaker.AddressTest#testState": 10,
      "com.github.javafaker.AddressTest#testStreetAddressIncludeSecondary": 11,
      "com.github.javafaker.AddressTest#testStreetAddressIsANumber": 12,
      "com.github.javafaker.AddressTest#testStreetAddressStartsWithNumber": 13,
      "com.github.javafaker.AddressTest#testStreetPrefix": 14,
      "com.github.javafaker.AddressTest#testTimeZone": 15,
      "com.github.javafaker.AddressTest#testZipCodeByState": 16,
      "com.github.javafaker.AncientTest#god": 17,
      "com.github.javafaker.AncientTest#hero": 18,
      "com.github.javafaker.AncientTest#primordial": 19,
      "com.github.javafaker.AncientTest#titan": 20,
      "com.github.javafaker.AnimalTest#name": 21,
      "com.github.javafaker.AppTest#testAuthor": 22,
      "com.github.javafaker.AppTest#testName": 23,
      "com.github.javafaker.AppTest#testVersion": 24,
      "com.github.javafaker.AquaTeenHungerForceTest#character": 25,
      "com.github.javafaker.ArtistTest#name": 26,
      "com.github.javafaker.AvatarTest#testAvatar": 27,
      "com.github.javafaker.AviationTest#aircraft": 28,
      "com.github.javafaker.AviationTest#airport": 29,
      "com.github.javafaker.AviationTest#metar": 30,
      "com.github.javafaker.BackToTheFutureTest#character": 31,
      "com.github.javafaker.BackToTheFutureTest#date": 32,
      "com.github.javafaker.BackToTheFutureTest#quote": 33,
      "com.github.javafaker.BarcodeTest#data": 34,
      "com.github.javafaker.BarcodeTest#type": 35,
      "com.github.javafaker.BarcodeTest#typeAndData": 36,
      "com.github.javafaker.BasketballTest#testCoaches": 37,
      "com.github.javafaker.BasketballTest#testCoachesWith10000Times": 38,
      "com.github.javafaker.BasketballTest#testPlayers": 39,
      "com.github.javafaker.BasketballTest#testPlayersWith10000Times": 40,
      "com.github.javafaker.BasketballTest#testPositions": 41,
      "com.github.javafaker.BasketballTest#testPositionsWith10000Times": 42,
      "com.github.javafaker.BasketballTest#testTeams": 43,
      "com.github.javafaker.BasketballTest#testTeamsWith10000Times": 44,
      "com.github.javafaker.BeerTest#testHop": 45,
      "com.github.javafaker.BeerTest#testMalt": 46,
      "com.github.javafaker.BeerTest#testName": 47,
      "com.github.javafaker.BeerTest#testStyle": 48,
      "com.github.javafaker.BeerTest#testYeast": 49,
      "com.github.javafaker.BojackHorsemanTest#testCharacters1": 50,
      "com.github.javafaker.BojackHorsemanTest#testCharactersWith10000Times": 51,
      "com.github.javafaker.BojackHorsemanTest#testQuotes1": 52,
      "com.github.javafaker.BojackHorsemanTest#testQuotesWith10000Times": 53,
      "com.github.javafaker.BojackHorsemanTest#testTongueTwisters1": 54,
      "com.github.javafaker.BojackHorsemanTest#testTongueTwistersWith10000Times": 55,
      "com.github.javafaker.BookTest#testAuthor": 56,
      "com.github.javafaker.BookTest#testGenre": 57,
      "com.github.javafaker.BookTest#testPublisher": 58,
      "com.github.javafaker.BookTest#testTitle": 59,
      "com.github.javafaker.BoolTest#testBool": 60,
      "com.github.javafaker.BuffyTest#testBigBads": 61,
      "com.github.javafaker.BuffyTest#testCelebrities": 62,
      "com.github.javafaker.BuffyTest#testCharacters": 63,
      "com.github.javafaker.BuffyTest#testEpisodes": 64,
      "com.github.javafaker.BuffyTest#testQuotes": 65,
      "com.github.javafaker.BusinessTest#creditCardExpiry": 66,
      "com.github.javafaker.BusinessTest#creditCardNumber": 67,
      "com.github.javafaker.BusinessTest#creditCardType": 68,
      "com.github.javafaker.CatTest#breed": 69,
      "com.github.javafaker.CatTest#name": 70,
      "com.github.javafaker.CatTest#registry": 71,
      "com.github.javafaker.ChuckNorrisTest#testFact": 72,
      "com.github.javafaker.CodeTest#asin": 73,
      "com.github.javafaker.CodeTest#ean13": 74,
      "com.github.javafaker.CodeTest#ean8": 75,
      "com.github.javafaker.CodeTest#gtin13": 76,
      "com.github.javafaker.CodeTest#gtin8": 77,
      "com.github.javafaker.CodeTest#imei": 78,
      "com.github.javafaker.CodeTest#isbn10DefaultIsNoSeparator": 79,
      "com.github.javafaker.CodeTest#isbn13DefaultIsNoSeparator": 80,
      "com.github.javafaker.CodeTest#testIsbn10": 81,
      "com.github.javafaker.CodeTest#testIsbn13": 82,
      "com.github.javafaker.CodeTest#testOverrides": 83,
      "com.github.javafaker.CoinTest#coinFlip": 84,
      "com.github.javafaker.ColorTest#testHex": 85,
      "com.github.javafaker.ColorTest#testHexNoHashSign": 86,
      "com.github.javafaker.ColorTest#testName": 87,
      "com.github.javafaker.CommerceTest#testColor": 88,
      "com.github.javafaker.CommerceTest#testDepartment": 89,
      "com.github.javafaker.CommerceTest#testMaterial": 90,
      "com.github.javafaker.CommerceTest#testPrice": 91,
      "com.github.javafaker.CommerceTest#testPriceMinMax": 92,
      "com.github.javafaker.CommerceTest#testProductName": 93,
      "com.github.javafaker.CommerceTest#testPromotionCode": 94,
      "com.github.javafaker.CommerceTest#testPromotionCodeDigits": 95,
      "com.github.javafaker.CompanyTest#testBs": 96,
      "com.github.javafaker.CompanyTest#testBuzzword": 97,
      "com.github.javafaker.CompanyTest#testCatchPhrase": 98,
      "com.github.javafaker.CompanyTest#testIndustry": 99,
      "com.github.javafaker.CompanyTest#testLogo": 100,
      "com.github.javafaker.CompanyTest#testName": 101,
      "com.github.javafaker.CompanyTest#testProfession": 102,
      "com.github.javafaker.CompanyTest#testSuffix": 103,
      "com.github.javafaker.CompanyTest#testUrl": 104,
      "com.github.javafaker.CountryTest#testCapital": 105,
      "com.github.javafaker.CountryTest#testCode2": 106,
      "com.github.javafaker.CountryTest#testCode3": 107,
      "com.github.javafaker.CountryTest#testCurrency": 108,
      "com.github.javafaker.CountryTest#testCurrencyCode": 109,
      "com.github.javafaker.CountryTest#testFlag": 110,
      "com.github.javafaker.CountryTest#testName": 111,
      "com.github.javafaker.CryptoTest#testMd5": 112,
      "com.github.javafaker.CryptoTest#testSha1": 113,
      "com.github.javafaker.CryptoTest#testSha256": 114,
      "com.github.javafaker.CryptoTest#testSha512": 115,
      "com.github.javafaker.CurrencyTest#testCode": 116,
      "com.github.javafaker.CurrencyTest#testName": 117,
      "com.github.javafaker.DateAndTimeTest#testBetween": 118,
      "com.github.javafaker.DateAndTimeTest#testBetweenThenLargerThanNow": 119,
      "com.github.javafaker.DateAndTimeTest#testBirthday": 120,
      "com.github.javafaker.DateAndTimeTest#testBirthdayWithAges": 121,
      "com.github.javafaker.DateAndTimeTest#testFutureDate": 122,
      "com.github.javafaker.DateAndTimeTest#testFutureDateWithMinimum": 123,
      "com.github.javafaker.DateAndTimeTest#testPastDate": 124,
      "com.github.javafaker.DateAndTimeTest#testPastDateWithMinimum": 125,
      "com.github.javafaker.DateAndTimeTest#testPastDateWithReferenceDate": 126,
      "com.github.javafaker.DemographicTest#demonym": 127,
      "com.github.javafaker.DemographicTest#educationalAttainment": 128,
      "com.github.javafaker.DemographicTest#maritalStatus": 129,
      "com.github.javafaker.DemographicTest#race": 130,
      "com.github.javafaker.DemographicTest#sex": 131,
      "com.github.javafaker.DiseaseTest#testDermatolory": 132,
      "com.github.javafaker.DiseaseTest#testDermatoloryWith10000Times": 133,
      "com.github.javafaker.DiseaseTest#testGynecologyAndObstetrics": 134,
      "com.github.javafaker.DiseaseTest#testGynecologyAndObstetricsWith10000Times": 135,
      "com.github.javafaker.DiseaseTest#testInternalDisease": 136,
      "com.github.javafaker.DiseaseTest#testInternalDiseaseWith10000Times": 137,
      "com.github.javafaker.DiseaseTest#testNeurology": 138,
      "com.github.javafaker.DiseaseTest#testNeurologyWith10000Times": 139,
      "com.github.javafaker.DiseaseTest#testOphthalmologyAndOtorhinolaryngology": 140,
      "com.github.javafaker.DiseaseTest#testOphthalmologyAndOtorhinolaryngologyWith10000Times": 141,
      "com.github.javafaker.DiseaseTest#testPaediatrics": 142,
      "com.github.javafaker.DiseaseTest#testPaediatricsWith10000Times": 143,
      "com.github.javafaker.DiseaseTest#testSurgery": 144,
      "com.github.javafaker.DiseaseTest#testSurgeryWith10000Times": 145,
      "com.github.javafaker.DogTest#age": 146,
      "com.github.javafaker.DogTest#breed": 147,
      "com.github.javafaker.DogTest#coatLength": 148,
      "com.github.javafaker.DogTest#gender": 149,
      "com.github.javafaker.DogTest#memePhrase": 150,
      "com.github.javafaker.DogTest#name": 151,
      "com.github.javafaker.DogTest#size": 152,
      "com.github.javafaker.DogTest#sound": 153,
      "com.github.javafaker.DragonBallTest#character": 154,
      "com.github.javafaker.DuneTest#character": 155,
      "com.github.javafaker.DuneTest#planet": 156,
      "com.github.javafaker.DuneTest#quote": 157,
      "com.github.javafaker.DuneTest#randomQuote": 158,
      "com.github.javafaker.DuneTest#randomSaying": 159,
      "com.github.javafaker.DuneTest#saying": 160,
      "com.github.javafaker.DuneTest#title": 161,
      "com.github.javafaker.EducatorTest#testCampus": 162,
      "com.github.javafaker.EducatorTest#testCourse": 163,
      "com.github.javafaker.EducatorTest#testSecondarySchool": 164,
      "com.github.javafaker.EducatorTest#testUniversity": 165,
      "com.github.javafaker.ElderScrollsTest#testCity": 166,
      "com.github.javafaker.ElderScrollsTest#testCreature": 167,
      "com.github.javafaker.ElderScrollsTest#testDragon": 168,
      "com.github.javafaker.ElderScrollsTest#testFirstName": 169,
      "com.github.javafaker.ElderScrollsTest#testLastName": 170,
      "com.github.javafaker.ElderScrollsTest#testQuote": 171,
      "com.github.javafaker.ElderScrollsTest#testRace": 172,
      "com.github.javafaker.ElderScrollsTest#testRegion": 173,
      "com.github.javafaker.EnglandFootBallTest#testLeague": 174,
      "com.github.javafaker.EnglandFootBallTest#testTeam": 175,
      "com.github.javafaker.EsportsTest#event": 176,
      "com.github.javafaker.EsportsTest#game": 177,
      "com.github.javafaker.EsportsTest#league": 178,
      "com.github.javafaker.EsportsTest#player": 179,
      "com.github.javafaker.EsportsTest#team": 180,
      "com.github.javafaker.FakerTest#badExpressionCouldntCoerce": 181,
      "com.github.javafaker.FakerTest#badExpressionTooFewArgs": 182,
      "com.github.javafaker.FakerTest#badExpressionTooManyArgs": 183,
      "com.github.javafaker.FakerTest#bothifyShouldGenerateLettersAndNumbers": 184,
      "com.github.javafaker.FakerTest#expression": 185,
      "com.github.javafaker.FakerTest#fakerInstanceCanBeAcquiredViaUtilityMethods": 186,
      "com.github.javafaker.FakerTest#letterifyShouldGenerateLetters": 187,
      "com.github.javafaker.FakerTest#letterifyShouldGenerateUpperCaseLetters": 188,
      "com.github.javafaker.FakerTest#letterifyShouldLeaveNonSpecialCharactersAlone": 189,
      "com.github.javafaker.FakerTest#numberBetweenRepeated": 190,
      "com.github.javafaker.FakerTest#numerifyShouldGenerateNumbers": 191,
      "com.github.javafaker.FakerTest#numerifyShouldLeaveNonSpecialCharactersAlone": 192,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateAlternations": 193,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateBasicCharacterClasses": 194,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateBracketsQuantifiers": 195,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateBracketsQuantifiersOnAlternations": 196,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateBracketsQuantifiersOnBasicCharacterClasses": 197,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateBracketsQuantifiersOnCharacterClassRanges": 198,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateCharacterClassRanges": 199,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateEscapedCharacters": 200,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateLetters": 201,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateMinMaxQuantifiers": 202,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateMultipleCharacterClassRanges": 203,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateNumbers": 204,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateSameValueForFakerWithSameSeed": 205,
      "com.github.javafaker.FakerTest#regexifyShouldGenerateSingleCharacterQuantifiers": 206,
      "com.github.javafaker.FakerTest#resolveShouldReturnValueThatExists": 207,
      "com.github.javafaker.FakerTest#resolveShouldThrowExceptionWhenPropertyDoesntExist": 208,
      "com.github.javafaker.FileTest#testExtension": 209,
      "com.github.javafaker.FileTest#testFileName": 210,
      "com.github.javafaker.FileTest#testFileNameSpecifyDir": 211,
      "com.github.javafaker.FileTest#testFileNameSpecifyExtension": 212,
      "com.github.javafaker.FileTest#testFileNameSpecifyName": 213,
      "com.github.javafaker.FileTest#testFileNameSpecifySeparator": 214,
      "com.github.javafaker.FileTest#testMimeTypeFormat": 215,
      "com.github.javafaker.FinanceTest#bic": 216,
      "com.github.javafaker.FinanceTest#creditCard": 217,
      "com.github.javafaker.FinanceTest#creditCardWithType": 218,
      "com.github.javafaker.FinanceTest#iban": 219,
      "com.github.javafaker.FinanceTest#ibanWithCountryCode": 220,
      "com.github.javafaker.FoodTest#dish": 221,
      "com.github.javafaker.FoodTest#fruit": 222,
      "com.github.javafaker.FoodTest#ingredient": 223,
      "com.github.javafaker.FoodTest#measurement": 224,
      "com.github.javafaker.FoodTest#spice": 225,
      "com.github.javafaker.FoodTest#sushi": 226,
      "com.github.javafaker.FoodTest#vegetable": 227,
      "com.github.javafaker.FriendsTest#character": 228,
      "com.github.javafaker.FriendsTest#location": 229,
      "com.github.javafaker.FriendsTest#quote": 230,
      "com.github.javafaker.FunnyNameTest#name": 231,
      "com.github.javafaker.GameOfThronesTest#character": 232,
      "com.github.javafaker.GameOfThronesTest#city": 233,
      "com.github.javafaker.GameOfThronesTest#dragon": 234,
      "com.github.javafaker.GameOfThronesTest#house": 235,
      "com.github.javafaker.GameOfThronesTest#quote": 236,
      "com.github.javafaker.GenderTest#binaryTypes": 237,
      "com.github.javafaker.GenderTest#shortBinaryTypes": 238,
      "com.github.javafaker.GenderTest#types": 239,
      "com.github.javafaker.HackerTest#testAbbreviation": 240,
      "com.github.javafaker.HackerTest#testAdjective": 241,
      "com.github.javafaker.HackerTest#testIngverb": 242,
      "com.github.javafaker.HackerTest#testNoun": 243,
      "com.github.javafaker.HackerTest#testVerb": 244,
      "com.github.javafaker.HarryPotterTest#book": 245,
      "com.github.javafaker.HarryPotterTest#character": 246,
      "com.github.javafaker.HarryPotterTest#house": 247,
      "com.github.javafaker.HarryPotterTest#location": 248,
      "com.github.javafaker.HarryPotterTest#quote": 249,
      "com.github.javafaker.HarryPotterTest#spell": 250,
      "com.github.javafaker.HipsterTest#word": 251,
      "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#character": 252,
      "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#location": 253,
      "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#marvinQuote": 254,
      "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#planet": 255,
      "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#quote": 256,
      "com.github.javafaker.HitchhikersGuideToTheGalaxyTest#specie": 257,
      "com.github.javafaker.HobbitTest#character": 258,
      "com.github.javafaker.HobbitTest#location": 259,
      "com.github.javafaker.HobbitTest#quote": 260,
      "com.github.javafaker.HobbitTest#thorinsCompany": 261,
      "com.github.javafaker.HowIMetYourMotherTest#catchPhrase": 262,
      "com.github.javafaker.HowIMetYourMotherTest#character": 263,
      "com.github.javafaker.HowIMetYourMotherTest#highFive": 264,
      "com.github.javafaker.HowIMetYourMotherTest#quote": 265,
      "com.github.javafaker.IdNumberTest#testInvalid": 266,
      "com.github.javafaker.IdNumberTest#testInvalidSwedishSsn": 267,
      "com.github.javafaker.IdNumberTest#testSsnValid": 268,
      "com.github.javafaker.IdNumberTest#testValid": 269,
      "com.github.javafaker.IdNumberTest#testValidSwedishSsn": 270,
      "com.github.javafaker.InternetTest#testAvatar": 271,
      "com.github.javafaker.InternetTest#testDomainName": 272,
      "com.github.javafaker.InternetTest#testDomainSuffix": 273,
      "com.github.javafaker.InternetTest#testDomainWord": 274,
      "com.github.javafaker.InternetTest#testEmailAddress": 275,
      "com.github.javafaker.InternetTest#testEmailAddressDoesNotIncludeAccentsInTheLocalPart": 276,
      "com.github.javafaker.InternetTest#testEmailAddressWithLocalPartParameter": 277,
      "com.github.javafaker.InternetTest#testFarsiIDNs": 278,
      "com.github.javafaker.InternetTest#testImage": 279,
      "com.github.javafaker.InternetTest#testImageWithExplicitParams": 280,
      "com.github.javafaker.InternetTest#testIpV4Address": 281,
      "com.github.javafaker.InternetTest#testIpV4Cidr": 282,
      "com.github.javafaker.InternetTest#testIpV6": 283,
      "com.github.javafaker.InternetTest#testIpV6Cidr": 284,
      "com.github.javafaker.InternetTest#testMacAddress": 285,
      "com.github.javafaker.InternetTest#testPassword": 286,
      "com.github.javafaker.InternetTest#testPasswordIncludeDigit": 287,
      "com.github.javafaker.InternetTest#testPasswordMinLengthMaxLength": 288,
      "com.github.javafaker.InternetTest#testPasswordMinLengthMaxLengthIncludeUpperCase": 289,
      "com.github.javafaker.InternetTest#testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecial": 290,
      "com.github.javafaker.InternetTest#testPasswordMinLengthMaxLengthIncludeUpperCaseIncludeSpecialIncludeDigit": 291,
      "com.github.javafaker.InternetTest#testPrivateIpV4Address": 292,
      "com.github.javafaker.InternetTest#testPublicIpV4Address": 293,
      "com.github.javafaker.InternetTest#testSafeEmailAddress": 294,
      "com.github.javafaker.InternetTest#testSafeEmailAddressDoesNotIncludeAccentsInTheLocalPart": 295,
      "com.github.javafaker.InternetTest#testSafeEmailAddressWithLocalPartParameter": 296,
      "com.github.javafaker.InternetTest#testSlug": 297,
      "com.github.javafaker.InternetTest#testSlugWithNull": 298,
      "com.github.javafaker.InternetTest#testSlugWithParams": 299,
      "com.github.javafaker.InternetTest#testUrl": 300,
      "com.github.javafaker.InternetTest#testUserAgent": 301,
      "com.github.javafaker.InternetTest#testUuid": 302,
      "com.github.javafaker.JobTest#field": 303,
      "com.github.javafaker.JobTest#keySkills": 304,
      "com.github.javafaker.JobTest#position": 305,
      "com.github.javafaker.JobTest#seniority": 306,
      "com.github.javafaker.JobTest#title": 307,
      "com.github.javafaker.KaamelottTest#testCharacter": 308,
      "com.github.javafaker.KaamelottTest#testQuote": 309,
      "com.github.javafaker.LeagueOfLegendsTest#champion": 310,
      "com.github.javafaker.LeagueOfLegendsTest#location": 311,
      "com.github.javafaker.LeagueOfLegendsTest#masteries": 312,
      "com.github.javafaker.LeagueOfLegendsTest#quote": 313,
      "com.github.javafaker.LeagueOfLegendsTest#rank": 314,
      "com.github.javafaker.LeagueOfLegendsTest#summonerSpell": 315,
      "com.github.javafaker.LebowskiTest#actor": 316,
      "com.github.javafaker.LebowskiTest#character": 317,
      "com.github.javafaker.LebowskiTest#quote": 318,
      "com.github.javafaker.LordOfTheRingsTest#character": 319,
      "com.github.javafaker.LordOfTheRingsTest#location": 320,
      "com.github.javafaker.LoremTest#shouldCreateFixedLengthString": 321,
      "com.github.javafaker.LoremTest#testCharacter": 322,
      "com.github.javafaker.LoremTest#testCharacterIncludeUpperCase": 323,
      "com.github.javafaker.LoremTest#testCharacters": 324,
      "com.github.javafaker.LoremTest#testCharactersIncludeUpperCase": 325,
      "com.github.javafaker.LoremTest#testCharactersMinimumMaximumLength": 326,
      "com.github.javafaker.LoremTest#testCharactersMinimumMaximumLengthIncludeUppercase": 327,
      "com.github.javafaker.LoremTest#testCharactersMinimumMaximumLengthIncludeUppercaseIncludeDigit": 328,
      "com.github.javafaker.LoremTest#testCharactersWithLength": 329,
      "com.github.javafaker.LoremTest#testCharactersWithLengthIncludeUppercase": 330,
      "com.github.javafaker.LoremTest#testSentence": 331,
      "com.github.javafaker.LoremTest#testSentenceFixedNumberOfWords": 332,
      "com.github.javafaker.LoremTest#testSentenceWithWordCount": 333,
      "com.github.javafaker.LoremTest#testSentenceWithWordCountAndRandomWordsToAdd": 334,
      "com.github.javafaker.LoremTest#testWords": 335,
      "com.github.javafaker.LoremTest#wordShouldNotBeNullOrEmpty": 336,
      "com.github.javafaker.MatzTest#quote": 337,
      "com.github.javafaker.MedicalTest#testDiseaseName": 338,
      "com.github.javafaker.MedicalTest#testHospitalName": 339,
      "com.github.javafaker.MedicalTest#testMedicineName": 340,
      "com.github.javafaker.MedicalTest#testSymptom": 341,
      "com.github.javafaker.MusicTest#chord": 342,
      "com.github.javafaker.MusicTest#genre": 343,
      "com.github.javafaker.MusicTest#instrument": 344,
      "com.github.javafaker.MusicTest#key": 345,
      "com.github.javafaker.NameTest#testBloodGroup": 346,
      "com.github.javafaker.NameTest#testFirstName": 347,
      "com.github.javafaker.NameTest#testFullName": 348,
      "com.github.javafaker.NameTest#testLastName": 349,
      "com.github.javafaker.NameTest#testName": 350,
      "com.github.javafaker.NameTest#testNameWithMiddle": 351,
      "com.github.javafaker.NameTest#testNameWithMiddleDoesNotHaveRepeatedName": 352,
      "com.github.javafaker.NameTest#testPrefix": 353,
      "com.github.javafaker.NameTest#testSuffix": 354,
      "com.github.javafaker.NameTest#testTitle": 355,
      "com.github.javafaker.NameTest#testUsername": 356,
      "com.github.javafaker.NameTest#testUsernameWithSpaces": 357,
      "com.github.javafaker.NationTest#capitalCity": 358,
      "com.github.javafaker.NationTest#flag": 359,
      "com.github.javafaker.NationTest#language": 360,
      "com.github.javafaker.NationTest#nationality": 361,
      "com.github.javafaker.NumberTest#numberBetweenIntIntRandomizationQuality": 362,
      "com.github.javafaker.NumberTest#numberBetweenIntIntZeroMinMax": 363,
      "com.github.javafaker.NumberTest#numberBetweenLongLongRandomizationQuality": 364,
      "com.github.javafaker.NumberTest#numberBetweenLongLongZeroMinMax": 365,
      "com.github.javafaker.NumberTest#randomDoubleRandomizationQuality": 366,
      "com.github.javafaker.NumberTest#testDigit": 367,
      "com.github.javafaker.NumberTest#testDigits": 368,
      "com.github.javafaker.NumberTest#testIntNumberBetweenRepeated": 369,
      "com.github.javafaker.NumberTest#testLongBetweenOneAndThree": 370,
      "com.github.javafaker.NumberTest#testLongNumberBetweenRepeated": 371,
      "com.github.javafaker.NumberTest#testNumberBetween": 372,
      "com.github.javafaker.NumberTest#testNumberBetweenOneAndThree": 373,
      "com.github.javafaker.NumberTest#testRandomDigit": 374,
      "com.github.javafaker.NumberTest#testRandomDigitNotZero": 375,
      "com.github.javafaker.NumberTest#testRandomDouble": 376,
      "com.github.javafaker.NumberTest#testRandomDoubleMaxEqualsMin": 377,
      "com.github.javafaker.NumberTest#testRandomNumber": 378,
      "com.github.javafaker.NumberTest#testRandomNumberWithGivenDigitsStrict": 379,
      "com.github.javafaker.NumberTest#testRandomNumberWithSingleDigitStrict": 380,
      "com.github.javafaker.NumberTest#testRandomNumberWithZeroDigitsStrict": 381,
      "com.github.javafaker.OptionsTest#testNextArrayElement": 382,
      "com.github.javafaker.OptionsTest#testNextListElement": 383,
      "com.github.javafaker.OptionsTest#testOptionWithArray": 384,
      "com.github.javafaker.OptionsTest#testOptionWithEnum": 385,
      "com.github.javafaker.OptionsTest#testOptionWithVarargsInteger": 386,
      "com.github.javafaker.OptionsTest#testOptionWithVarargsString": 387,
      "com.github.javafaker.OverwatchTest#hero": 388,
      "com.github.javafaker.OverwatchTest#location": 389,
      "com.github.javafaker.OverwatchTest#quote": 390,
      "com.github.javafaker.PhoneNumberTest#testCellPhone": 391,
      "com.github.javafaker.PhoneNumberTest#testCellPhone_enUS": 392,
      "com.github.javafaker.PhoneNumberTest#testExtension": 393,
      "com.github.javafaker.PhoneNumberTest#testPhoneNumber": 394,
      "com.github.javafaker.PhoneNumberTest#testPhone_esMx": 395,
      "com.github.javafaker.PhoneNumberTest#testSubscriberNumber": 396,
      "com.github.javafaker.PhoneNumberTest#testSubscriberNumberWithLength": 397,
      "com.github.javafaker.PhotographyTest#brand": 398,
      "com.github.javafaker.PhotographyTest#camera": 399,
      "com.github.javafaker.PhotographyTest#genre": 400,
      "com.github.javafaker.PhotographyTest#imageTag": 401,
      "com.github.javafaker.PhotographyTest#iso": 402,
      "com.github.javafaker.PhotographyTest#lens": 403,
      "com.github.javafaker.PhotographyTest#shutter": 404,
      "com.github.javafaker.PhotographyTest#testAperture": 405,
      "com.github.javafaker.PhotographyTest#testTerm": 406,
      "com.github.javafaker.PokemonTest#location": 407,
      "com.github.javafaker.PokemonTest#name": 408,
      "com.github.javafaker.PrincessBrideTest#character": 409,
      "com.github.javafaker.PrincessBrideTest#quote": 410,
      "com.github.javafaker.ProgrammingLanguageTest#creator": 411,
      "com.github.javafaker.ProgrammingLanguageTest#name": 412,
      "com.github.javafaker.RandomFakerTest#testEmailRandomnessCanBeControlled": 413,
      "com.github.javafaker.RandomFakerTest#testLetterifyRandomnessCanBeControlled": 414,
      "com.github.javafaker.RandomFakerTest#testNameRandomnessCanBeControlled": 415,
      "com.github.javafaker.RandomFakerTest#testNumerifyRandomnessCanBeControlled": 416,
      "com.github.javafaker.RelationshipTest#anyTest": 417,
      "com.github.javafaker.RelationshipTest#anyWithIllegalAccessExceptionThrown": 418,
      "com.github.javafaker.RelationshipTest#anyWithIllegalArgumentExceptionThrown": 419,
      "com.github.javafaker.RelationshipTest#anyWithInvocationTargetExceptionThrown": 420,
      "com.github.javafaker.RelationshipTest#anyWithSecurityExceptionThrown": 421,
      "com.github.javafaker.RelationshipTest#directTest": 422,
      "com.github.javafaker.RelationshipTest#extendedTest": 423,
      "com.github.javafaker.RelationshipTest#inLawTest": 424,
      "com.github.javafaker.RelationshipTest#parentTest": 425,
      "com.github.javafaker.RelationshipTest#siblingTest": 426,
      "com.github.javafaker.RelationshipTest#spouseTest": 427,
      "com.github.javafaker.RickAndMortyTest#character": 428,
      "com.github.javafaker.RickAndMortyTest#location": 429,
      "com.github.javafaker.RickAndMortyTest#quote": 430,
      "com.github.javafaker.RobinTest#quote": 431,
      "com.github.javafaker.RockBandTest#name": 432,
      "com.github.javafaker.ShakespeareTest#testAsYouLikeItQuote": 433,
      "com.github.javafaker.ShakespeareTest#testHamletQuote": 434,
      "com.github.javafaker.ShakespeareTest#testKingRichardIIIQuote": 435,
      "com.github.javafaker.ShakespeareTest#testRomeoAndJulietQuote": 436,
      "com.github.javafaker.SipTest#bodyBytes_isNotNull": 437,
      "com.github.javafaker.SipTest#bodyString_returnAValidSdpBodyString": 438,
      "com.github.javafaker.SipTest#clientErrorResponseCode_Codereturn3DigitIntBetween400And499": 439,
      "com.github.javafaker.SipTest#clientErrorResponsePhrase_returnAnyNonDigitString": 440,
      "com.github.javafaker.SipTest#contentType_returnLowerCaseTwoWordsSepereatedBySlashMinimum3And4Chars": 441,
      "com.github.javafaker.SipTest#globalErrorResponseCode_Codereturn3DigitIntBetween600And699": 442,
      "com.github.javafaker.SipTest#globalErrorResponsePhrase_returnAnyNonDigitString": 443,
      "com.github.javafaker.SipTest#messagingPort_return4DigitIntBetween1000And9999": 444,
      "com.github.javafaker.SipTest#method_returnUpperCaseWithMinimum3Chars": 445,
      "com.github.javafaker.SipTest#nameAddress_returnValidNameAddressString": 446,
      "com.github.javafaker.SipTest#provisionalResponseCode_return3DigitIntBetween100And199": 447,
      "com.github.javafaker.SipTest#provisionalResponsePhrase_returnAnyNonDigitString": 448,
      "com.github.javafaker.SipTest#redirectResponseCode_Codereturn3DigitIntBetween300And399": 449,
      "com.github.javafaker.SipTest#redirectResponsePhrase_returnAnyNonDigitString": 450,
      "com.github.javafaker.SipTest#rtpPort_returnPositiveEvenInt": 451,
      "com.github.javafaker.SipTest#serverErrorResponseCode_Codereturn3DigitIntBetween500And599": 452,
      "com.github.javafaker.SipTest#serverErrorResponsePhrase_returnAnyNonDigitString": 453,
      "com.github.javafaker.SipTest#successResponsePhrase_returnAnyNonDigitString": 454,
      "com.github.javafaker.SipTest#successResponse_Codereturn3DigitIntBetween200And299": 455,
      "com.github.javafaker.SlackEmojiTest#activity": 456,
      "com.github.javafaker.SlackEmojiTest#celebration": 457,
      "com.github.javafaker.SlackEmojiTest#custom": 458,
      "com.github.javafaker.SlackEmojiTest#emoji": 459,
      "com.github.javafaker.SlackEmojiTest#food_and_drink": 460,
      "com.github.javafaker.SlackEmojiTest#nature": 461,
      "com.github.javafaker.SlackEmojiTest#objects_and_symbols": 462,
      "com.github.javafaker.SlackEmojiTest#people": 463,
      "com.github.javafaker.SlackEmojiTest#travel_and_places": 464,
      "com.github.javafaker.SpaceTest#agency": 465,
      "com.github.javafaker.SpaceTest#agencyAbbreviation": 466,
      "com.github.javafaker.SpaceTest#company": 467,
      "com.github.javafaker.SpaceTest#constellation": 468,
      "com.github.javafaker.SpaceTest#distanceMeasurement": 469,
      "com.github.javafaker.SpaceTest#galaxy": 470,
      "com.github.javafaker.SpaceTest#meteorite": 471,
      "com.github.javafaker.SpaceTest#moon": 472,
      "com.github.javafaker.SpaceTest#nasaSpaceCraft": 473,
      "com.github.javafaker.SpaceTest#nebula": 474,
      "com.github.javafaker.SpaceTest#planet": 475,
      "com.github.javafaker.SpaceTest#star": 476,
      "com.github.javafaker.SpaceTest#starCluster": 477,
      "com.github.javafaker.StarCraftTest#testBuilding": 478,
      "com.github.javafaker.StarCraftTest#testCharacter": 479,
      "com.github.javafaker.StarCraftTest#testPlanet": 480,
      "com.github.javafaker.StarCraftTest#testUnit": 481,
      "com.github.javafaker.StarTrekTest#character": 482,
      "com.github.javafaker.StarTrekTest#klingon": 483,
      "com.github.javafaker.StarTrekTest#location": 484,
      "com.github.javafaker.StarTrekTest#specie": 485,
      "com.github.javafaker.StarTrekTest#villain": 486,
      "com.github.javafaker.StockTest#testNYSE": 487,
      "com.github.javafaker.StockTest#testNasdaq": 488,
      "com.github.javafaker.SuperheroTest#testDescriptor": 489,
      "com.github.javafaker.SuperheroTest#testName": 490,
      "com.github.javafaker.SuperheroTest#testPower": 491,
      "com.github.javafaker.SuperheroTest#testPrefix": 492,
      "com.github.javafaker.SuperheroTest#testSuffix": 493,
      "com.github.javafaker.TeamTest#testCreature": 494,
      "com.github.javafaker.TeamTest#testName": 495,
      "com.github.javafaker.TeamTest#testSport": 496,
      "com.github.javafaker.TeamTest#testState": 497,
      "com.github.javafaker.TeamTest#testStateWithZaLocale": 498,
      "com.github.javafaker.TwinPeaksTest#character": 499,
      "com.github.javafaker.TwinPeaksTest#location": 500,
      "com.github.javafaker.TwinPeaksTest#quote": 501,
      "com.github.javafaker.UniversityTest#testName": 502,
      "com.github.javafaker.UniversityTest#testPrefix": 503,
      "com.github.javafaker.UniversityTest#testSuffix": 504,
      "com.github.javafaker.WeatherTest#description": 505,
      "com.github.javafaker.WeatherTest#temperatureCelsius": 506,
      "com.github.javafaker.WeatherTest#temperatureCelsiusInRange": 507,
      "com.github.javafaker.WeatherTest#temperatureFahrenheit": 508,
      "com.github.javafaker.WeatherTest#temperatureFahrenheitInRange": 509,
      "com.github.javafaker.WitcherTest#testCharacter": 510,
      "com.github.javafaker.WitcherTest#testLocation": 511,
      "com.github.javafaker.WitcherTest#testMonster": 512,
      "com.github.javafaker.WitcherTest#testQuote": 513,
      "com.github.javafaker.WitcherTest#testSchool": 514,
      "com.github.javafaker.WitcherTest#testWitcher": 515,
      "com.github.javafaker.YodaTest#quote": 516,
      "com.github.javafaker.ZeldaTest#character": 517,
      "com.github.javafaker.ZeldaTest#game": 518,
      "com.github.javafaker.idnumbers.SwedishIdNumberTest#invalid": 519,
      "com.github.javafaker.idnumbers.SwedishIdNumberTest#valid": 520,
      "com.github.javafaker.integration.UkLocalDirectivesTest#resolvesDirectivesOnlyInYmlFile": 521,
      "com.github.javafaker.matchers.IsANumberTest#testBlankIsNotANumber": 522,
      "com.github.javafaker.matchers.IsANumberTest#testEmptyStringIsNotANumber": 523,
      "com.github.javafaker.matchers.IsANumberTest#testNumberShouldBeANumber": 524,
      "com.github.javafaker.matchers.IsANumberTest#testOtherCharsIsNotANumber": 525,
      "com.github.javafaker.matchers.IsStringWithContentsTest#emptyStringShouldFail": 526,
      "com.github.javafaker.matchers.IsStringWithContentsTest#nullStringShouldFail": 527,
      "com.github.javafaker.matchers.IsStringWithContentsTest#stringShouldPass": 528,
      "com.github.javafaker.matchers.IsStringWithContentsTest#whiteSpaceShouldFail": 529,
      "com.github.javafaker.service.FakeValuesGroupingTest#handlesMultipleFakeValues": 530,
      "com.github.javafaker.service.FakeValuesGroupingTest#handlesOneFakeValue": 531,
      "com.github.javafaker.service.FakeValuesServiceTest#FakeValuesServiceWithNullLocaleTest": 532,
      "com.github.javafaker.service.FakeValuesServiceTest#bothify2Args": 533,
      "com.github.javafaker.service.FakeValuesServiceTest#expressionCompletelyUnresolvable": 534,
      "com.github.javafaker.service.FakeValuesServiceTest#expressionWithFourArguments": 535,
      "com.github.javafaker.service.FakeValuesServiceTest#expressionWithInvalidFakerObject": 536,
      "com.github.javafaker.service.FakeValuesServiceTest#expressionWithValidFakerObjectButInvalidMethod": 537,
      "com.github.javafaker.service.FakeValuesServiceTest#expressionWithValidFakerObjectValidMethodInvalidArgs": 538,
      "com.github.javafaker.service.FakeValuesServiceTest#fetchObjectShouldReturnValue": 539,
      "com.github.javafaker.service.FakeValuesServiceTest#fetchShouldReturnValue": 540,
      "com.github.javafaker.service.FakeValuesServiceTest#fetchStringShouldReturnValue": 541,
      "com.github.javafaker.service.FakeValuesServiceTest#futureDateExpression": 542,
      "com.github.javafaker.service.FakeValuesServiceTest#pastDateExpression": 543,
      "com.github.javafaker.service.FakeValuesServiceTest#regexifyDirective": 544,
      "com.github.javafaker.service.FakeValuesServiceTest#regexifyDirective2": 545,
      "com.github.javafaker.service.FakeValuesServiceTest#regexifySlashFormatDirective": 546,
      "com.github.javafaker.service.FakeValuesServiceTest#resolveKeyToPropertyWithAList": 547,
      "com.github.javafaker.service.FakeValuesServiceTest#resolveKeyToPropertyWithAPropertyWithAnObject": 548,
      "com.github.javafaker.service.FakeValuesServiceTest#resolveKeyToPropertyWithAPropertyWithoutAnObject": 549,
      "com.github.javafaker.service.FakeValuesServiceTest#resolveKeyWithMultiplePropertiesShouldJoinResults": 550,
      "com.github.javafaker.service.FakeValuesServiceTest#resolveUsingTheSameKeyTwice": 551,
      "com.github.javafaker.service.FakeValuesServiceTest#safeFetchShouldReturnEmptyStringWhenPropertyDoesntExist": 552,
      "com.github.javafaker.service.FakeValuesServiceTest#safeFetchShouldReturnSimpleList": 553,
      "com.github.javafaker.service.FakeValuesServiceTest#safeFetchShouldReturnValueInList": 554,
      "com.github.javafaker.service.FakeValuesServiceTest#testLocaleChain": 555,
      "com.github.javafaker.service.FakeValuesServiceTest#testLocaleChainEnglish": 556,
      "com.github.javafaker.service.FakeValuesServiceTest#testLocaleChainLanguageOnly": 557,
      "com.github.javafaker.service.FakeValuesTest#getAValueDoesNotReturnAValue": 558,
      "com.github.javafaker.service.FakeValuesTest#getAValueForHebrewLocale": 559,
      "com.github.javafaker.service.FakeValuesTest#getAValueFromALocaleThatCantBeLoaded": 560,
      "com.github.javafaker.service.FakeValuesTest#getAValueReturnsAValue": 561,
      "com.github.javafaker.service.FakeValuesTest#getAValueWithANonEnglishFile": 562,
      "com.github.javafaker.service.FakeValuesTest#supportsPathIsFalseWhenValueIsNotTheSame": 563,
      "com.github.javafaker.service.FakeValuesTest#supportsPathIsTrueWithTheSameValueAsThePath": 564
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            185, 270, 267, 80, 82, 79, 81, 83, 6, 392, 533, 535, 11, 395, 13,
            56, 546, 542, 543, 544, 545, 22, 1, 550, 0, 495, 2, 268, 269, 538,
            104, 548, 352, 415, 348, 350, 437, 537, 351, 438, 490, 502, 101,
            459, 307, 549, 551, 413, 547, 294, 275, 446, 498, 300, 190, 278,
            521, 356, 347, 536, 217, 534, 210, 213, 214, 218, 94, 212, 36, 95,
            181, 469, 16, 297, 298, 321, 331, 301, 5, 211, 279, 333, 7, 334, 24,
            266, 391, 394, 89, 332, 157, 160, 272, 417, 158, 159, 335, 296, 274,
            507, 509, 276, 277, 295, 506, 508, 21, 69, 70, 71, 146, 147, 148,
            149, 150, 151, 152, 153, 166, 167, 168, 169, 170, 171, 172, 173,
            310, 311, 312, 313, 314, 315, 388, 389, 390, 407, 408, 510, 511,
            512, 513, 514, 515, 517, 518, 280, 27, 38, 40, 42, 44, 51, 53, 55,
            93, 110, 137, 163, 164, 165, 209, 215, 224, 355, 357, 3, 4, 10, 15,
            17, 18, 19, 20, 23, 25, 31, 32, 33, 34, 35, 37, 39, 41, 43, 45, 46,
            47, 48, 49, 50, 52, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68,
            72, 73, 84, 87, 88, 90, 99, 102, 103, 105, 106, 107, 108, 109, 111,
            116, 117, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143,
            144, 145, 154, 155, 156, 161, 162, 174, 175, 176, 177, 178, 179,
            180, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233,
            234, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
            250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262,
            263, 264, 265, 271, 273, 303, 304, 305, 306, 308, 309, 316, 317,
            318, 319, 320, 336, 337, 338, 339, 340, 341, 343, 344, 346, 349,
            353, 354, 358, 360, 361, 409, 410, 411, 412, 422, 423, 424, 425,
            426, 427, 428, 429, 430, 431, 432, 439, 440, 441, 442, 443, 445,
            447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 461,
            462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475,
            476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
            489, 491, 492, 493, 494, 496, 497, 499, 500, 501, 503, 504, 505,
            516, 14, 183, 182, 207, 552, 553, 554, 541, 96, 98, 359, 540, 402,
            404, 26, 28, 29, 30, 97, 127, 128, 129, 130, 131, 237, 238, 239,
            398, 399, 400, 401, 403, 405, 406, 539, 78, 208, 121, 290, 291, 372,
            287, 289, 367, 186, 286, 368, 378, 112, 113, 114, 115, 288, 362,
            369, 371, 219, 364, 370, 373, 184, 323, 325, 327, 328, 330, 366,
            376, 189, 120, 374, 375, 187, 85, 188, 322, 329, 220, 393, 532, 86,
            285, 324, 326, 555, 292, 396, 74, 75, 123, 124, 125, 284, 397, 76,
            77, 118, 414, 556, 557, 283, 379, 380, 381, 122, 126, 299, 416, 192,
            293, 342, 191, 216, 345, 91, 205, 282, 377, 433, 434, 435, 436, 92,
            100, 385, 8, 9, 12, 60, 193, 194, 195, 196, 197, 198, 199, 200, 201,
            202, 203, 204, 206, 281, 382, 383, 384, 386, 387, 444, 451, 419,
            421, 119, 363, 365, 302, 418, 420, 519, 530, 559, 531, 562, 520,
            560, 558, 561, 563, 564, 522, 523, 524, 525, 526, 527, 528, 529
          ]
        ],
        "APSC_c": 0.6688506791877091
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [
            185, 267, 80, 82, 79, 81, 83, 6, 533, 535, 11, 395, 13, 546, 542,
            544, 22, 550, 0, 268, 269, 104, 348, 437, 351, 490, 502, 459, 551,
            547, 294, 498, 190, 278, 521, 347, 217, 214, 94, 36, 95, 16, 211,
            279, 333, 7, 391, 89, 157, 272, 296, 507, 276, 295, 21, 70, 146,
            149, 151, 153, 167, 168, 171, 173, 311, 313, 315, 389, 407, 510,
            512, 514, 517, 280, 38, 42, 51, 55, 163, 165, 215, 355, 3, 10, 17,
            18, 19, 23, 31, 33, 35, 39, 43, 46, 48, 50, 54, 57, 59, 63, 64, 66,
            68, 73, 88, 99, 103, 106, 108, 111, 116, 133, 134, 138, 141, 142,
            145, 154, 155, 161, 175, 177, 178, 180, 221, 225, 227, 228, 230,
            232, 234, 236, 241, 243, 245, 247, 249, 251, 252, 254, 257, 259,
            261, 263, 265, 273, 303, 305, 308, 316, 319, 336, 338, 340, 343,
            346, 353, 358, 361, 409, 411, 422, 423, 425, 427, 429, 431, 439,
            441, 443, 447, 449, 452, 454, 456, 460, 462, 464, 466, 468, 471,
            473, 475, 477, 479, 482, 484, 486, 488, 491, 493, 496, 499, 500,
            504, 516, 183, 182, 207, 552, 554, 96, 359, 29, 97, 128, 130, 237,
            239, 399, 401, 405, 539, 121, 113, 115, 362, 370, 373, 330, 376,
            189, 120, 375, 187, 85, 322, 220, 86, 324, 326, 555, 292, 123, 284,
            379, 380, 381, 122, 126, 299, 416, 192, 293, 345, 205, 377, 433,
            434, 435, 436, 92, 385, 9, 60, 194, 196, 198, 200, 201, 203, 281,
            384, 387, 451, 419, 363, 302, 418, 519, 559, 531, 520, 560, 558,
            563, 522, 524, 526, 528
          ],
          [
            270, 392, 56, 543, 545, 1, 495, 2, 538, 548, 352, 415, 350, 537,
            438, 101, 307, 549, 413, 275, 446, 300, 356, 536, 534, 210, 213,
            218, 212, 181, 469, 297, 298, 321, 331, 301, 5, 334, 24, 266, 394,
            332, 160, 417, 158, 159, 335, 274, 509, 277, 506, 508, 69, 71, 147,
            148, 150, 152, 166, 169, 170, 172, 310, 312, 314, 388, 390, 408,
            511, 513, 515, 518, 27, 40, 44, 53, 93, 110, 137, 164, 209, 224,
            357, 4, 15, 20, 25, 32, 34, 37, 41, 45, 47, 49, 52, 58, 61, 62, 65,
            67, 72, 84, 87, 90, 102, 105, 107, 109, 117, 132, 135, 136, 139,
            140, 143, 144, 156, 162, 174, 176, 179, 222, 223, 226, 229, 231,
            233, 235, 240, 242, 244, 246, 248, 250, 253, 255, 256, 258, 260,
            262, 264, 271, 304, 306, 309, 317, 318, 320, 337, 339, 341, 344,
            349, 354, 360, 410, 412, 424, 426, 428, 430, 432, 440, 442, 445,
            448, 450, 453, 455, 457, 458, 461, 463, 465, 467, 470, 472, 474,
            476, 478, 480, 481, 483, 485, 487, 489, 492, 494, 497, 501, 503,
            505, 14, 553, 541, 98, 540, 402, 404, 26, 28, 30, 127, 129, 131,
            238, 398, 400, 403, 406, 78, 208, 290, 291, 372, 287, 289, 367, 186,
            286, 368, 378, 112, 114, 288, 369, 371, 219, 364, 184, 323, 325,
            327, 328, 366, 374, 188, 329, 393, 532, 285, 396, 74, 75, 124, 125,
            397, 76, 77, 118, 414, 556, 557, 283, 342, 191, 216, 91, 282, 100,
            8, 12, 193, 195, 197, 199, 202, 204, 206, 382, 383, 386, 444, 421,
            119, 365, 420, 530, 562, 561, 564, 523, 525, 527, 529
          ]
        ],
        "APSC_c": 0.8344840538099808
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [
            185, 533, 11, 13, 543, 22, 0, 415, 437, 502, 551, 294, 347, 210,
            213, 212, 321, 211, 7, 266, 394, 332, 160, 417, 158, 159, 335, 274,
            506, 21, 146, 151, 168, 173, 313, 390, 511, 514, 27, 40, 53, 165,
            357, 15, 34, 41, 46, 50, 59, 63, 66, 73, 103, 108, 116, 138, 141,
            142, 161, 176, 221, 226, 232, 236, 244, 248, 252, 255, 258, 264,
            271, 309, 318, 337, 340, 349, 360, 424, 430, 440, 447, 452, 456,
            463, 467, 471, 477, 481, 483, 486, 491, 493, 499, 504, 183, 182,
            552, 554, 96, 28, 127, 130, 398, 405, 291, 287, 289, 367, 286, 368,
            112, 115, 364, 375, 187, 188, 220, 285, 77, 118, 381, 126, 293, 436,
            100, 385, 9, 196, 200, 203, 383, 386, 451, 421, 365, 530, 523, 525,
            528
          ],
          [
            270, 56, 545, 550, 495, 269, 104, 537, 101, 307, 547, 446, 190, 278,
            521, 217, 94, 181, 469, 331, 5, 276, 508, 70, 148, 152, 167, 171,
            311, 315, 407, 512, 517, 38, 51, 163, 164, 209, 215, 224, 4, 18, 20,
            31, 35, 43, 48, 54, 57, 62, 72, 88, 102, 106, 111, 132, 139, 140,
            156, 175, 179, 225, 229, 233, 240, 245, 249, 253, 257, 261, 265,
            304, 308, 319, 338, 343, 346, 358, 411, 423, 427, 431, 441, 445,
            449, 455, 460, 464, 468, 470, 476, 479, 485, 489, 492, 496, 500,
            505, 207, 98, 29, 128, 131, 239, 401, 406, 290, 372, 186, 378, 113,
            288, 362, 376, 374, 85, 322, 329, 393, 86, 324, 555, 396, 75, 124,
            125, 397, 76, 414, 557, 379, 380, 122, 299, 416, 192, 342, 191, 216,
            205, 377, 433, 434, 435, 92, 8, 194, 197, 204, 382, 384, 387, 419,
            519, 562, 558
          ],
          [
            267, 392, 2, 548, 350, 438, 549, 275, 300, 536, 214, 95, 16, 507,
            277, 69, 147, 149, 153, 169, 172, 312, 388, 408, 513, 518, 44, 93,
            110, 137, 355, 10, 23, 32, 39, 47, 52, 61, 65, 67, 84, 90, 105, 109,
            133, 134, 145, 154, 155, 174, 178, 222, 227, 230, 234, 241, 243,
            247, 250, 256, 260, 262, 303, 305, 316, 320, 339, 344, 354, 409,
            410, 422, 425, 429, 439, 443, 450, 454, 458, 462, 466, 473, 474,
            478, 482, 488, 497, 516, 553, 541, 359, 97, 237, 399, 403, 78, 208,
            114, 369, 371, 219, 370, 373, 327, 330, 189, 120, 532, 326, 292,
            556, 283, 60, 195, 199, 202, 206, 444, 119, 418, 531, 563, 564, 522,
            524, 526, 527, 529
          ],
          [
            80, 82, 79, 81, 83, 6, 535, 395, 546, 542, 544, 1, 268, 538, 352,
            348, 351, 490, 459, 413, 498, 356, 534, 218, 36, 297, 298, 301, 279,
            333, 334, 24, 391, 89, 157, 272, 296, 509, 295, 71, 150, 166, 170,
            310, 314, 389, 510, 515, 280, 42, 55, 3, 17, 19, 25, 33, 37, 45, 49,
            58, 64, 68, 87, 99, 107, 117, 135, 136, 143, 144, 162, 177, 180,
            223, 228, 231, 235, 242, 246, 251, 254, 259, 263, 273, 306, 317,
            336, 341, 353, 361, 412, 426, 428, 432, 442, 448, 453, 457, 461,
            465, 472, 475, 480, 484, 487, 494, 501, 503, 14, 540, 402, 404, 26,
            30, 129, 238, 400, 539, 121, 184, 323, 325, 328, 366, 74, 123, 284,
            345, 91, 282, 12, 193, 198, 201, 281, 363, 302, 420, 559, 520, 560,
            561
          ]
        ],
        "APSC_c": 0.917951384763384
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            185, 546, 544, 495, 538, 350, 490, 413, 347, 94, 301, 334, 332, 158,
            159, 335, 295, 147, 152, 170, 311, 315, 510, 40, 164, 209, 215, 224,
            18, 19, 35, 48, 58, 72, 103, 132, 145, 154, 174, 222, 231, 242, 248,
            255, 261, 304, 320, 346, 411, 427, 440, 450, 458, 466, 474, 482,
            492, 500, 182, 553, 540, 30, 398, 78, 121, 123, 77, 381, 299, 416,
            293, 202, 383, 444, 302, 418, 520, 563, 564, 522, 524, 526, 527, 529
          ],
          [
            270, 352, 415, 438, 356, 218, 469, 279, 24, 394, 160, 507, 276, 70,
            150, 168, 312, 390, 514, 44, 3, 31, 41, 50, 62, 99, 116, 155, 178,
            226, 236, 249, 254, 303, 316, 339, 361, 423, 430, 448, 456, 472,
            478, 487, 14, 237, 399, 208, 366, 118, 216, 434, 100, 8, 195, 199,
            206, 119, 559
          ],
          [
            267, 56, 0, 351, 549, 498, 217, 212, 211, 391, 417, 509, 277, 146,
            153, 171, 313, 408, 280, 51, 4, 25, 39, 52, 65, 90, 108, 133, 134,
            156, 180, 228, 232, 243, 251, 258, 262, 309, 336, 349, 424, 441,
            449, 460, 467, 476, 483, 491, 499, 516, 98, 130, 405, 113, 364, 556,
            283, 523, 525, 528
          ],
          [
            80, 6, 542, 545, 2, 437, 307, 547, 190, 278, 521, 95, 331, 7, 274,
            69, 149, 166, 173, 314, 407, 518, 55, 17, 20, 34, 46, 61, 66, 84,
            106, 117, 141, 142, 176, 227, 233, 246, 256, 264, 305, 317, 340,
            360, 431, 447, 457, 465, 475, 484, 489, 497, 541, 404, 28, 97, 403,
            291, 367, 378, 288, 369, 371, 219, 327, 328, 376, 187, 85, 188, 322,
            329, 393, 86, 324, 555, 396, 74, 125, 414, 557, 380, 126, 377, 435,
            385, 60, 194, 198, 281, 531
          ],
          [
            82, 533, 13, 1, 348, 101, 294, 181, 16, 515, 53, 10, 33, 43, 54, 64,
            87, 105, 138, 162, 179, 229, 240, 244, 252, 259, 273, 318, 341, 409,
            410, 425, 439, 452, 461, 468, 477, 485, 494, 503, 183, 207, 127,
            238, 406, 368, 114, 184, 323, 325, 330, 189, 120, 284, 204, 451,
            363, 420, 560, 558
          ],
          [
            79, 392, 551, 300, 210, 213, 321, 266, 157, 296, 506, 21, 148, 167,
            172, 388, 513, 38, 110, 137, 15, 45, 57, 67, 88, 107, 135, 136, 161,
            221, 230, 241, 245, 257, 265, 306, 319, 343, 354, 422, 428, 442,
            453, 463, 471, 481, 486, 496, 501, 505, 96, 128, 239, 539, 287, 286,
            112, 370, 374, 532, 326, 292, 342, 345, 282, 201, 384, 387, 365,
            519, 561
          ],
          [
            81, 535, 395, 550, 269, 548, 537, 459, 275, 534, 36, 297, 298, 333,
            89, 272, 508, 71, 151, 169, 310, 389, 512, 517, 93, 163, 165, 355,
            23, 37, 49, 63, 73, 109, 139, 140, 175, 223, 234, 247, 253, 263,
            308, 338, 353, 426, 432, 443, 455, 464, 470, 479, 493, 504, 552,
            359, 131, 401, 290, 372, 115, 373, 375, 220, 285, 122, 205, 92, 12,
            193, 197, 382, 386, 421, 530
          ],
          [
            83, 11, 543, 22, 268, 104, 502, 446, 536, 214, 5, 511, 27, 42, 357,
            32, 47, 59, 68, 102, 111, 143, 144, 177, 225, 235, 250, 260, 271,
            337, 344, 358, 412, 429, 445, 454, 462, 473, 480, 488, 554, 402, 26,
            29, 129, 400, 289, 186, 362, 75, 124, 397, 76, 379, 192, 191, 91,
            433, 436, 9, 196, 200, 203, 419, 562
          ]
        ],
        "APSC_c": 0.9592398590311696
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [
            185, 548, 502, 534, 218, 301, 296, 153, 314, 510, 93, 357, 39, 66,
            87, 116, 176, 240, 249, 262, 338, 423, 442, 462, 488, 238, 78, 291,
            367, 112, 376, 396, 125, 122, 377, 436, 12, 196, 204, 119, 560, 523
          ],
          [
            270, 469, 334, 160, 21, 150, 313, 280, 110, 137, 20, 35, 57, 102,
            139, 140, 223, 246, 273, 358, 429, 448, 467, 477, 504, 182, 359,
            372, 369, 371, 364
          ],
          [
            267, 269, 490, 551, 217, 181, 16, 222, 241, 252, 264, 320, 412, 440,
            458, 475, 497, 127, 405, 188, 393, 285, 9, 199, 382, 363, 562
          ],
          [
            80, 546, 0, 294, 157, 277, 152, 311, 512, 44, 23, 45, 61, 88, 117,
            141, 142, 225, 251, 261, 319, 360, 461, 487, 29, 398, 115, 189, 85,
            220, 123, 299, 416, 342, 191, 91, 433, 100, 60, 197, 386, 420, 522,
            529
          ],
          [
            82, 543, 495, 537, 446, 94, 7, 147, 167, 388, 38, 4, 37, 63, 105,
            180, 231, 248, 265, 336, 422, 432, 453, 472, 483, 493, 28, 239, 287,
            368, 114, 120, 195, 201, 387, 530
          ],
          [
            79, 542, 550, 104, 190, 278, 521, 266, 272, 172, 513, 55, 49, 68,
            107, 177, 226, 250, 304, 346, 431, 456, 489, 516, 97, 186, 373, 76,
            381, 293, 419, 563, 525
          ],
          [
            81, 544, 268, 538, 351, 498, 36, 333, 507, 69, 166, 407, 42, 19, 46,
            65, 106, 143, 144, 235, 260, 309, 343, 409, 424, 454, 468, 476, 494,
            553, 130, 290, 289, 286, 113, 327, 374, 379, 345, 282, 451, 519, 528
          ],
          [
            83, 545, 2, 307, 275, 297, 298, 394, 158, 159, 335, 149, 169, 390,
            40, 17, 33, 50, 73, 135, 136, 161, 233, 255, 303, 349, 447, 463,
            484, 492, 541, 128, 399, 378, 288, 184, 328, 187, 329, 326, 75, 118,
            205, 385, 194, 203, 444, 558
          ],
          [
            6, 350, 413, 95, 5, 138, 175, 232, 256, 305, 337, 410, 427, 450,
            466, 478, 503, 96, 539, 370, 284
          ],
          [
            392, 146, 315, 515, 209, 215, 224, 18, 34, 52, 84, 132, 155, 228,
            242, 253, 306, 344, 411, 430, 455, 473, 482, 501, 552, 30, 401, 219,
            322, 86, 324, 74, 556, 283
          ],
          [
            533, 1, 459, 356, 279, 417, 508, 148, 173, 408, 53, 32, 54, 72, 108,
            145, 154, 221, 243, 257, 317, 340, 426, 445, 464, 481, 496, 183,
            554, 129, 406, 330, 532, 555, 292, 198, 384, 421, 561
          ],
          [
            535, 22, 352, 415, 549, 347, 321, 295, 168, 517, 164, 10, 47, 64,
            109, 178, 227, 245, 271, 361, 441, 457, 474, 491, 207, 121, 302,
            418, 564, 526
          ],
          [
            11, 437, 300, 211, 276, 151, 312, 518, 163, 15, 67, 90, 133, 134,
            179, 236, 258, 316, 341, 425, 452, 470, 485, 500, 540, 237, 403,
            362, 206, 531
          ],
          [
            395, 101, 536, 212, 391, 274, 310, 514, 355, 31, 48, 59, 99, 156,
            230, 244, 259, 308, 353, 443, 465, 479, 14, 323, 366, 559
          ],
          [
            13, 438, 214, 24, 89, 509, 71, 171, 511, 51, 25, 41, 58, 103, 162,
            229, 247, 263, 339, 428, 449, 471, 486, 499, 98, 208, 124, 397, 414,
            557, 380, 192, 216, 435, 8, 200, 281, 524
          ],
          [
            56, 348, 547, 210, 213, 331, 332, 506, 70, 170, 389, 27, 165, 3, 43,
            62, 111, 174, 234, 254, 318, 354, 439, 460, 480, 505, 402, 404, 26,
            131, 400, 325, 375, 77, 126, 434, 92, 193, 202, 383, 365, 520, 527
          ]
        ],
        "APSC_c": 0.9798543619988282
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [
            270, 533, 535, 11, 56, 545, 1, 2, 548, 350, 537, 490, 101, 551, 547,
            275, 300, 347, 210, 213, 94, 95, 297, 298, 321, 331, 301, 5, 507,
            277, 508, 69, 146, 151, 166, 169, 172, 311, 313, 389, 408, 512, 514,
            280, 40, 51, 93, 110, 137, 355, 4, 17, 18, 23, 32, 37, 43, 47, 50,
            57, 61, 64, 67, 73, 90, 102, 106, 108, 116, 133, 134, 141, 142, 155,
            162, 176, 180, 222, 226, 229, 233, 236, 242, 245, 248, 251, 254,
            257, 261, 264, 273, 305, 308, 318, 336, 339, 344, 349, 358, 361,
            422, 424, 428, 431, 440, 443, 448, 452, 455, 457, 461, 464, 467,
            471, 474, 477, 480, 484, 486, 488, 494, 499, 503, 516, 183, 182,
            207, 98, 402, 404, 26, 29, 127, 129, 237, 398, 401, 406, 121, 369,
            371, 219, 370, 373, 376, 189, 120, 393, 532, 324, 326, 555, 292,
            397, 76, 77, 414, 556, 557, 379, 380, 381, 122, 126, 342, 191, 216,
            345, 205, 377, 433, 435, 100, 9, 193, 197, 200, 203, 281, 419, 365,
            519, 559, 562, 561
          ],
          [
            185, 267, 80, 82, 79, 81, 83, 6, 392, 395, 13, 546, 542, 543, 544,
            22, 550, 0, 495, 268, 269, 538, 104, 352, 415, 348, 437, 351, 438,
            502, 459, 307, 549, 413, 294, 446, 498, 190, 278, 521, 356, 536,
            217, 534, 214, 218, 212, 36, 181, 469, 16, 211, 279, 333, 7, 334,
            24, 266, 391, 394, 89, 332, 157, 160, 272, 417, 158, 159, 335, 296,
            274, 509, 276, 295, 506, 21, 70, 71, 147, 148, 149, 150, 152, 153,
            167, 168, 170, 171, 173, 310, 312, 314, 315, 388, 390, 407, 510,
            511, 513, 515, 517, 518, 27, 38, 42, 44, 53, 55, 163, 164, 165, 209,
            215, 224, 357, 3, 10, 15, 19, 20, 25, 31, 33, 34, 35, 39, 41, 45,
            46, 48, 49, 52, 54, 58, 59, 62, 63, 65, 66, 68, 72, 84, 87, 88, 99,
            103, 105, 107, 109, 111, 117, 132, 135, 136, 138, 139, 140, 143,
            144, 145, 154, 156, 161, 174, 175, 177, 178, 179, 221, 223, 225,
            227, 228, 230, 231, 232, 234, 235, 240, 241, 243, 244, 246, 247,
            249, 250, 252, 253, 255, 256, 258, 259, 260, 262, 263, 265, 271,
            303, 304, 306, 309, 316, 317, 319, 320, 337, 338, 340, 341, 343,
            346, 353, 354, 360, 409, 410, 411, 412, 423, 425, 426, 427, 429,
            430, 432, 439, 441, 442, 445, 447, 449, 450, 453, 454, 456, 458,
            460, 462, 463, 465, 466, 468, 470, 472, 473, 475, 476, 478, 479,
            481, 482, 483, 485, 487, 489, 491, 492, 493, 496, 497, 500, 501,
            504, 505, 14, 552, 553, 554, 541, 96, 359, 540, 28, 30, 97, 128,
            130, 131, 238, 239, 399, 400, 403, 405, 539, 78, 208, 290, 291, 372,
            287, 289, 367, 186, 286, 368, 378, 112, 113, 114, 115, 288, 362,
            364, 184, 323, 325, 327, 328, 330, 366, 374, 375, 187, 85, 188, 322,
            329, 220, 86, 285, 396, 74, 75, 123, 124, 125, 284, 118, 283, 299,
            416, 192, 293, 91, 282, 434, 436, 92, 385, 8, 12, 60, 194, 195, 196,
            198, 199, 201, 202, 204, 206, 382, 383, 384, 386, 387, 444, 451,
            421, 119, 363, 302, 418, 420, 530, 531, 520, 560, 558, 563, 564,
            522, 523, 524, 525, 526, 527, 528, 529
          ]
        ],
        "APSC_c": 0.8898543257279693
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [
            270, 395, 545, 550, 495, 269, 548, 350, 351, 101, 547, 275, 190,
            278, 521, 210, 213, 36, 297, 298, 321, 331, 301, 211, 279, 7, 417,
            296, 277, 21, 146, 153, 168, 173, 313, 389, 510, 514, 27, 42, 55,
            357, 15, 39, 46, 50, 58, 64, 72, 87, 102, 106, 111, 133, 134, 143,
            144, 162, 177, 180, 222, 227, 230, 234, 240, 245, 250, 255, 258,
            263, 273, 308, 318, 337, 340, 349, 360, 424, 430, 440, 445, 452,
            456, 463, 466, 472, 476, 479, 485, 488, 499, 504, 14, 359, 127, 131,
            239, 401, 406, 290, 291, 372, 287, 289, 367, 186, 113, 369, 371,
            219, 364, 375, 324, 326, 555, 292, 77, 283, 200, 203, 382, 386, 419,
            420, 559, 562, 524, 527
          ],
          [
            185, 267, 80, 82, 79, 81, 83, 6, 392, 533, 535, 11, 13, 56, 546,
            542, 543, 544, 22, 1, 0, 2, 268, 538, 104, 352, 415, 348, 437, 537,
            438, 490, 502, 459, 307, 549, 551, 413, 294, 446, 498, 300, 356,
            347, 536, 217, 534, 214, 218, 94, 212, 95, 181, 469, 16, 5, 333,
            334, 24, 266, 391, 394, 89, 332, 157, 160, 272, 158, 159, 335, 274,
            507, 509, 276, 295, 506, 508, 69, 70, 71, 147, 148, 149, 150, 151,
            152, 166, 167, 169, 170, 171, 172, 310, 311, 312, 314, 315, 388,
            390, 407, 408, 511, 512, 513, 515, 517, 518, 280, 38, 40, 44, 51,
            53, 93, 110, 137, 163, 164, 165, 209, 215, 224, 355, 3, 4, 10, 17,
            18, 19, 20, 23, 25, 31, 32, 33, 34, 35, 37, 41, 43, 45, 47, 48, 49,
            52, 54, 57, 59, 61, 62, 63, 65, 66, 67, 68, 73, 84, 88, 90, 99, 103,
            105, 107, 108, 109, 116, 117, 132, 135, 136, 138, 139, 140, 141,
            142, 145, 154, 155, 156, 161, 174, 175, 176, 178, 179, 221, 223,
            225, 226, 228, 229, 231, 232, 233, 235, 236, 241, 242, 243, 244,
            246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 259, 260, 261,
            262, 264, 265, 271, 303, 304, 305, 306, 309, 316, 317, 319, 320,
            336, 338, 339, 341, 343, 344, 346, 353, 354, 358, 361, 409, 410,
            411, 412, 422, 423, 425, 426, 427, 428, 429, 431, 432, 439, 441,
            442, 443, 447, 448, 449, 450, 453, 454, 455, 457, 458, 460, 461,
            462, 464, 465, 467, 468, 470, 471, 473, 474, 475, 477, 478, 480,
            481, 482, 483, 484, 486, 487, 489, 491, 492, 493, 494, 496, 497,
            500, 501, 503, 505, 516, 183, 182, 207, 552, 553, 554, 541, 96, 98,
            540, 402, 404, 26, 28, 29, 30, 97, 128, 129, 130, 237, 238, 398,
            399, 400, 403, 405, 539, 78, 208, 121, 286, 368, 378, 112, 114, 115,
            288, 362, 370, 373, 184, 323, 325, 327, 328, 330, 366, 376, 189,
            120, 374, 187, 85, 188, 322, 329, 220, 393, 532, 86, 285, 396, 74,
            75, 123, 124, 125, 284, 397, 76, 118, 414, 556, 557, 379, 380, 381,
            122, 126, 299, 416, 192, 293, 342, 191, 216, 345, 91, 205, 282, 377,
            433, 434, 435, 436, 92, 100, 385, 8, 9, 12, 60, 193, 194, 195, 196,
            197, 198, 199, 201, 202, 204, 206, 281, 383, 384, 387, 444, 451,
            421, 119, 363, 365, 302, 418, 519, 530, 531, 520, 560, 558, 561,
            563, 564, 522, 523, 525, 526, 528, 529
          ]
        ],
        "APSC_c": 0.9173942940467783
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [
            270, 56, 550, 2, 437, 490, 307, 547, 275, 356, 218, 95, 297, 298,
            321, 301, 211, 333, 394, 160, 296, 295, 147, 150, 167, 171, 313,
            407, 513, 280, 42, 93, 163, 355, 15, 43, 49, 58, 65, 84, 102, 107,
            132, 141, 142, 162, 177, 221, 227, 232, 240, 246, 252, 256, 262,
            273, 316, 336, 341, 353, 411, 425, 430, 442, 449, 455, 458, 464,
            470, 476, 480, 486, 489, 493, 503, 14, 402, 404, 26, 97, 398, 406,
            290, 291, 372, 287, 286, 112, 369, 371, 219, 364, 324, 396, 74, 124,
            284, 282, 199, 206, 451, 119, 420, 559, 520, 561
          ],
          [
            185, 267, 80, 82, 79, 81, 83, 6, 392, 533, 535, 11, 395, 13, 546,
            542, 543, 544, 545, 22, 1, 0, 495, 268, 269, 538, 104, 548, 352,
            415, 348, 350, 537, 351, 438, 502, 101, 459, 549, 551, 413, 294,
            446, 498, 300, 190, 278, 521, 347, 536, 217, 534, 210, 213, 214, 94,
            212, 36, 181, 469, 16, 331, 5, 279, 7, 334, 24, 266, 391, 89, 332,
            157, 272, 417, 158, 159, 335, 274, 507, 509, 276, 277, 506, 508, 21,
            69, 70, 71, 146, 148, 149, 151, 152, 153, 166, 168, 169, 170, 172,
            173, 310, 311, 312, 314, 315, 388, 389, 390, 408, 510, 511, 512,
            514, 515, 517, 518, 27, 38, 40, 44, 51, 53, 55, 110, 137, 164, 165,
            209, 215, 224, 357, 3, 4, 10, 17, 18, 19, 20, 23, 25, 31, 32, 33,
            34, 35, 37, 39, 41, 45, 46, 47, 48, 50, 52, 54, 57, 59, 61, 62, 63,
            64, 66, 67, 68, 72, 73, 87, 88, 90, 99, 103, 105, 106, 108, 109,
            111, 116, 117, 133, 134, 135, 136, 138, 139, 140, 143, 144, 145,
            154, 155, 156, 161, 174, 175, 176, 178, 179, 180, 222, 223, 225,
            226, 228, 229, 230, 231, 233, 234, 235, 236, 241, 242, 243, 244,
            245, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 260,
            261, 263, 264, 265, 271, 303, 304, 305, 306, 308, 309, 317, 318,
            319, 320, 337, 338, 339, 340, 343, 344, 346, 349, 354, 358, 360,
            361, 409, 410, 412, 422, 423, 424, 426, 427, 428, 429, 431, 432,
            439, 440, 441, 443, 445, 447, 448, 450, 452, 453, 454, 456, 457,
            460, 461, 462, 463, 465, 466, 467, 468, 471, 472, 473, 474, 475,
            477, 478, 479, 481, 482, 483, 484, 485, 487, 488, 491, 492, 494,
            496, 497, 499, 500, 501, 504, 505, 516, 183, 182, 207, 552, 553,
            554, 541, 96, 98, 359, 540, 28, 29, 30, 127, 128, 129, 130, 131,
            237, 238, 239, 399, 400, 401, 403, 405, 539, 78, 208, 121, 289, 367,
            186, 368, 378, 113, 114, 115, 288, 362, 370, 373, 184, 323, 325,
            327, 328, 330, 366, 376, 189, 120, 374, 375, 187, 85, 188, 322, 329,
            220, 393, 532, 86, 285, 326, 555, 292, 75, 123, 125, 397, 76, 77,
            118, 414, 556, 557, 283, 379, 380, 381, 122, 126, 299, 416, 192,
            293, 342, 191, 216, 345, 91, 205, 377, 433, 434, 435, 436, 92, 100,
            385, 8, 9, 12, 60, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203,
            204, 281, 382, 383, 384, 386, 387, 444, 419, 421, 363, 365, 302,
            418, 519, 530, 531, 562, 560, 558, 563, 564, 522, 523, 524, 525,
            526, 527, 528, 529
          ]
        ],
        "APSC_c": 0.9339034644617698
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [
            82, 533, 542, 495, 502, 212, 24, 332, 509, 146, 390, 51, 58, 108,
            179, 240, 258, 319, 360, 475, 497, 239, 368, 364
          ],
          [
            79, 392, 172, 518, 15, 139, 140, 228, 244, 260, 309, 353, 462, 492,
            541, 129, 367, 288, 184, 328, 189, 120, 520, 561
          ],
          [
            81, 535, 546, 2, 347, 333, 296, 169, 511, 163, 17, 50, 99, 180, 233,
            265, 338, 428, 454, 467, 486, 501, 98, 370, 75, 414, 381, 293, 525
          ],
          [
            83, 11, 350, 300, 266, 417, 277, 171, 280, 355, 65, 116, 226, 253,
            317, 344, 425, 457, 479, 553, 131, 208, 284
          ],
          [
            185, 13, 544, 1, 352, 415, 537, 101, 413, 498, 536, 534, 94, 181,
            16, 21, 147, 151, 167, 173, 313, 407, 513, 27, 44, 110, 137, 3, 19,
            31, 35, 43, 48, 57, 63, 67, 84, 90, 106, 111, 135, 136, 143, 144,
            174, 178, 223, 230, 235, 243, 248, 252, 257, 263, 303, 306, 320,
            340, 354, 410, 422, 427, 432, 440, 447, 453, 460, 464, 470, 474,
            480, 485, 491, 494, 499, 505, 552, 96, 28, 127, 238, 401, 406, 291,
            287, 186, 114, 369, 371, 219, 323, 325, 327, 330, 376, 374, 322,
            220, 326, 292, 379, 126, 91, 377, 434, 435, 92, 8, 12, 194, 197,
            201, 206, 386, 451, 363, 365, 530, 528
          ],
          [
            270, 0, 348, 438, 547, 446, 356, 210, 213, 36, 321, 211, 334, 391,
            394, 157, 272, 507, 276, 506, 508, 69, 148, 152, 168, 312, 388, 510,
            517, 42, 93, 164, 209, 215, 224, 4, 20, 32, 41, 45, 49, 61, 64, 73,
            105, 117, 132, 141, 142, 161, 176, 225, 231, 236, 246, 251, 254,
            261, 271, 316, 336, 343, 349, 411, 423, 429, 439, 443, 449, 455,
            461, 466, 471, 477, 483, 487, 496, 504, 516, 554, 359, 97, 398, 405,
            289, 286, 378, 113, 362, 187, 85, 188, 329, 86, 324, 555, 396, 74,
            124, 125, 76, 557, 380, 122, 342, 216, 282, 60, 195, 198, 200, 203,
            382, 384, 444, 119, 302, 420, 559, 560, 558
          ],
          [
            267, 395, 545, 550, 269, 104, 351, 459, 551, 294, 217, 214, 469,
            331, 5, 71, 150, 166, 310, 314, 389, 512, 515, 40, 55, 10, 23, 34,
            39, 47, 54, 59, 66, 68, 87, 102, 107, 133, 134, 155, 162, 177, 222,
            227, 232, 241, 245, 250, 256, 262, 273, 308, 337, 341, 358, 361,
            424, 430, 442, 448, 452, 458, 463, 468, 473, 478, 482, 488, 500,
            183, 182, 207, 540, 29, 128, 237, 399, 403, 78, 121, 375, 393, 532,
            285, 118, 299, 416, 192, 191, 345, 205, 433, 436, 100, 385, 9, 193,
            196, 199, 202, 281, 421, 519, 562, 563, 564, 523, 526, 529
          ],
          [
            80, 6, 56, 543, 22, 268, 538, 548, 437, 490, 307, 549, 275, 190,
            278, 521, 218, 95, 297, 298, 301, 279, 7, 89, 160, 158, 159, 335,
            274, 295, 70, 149, 153, 170, 311, 315, 408, 514, 38, 53, 165, 357,
            18, 25, 33, 37, 46, 52, 62, 72, 88, 103, 109, 138, 145, 154, 156,
            175, 221, 229, 234, 242, 247, 249, 255, 259, 264, 304, 305, 318,
            339, 346, 409, 412, 426, 431, 441, 445, 450, 456, 465, 472, 476,
            481, 484, 489, 493, 503, 14, 402, 404, 26, 30, 130, 400, 539, 290,
            372, 112, 115, 373, 366, 123, 397, 77, 556, 283, 204, 383, 387, 419,
            418, 531, 522, 524, 527
          ]
        ],
        "APSC_c": 0.9837229989864797
      }
    ]
  },
  {
    "filename": "apotapov_gdx-artemis.json",
    "name_to_id": {
      "com.artemis.ComponentMapperTest#testComponentCaching": 0,
      "com.artemis.EntityTest#testGetComponents": 1,
      "com.artemis.ParentMapperTest#testParentMapper": 2,
      "com.artemis.managers.ComponentManagerTest#testComponentReplace": 3,
      "com.artemis.managers.ComponentManagerTest#testGetComponents": 4,
      "com.artemis.managers.ComponentManagerTest#testRemoveComponent": 5,
      "com.artemis.managers.EntityManagerTest#testCreateNewEntityInstance": 6,
      "com.artemis.managers.EntityManagerTest#testReuseEntityInstance": 7,
      "com.artemis.managers.GenericGroupManagerTest#testGetEntities": 8,
      "com.artemis.managers.GenericGroupManagerTest#testGetGroups": 9,
      "com.artemis.managers.GenericGroupManagerTest#testInGroup": 10,
      "com.artemis.managers.GenericGroupManagerTest#testRemoveAll": 11,
      "com.artemis.managers.GroupManagerTest#testGetEntities": 12,
      "com.artemis.managers.GroupManagerTest#testGetGroups": 13,
      "com.artemis.managers.GroupManagerTest#testInGroup": 14,
      "com.artemis.managers.GroupManagerTest#testRemoveAll": 15,
      "com.artemis.managers.PlayerManagerTest#testDeleteEntity": 16,
      "com.artemis.managers.PlayerManagerTest#testSimple": 17,
      "com.artemis.managers.SingletonComponentManagerTest#testStorageRetrieval": 18,
      "com.artemis.managers.SingletonComponentManagerTest#testSystemAccess": 19,
      "com.artemis.managers.SingletonEntityManagerTest#testDeleteEntity": 20,
      "com.artemis.managers.SingletonEntityManagerTest#testSimple": 21,
      "com.artemis.managers.TeamManagerTest#testSimple": 22,
      "com.artemis.systems.EntityProcessingSystemTest#testDelete": 23,
      "com.artemis.systems.EntitySystemTest#testCheck": 24,
      "com.artemis.systems.ExpirationSystemTest#testExpiration": 25,
      "com.artemis.systems.ExpirationSystemTest#testExpirationWithTimerReuse": 26,
      "com.artemis.systems.PassiveSystemTest#testPassive": 27,
      "com.artemis.systems.SkipEntityProcessingSystemTest#testExpiration": 28,
      "com.artemis.systems.event.BasicEventDeliverySystemTest#testSimple": 29,
      "com.artemis.systems.event.EventProcessingSystemTest#testEventProcessingSystems": 30,
      "com.artemis.utils.IdentifierTest#testCheckIn": 31,
      "com.artemis.utils.IdentifierTest#testCheckOut": 32,
      "com.artemis.utils.IdentifierTest#testDispose": 33,
      "com.artemis.utils.SafeArrayTest#testGetSet": 34
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            30, 26, 25, 5, 19, 28, 1, 2, 23, 24, 16, 11, 15, 18, 29, 10, 14, 20,
            4, 3, 8, 12, 9, 13, 17, 27, 7, 21, 22, 0, 6, 34, 32, 31, 33
          ]
        ],
        "APSC_c": 0.8228444610972604
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [30, 5, 19, 2, 24, 11, 18, 14, 4, 8, 13, 17, 7, 21, 6, 34, 32, 33],
          [26, 25, 28, 1, 23, 16, 15, 29, 10, 20, 3, 12, 9, 27, 22, 0, 31]
        ],
        "APSC_c": 0.909318211295413
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [30, 1, 16, 15, 20, 12, 17, 6, 34, 32],
          [26, 19, 11, 10, 4, 9, 22, 31],
          [25, 2, 24, 29, 14, 8, 27, 0, 33],
          [5, 28, 23, 18, 3, 13, 7, 21]
        ],
        "APSC_c": 0.9489775331094811
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [30, 18, 13, 32],
          [26, 11, 4, 21],
          [25, 29, 14, 27, 33],
          [5, 15, 12, 22],
          [19, 10, 9],
          [28, 23, 3, 7, 0],
          [1, 16, 20, 17],
          [2, 24, 8, 6, 34, 31]
        ],
        "APSC_c": 0.9690173557569907
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [30, 0],
          [26, 7, 6],
          [25, 34],
          [5, 21],
          [19, 31],
          [28, 9],
          [1, 17],
          [2, 13],
          [23, 8],
          [24, 27],
          [16, 20],
          [11, 4],
          [15, 12],
          [18, 22],
          [29, 14, 32],
          [10, 3, 33]
        ],
        "APSC_c": 0.9833263679727918
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [26, 5, 1, 24, 18, 20, 8, 13, 7, 21, 31],
          [
            30, 25, 19, 28, 2, 23, 16, 11, 15, 29, 10, 14, 4, 3, 12, 9, 17, 27,
            22, 0, 6, 34, 32, 33
          ]
        ],
        "APSC_c": 0.9398943426861313
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [26, 19, 16, 18, 3, 13, 7, 22, 31],
          [
            30, 25, 5, 28, 1, 2, 23, 24, 11, 15, 29, 10, 14, 20, 4, 8, 12, 9,
            17, 27, 21, 0, 6, 34, 32, 33
          ]
        ],
        "APSC_c": 0.9541290417105004
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [26, 28, 16, 29, 20, 12, 27, 6, 33],
          [
            30, 25, 5, 19, 1, 2, 23, 24, 11, 15, 18, 10, 14, 4, 3, 8, 9, 13, 17,
            7, 21, 22, 0, 34, 32, 31
          ]
        ],
        "APSC_c": 0.9636637556263301
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [19],
          [28, 13],
          [1, 7, 6],
          [2, 17],
          [30, 16, 15, 20, 12, 22, 32],
          [26, 23, 18, 3, 27, 0],
          [25, 11, 29, 14, 8, 21],
          [5, 24, 10, 4, 9, 34, 31, 33]
        ],
        "APSC_c": 0.9897966354906736
      }
    ]
  },
  {
    "filename": "taksan_skype-java-api.json",
    "name_to_id": {
      "com.skype.AutoCallAPITest#testSendDTMF": 0,
      "com.skype.AutoChatAPITest#testGetAllActiveChat": 1,
      "com.skype.AutoChatAPITest#testGetAllBookmarkedChat": 2,
      "com.skype.AutoChatAPITest#testGetAllChat": 3,
      "com.skype.AutoChatAPITest#testGetAllMissedChat": 4,
      "com.skype.AutoChatAPITest#testGetAllRecentChat": 5,
      "com.skype.AutoDebugOutTest#testBasic": 6,
      "com.skype.AutoMainWindowStateTest#testBasic": 7,
      "com.skype.AutoSkypeClientAPITest#test": 8,
      "com.skype.AutoVoiceMailAPITest#testGetAllVoiceMails": 9,
      "com.skype.AutoVoiceMailAPITest#testVoiceMail": 10,
      "com.skype.ChatMessageEditConnectorListenerTest#onProcessMessage_ShouldTriggerListenerEventIfEditSequenceIsMet": 11,
      "com.skype.CountryIsoByCountryNameTest#onGetIsoForCountry_ShouldReturnCountryIso": 12,
      "com.skype.FriendTest#testFriendProperties": 13,
      "com.skype.FriendTest#testGetAllFriends": 14,
      "com.skype.ProfileTest#testBasic": 15,
      "com.skype.SkypeTest#addListener_ShouldNotAddListenerIfExceptionIsThrown": 16,
      "com.skype.connector.AutoPropertyTest#testBasic": 17,
      "com.skype.connector.ConnectorTest#testProperty": 18,
      "com.skype.connector.ConnectorUtilsTest#getConnectorInstance_ShouldReturnValidConnector": 19,
      "com.skype.connector.ConnectorUtilsTest#getTempDir_ShouldReturnARandomTemporaryDirUnderTempDir": 20,
      "com.skype.connector.osx.OSXConnectorTest#onFixLegacyMessage_ShouldAddChatPrefix": 21,
      "com.skype.connector.test.AutoConnectorTest#testCall": 22,
      "com.skype.connector.test.AutoConnectorTest#testGetVersion": 23
    },
    "results": [
      {
        "scenario": [1],
        "permutations": [
          [
            13, 15, 22, 10, 0, 6, 14, 1, 2, 3, 4, 5, 9, 7, 23, 8, 11, 16, 17,
            18, 20, 12, 21, 19
          ]
        ],
        "APSC_c": 0.694388321253967
      },
      {
        "scenario": [1, 1],
        "permutations": [
          [13, 10, 0, 6, 14, 1, 2, 3, 4, 5, 9, 7],
          [15, 22, 23, 8, 11, 16, 17, 18, 20, 12, 21, 19]
        ],
        "APSC_c": 0.8843393515738913
      },
      {
        "scenario": [1, 1, 1, 1],
        "permutations": [
          [13, 6, 14, 1, 2, 3, 4, 5, 9, 7],
          [15, 0],
          [22],
          [10, 23, 8, 11, 16, 17, 18, 20, 12, 21, 19]
        ],
        "APSC_c": 0.9704168989621752
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [13, 21],
          [15, 11, 17, 20, 19],
          [22],
          [10],
          [0],
          [6, 3, 9, 23, 8, 16, 18, 12],
          [14, 4, 7],
          [1, 2, 5]
        ],
        "APSC_c": 0.9855521574892071
      },
      {
        "scenario": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        "permutations": [
          [13],
          [15],
          [22],
          [10],
          [0],
          [6],
          [14],
          [1, 17, 12],
          [2],
          [3],
          [4],
          [5],
          [9, 18, 21],
          [7],
          [23, 16, 19],
          [8, 11, 20]
        ],
        "APSC_c": 0.9870304950395974
      },
      {
        "scenario": [1, 2],
        "permutations": [
          [15, 10, 0, 23, 8, 11, 16, 17, 18, 20, 12, 21, 19],
          [13, 22, 6, 14, 1, 2, 3, 4, 5, 9, 7]
        ],
        "APSC_c": 0.9168038773694142
      },
      {
        "scenario": [1, 3],
        "permutations": [
          [15, 10, 0],
          [
            13, 22, 6, 14, 1, 2, 3, 4, 5, 9, 7, 23, 8, 11, 16, 17, 18, 20, 12,
            21, 19
          ]
        ],
        "APSC_c": 0.9300809138862682
      },
      {
        "scenario": [1, 4],
        "permutations": [
          [15, 10, 0],
          [
            13, 22, 6, 14, 1, 2, 3, 4, 5, 9, 7, 23, 8, 11, 16, 17, 18, 20, 12,
            21, 19
          ]
        ],
        "APSC_c": 0.9458554523329616
      },
      {
        "scenario": [1, 1, 1, 1, 4, 4, 4, 4],
        "permutations": [
          [0],
          [6, 3],
          [14, 23, 8, 16, 20],
          [1, 2, 11, 17, 18],
          [13, 5, 12, 21, 19],
          [15, 4, 9, 7],
          [22],
          [10]
        ],
        "APSC_c": 0.9936979729536554
      }
    ]
  }
]
